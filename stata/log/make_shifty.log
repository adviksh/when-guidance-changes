
  ___  ____  ____  ____  ____ (R)
 /__    /   ____/   /   ____/
___/   /   /___/   /   /___/   16.1   Copyright 1985-2019 StataCorp LLC
  Statistics/Data analysis            StataCorp
                                      4905 Lakeway Drive
                                      College Station, Texas 77845 USA
                                      800-STATA-PC        https://www.stata.com
                                      979-696-4600        stata@stata.com
                                      979-696-4601 (fax)

Stata license: 30-user network perpetual
Serial number: 501606266566
  Licensed to: Department of Economics
               MIT ECON

Notes:
      1. Stata is running in batch mode.
      2. Unicode is supported; see help unicode_advice.

. do code/make_shifty.do 

. set seed 50

. 
. /* Tables 2 and 4: Inconsistent effect on belief updates and gov credibility 
> */
. do code/changing.do

. /*****************************************************/
. /* /\* This dofile builds the info vs. shifty graphs *\/ */
. /*****************************************************/
. if "`c(username)'" == "pierre-lucvautrey" {
.   do ~/Documents/Github/COVID/SetGlobals.do
. }

. else{
.   do ../SetGlobals.do

. version 13

. * set the number of ri replications
. global reps 1000

. 
. /* Sets stata globals */
. global raw = "../data"

. global int = "../data"

. 
. if "`c(username)'" == "charlierafkin" {
.   global raw = "~/Dropbox (MIT)/COVID/data/raw_decrypted/"
.   global int = "~/Dropbox (MIT)/COVID/data/intermediate/"
. }

. if "`c(username)'" == "pierre-lucvautrey" {
.   global raw = "~/Dropbox (MIT)/COVID/data/raw_decrypted/"
.   global int = "~/Dropbox (MIT)/COVID/data/intermediate/"
. }

. 
. global navy `" "51 122 183" "'

. global green `" "92 184 92" "'

. global ltblue `" "91 192 222" "'

. global red `" "217 83 79" "'

. global orange `" "240 173 78" "'

. 
. qui {

. 
. if "`c(username)'" == "pierre-lucvautrey" {
.   do ~/documents/github/COVID/programs.do
. }

. else{
.   do ../programs.do

. /*
> 
> Convert eps to pdf in mac Stata
> Author: CR
> Date: April 2018
> 
> */
. 
. 
. capture pr drop conversion

. capture pr define conversion

. 
. capture pr drop grout

. capture pr define grout

. 
. /******************************************/
. /* /\***** deflate cpi, base year *****\/ */
. /******************************************/
. capture pr drop get_cpi_deflator

. capture pr define get_cpi_deflator

. 
. 
. 
. 
. 
. 
. 
. /* other graphing/output programs that we want */
. 
. /****************************************************************************
> *********/
. /* program store_est_tpl : store b, se, p-values in format suitable for table
> _to_tpl */
. /****************************************************************************
> *********/
. cap prog drop store_est_tpl

. prog def store_est_tpl
  1. {
  2.   syntax using/,  coef(string) name(string) [format(string) beta se p n r2
>  all]
  3. 
.   /* turn on all flags if `all' is specified */
.   if !mi("`all'") {
  4.     local beta beta
  5.     local se se
  6.     local p p
  7.     local n n
  8.     local r2 r2
  9.   }
 10. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
 11. 
.   /* manage beta */
.   if !mi("`beta'") {
 12. 
.     /* store beta in the desired format */
.     local b3:  di `format' _b["`coef'"]
 13.     test `coef' = 0
 14.     local pvalue = `r(p)'
 15.     /* write p value (only makes sense if beta also specified) */
.     if !mi("`p'") {
 16.       insert_into_file using `using', key("`name'_p") value(" `pvalue'") f
> ormat("%5.2f")
 17.     }
 18. 
.     /* write beta to file */
.     insert_into_file using `using', key("`name'_beta") value(" `b3'") format(
> "`format'")
 19. 
.     /* count stars on the p and create starbeta */
.     count_stars, p(`pvalue')
 20.     insert_into_file using `using', key("`name'_starbeta") value(" `b3'`r(
> stars)'") format("`format'")
 21.   }
 22. 
.   /* manage se */
.   if !mi("`se'") {
 23.     local se3:  di `format' _se["`coef'"]
 24.     insert_into_file using `using', key("`name'_se") value(" `se3'")
 25.   }
 26. 
.   /* manage n */
.   if !mi("`n'") {
 27.     insert_into_file using `using', key("`name'_n") value(" `e(N)'") forma
> t("%1.0f")
 28.   }
 29. 
.   /* manage r2 */
.   if !mi("`r2'") {
 30.     insert_into_file using `using', key("`name'_r2") value(" `e(r2)'") for
> mat("%5.2f")
 31.   }
 32. }
 33. end

. /* *********** END program store_est_tpl ************************************
> ***** */
. 
. /****************************************************************************
> *********/
. /* program store_val_tpl : store value to a file with string and format      
>         */
. /****************************************************************************
> *********/
. cap prog drop store_val_tpl

. prog def store_val_tpl
  1. {
  2.   syntax using/,  Name(string) Value(string) [Format(string)]
  3. 
.   di `""store_val_tpl, name value format" is deprecated -- please use "insert
> _into_file, key value format" instead"'
  4. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
  5. 
.   /* get value in appropriate format (unless it's already a string) */
.   if !mi(real("`value'")) {
  6.     local v : di `format' `value'
  7.   }
  8.   else {
  9.     local v `value'
 10.   }
 11. 
.   /* write line to file */
.   append_to_file using `using', s("`name',`v'")
 12. }
 13. end

. /* *********** END program store_val_tpl ************************************
> ***** */
. 
. /****************************************************************************
> ***********************/
. /* program table_from_tpl : Create a table from a stored estimates file and a
>  .tex table template  */
. /****************************************************************************
> ***********************/
. cap prog drop table_from_tpl

. prog def table_from_tpl
  1. {
  2.   syntax, Template(string) Replacement(string) Output(string) [Verbose add
> stars dropstars]
  3. 
.   /* set up verbose flag */
.   if !mi("`verbose'") {
  4.       local v "-v"
  5.   }
  6.   else {
  7.       local v
  8.   }
  9. 
. 
.   /* if python path is not set, use current folder */
.   if mi("$PYTHONPATH") {
 10. 
.       /* set path to current folder */
.       local path .
 11.   }
 12.   else {
 13.       local path $PYTHONPATH
 14.   }
 15. 
.   /* check python file existence */
.   cap confirm file `path'/table_from_tpl.py
 16.   if _rc {
 17.       display as error "ERROR: table_from_tpl.py not found. Put in current
>  folder or folder defined by global \$PYTHONPATH"
 18.       error -1
 19.   }
 20. 
.   /* deal with addstars/dropstars parameters */
.   if "`addstars'" == "addstars" {
 21.     local star_param "--add-stars"
 22.   }
 23.   if "`dropstars'" == "dropstars" {
 24.     local star_param "--drop-stars"
 25.   }
 26. 
.   local pycommand `path'/table_from_tpl.py -t `template' -r `replacement' -o 
> `output' `v' `star_param'
 27.   if !mi("`verbose'") {
 28.       di `"Running `pycommand' "'
 29.   }
 30. 
.   shell python `pycommand'
 31.   cap confirm file `output'
 32.   if !_rc {
 33.     display "Created `output'."
 34.   }
 35.   else {
 36.     display "Could not create `output'."
 37.     error 1
 38.   }
 39. 
.   /* clean up the temporary file if star/nostar specified */
.   if !mi("`stars'") {
 40.     !rm $tmp/tpl_sed_tmp.tex
 41.   }
 42. }
 43. end

. /* *********** END program table_from_tpl ***********************************
> ****** */
. 
. /****************************************************************************
> ******/
. /* program append_to_file : Append a passed in string to a file              
>      */
. /****************************************************************************
> ******/
. cap prog drop append_to_file

. prog def append_to_file
  1. {
  2.   syntax using/, String(string)
  3. 
.   cap file close fh
  4.   file open fh using `using', write append
  5.   file write fh  `"`string'"'  _n
  6.   file close fh
  7. }
  8. end

. /* *********** END program append_to_file ***********************************
> ****** */
. 
. /****************************************************************************
> ******/
. /* program insert_into_file : Insert a key-value pair into a file            
>      */
. /*
> Assume "using" csv file take a key, value format, e.g.:
> 
> est1,3.544
> est2,3.234***
> ...
> 
> "est1" is the key. "3.544" is the value.
> 
> Example:
> 
> insert_into_file using $tmp/estimates.csv, key(est1) value(3.54493) format(%5
> .2f)
> 
> - if "est1" is not already in estimates file, it will be appended
> - if "est1" is already in estimates file, its value will be replaced with the
>  passed in parameter
> - estimates file will be created if it does not already exist
> 
> */
. 
. /****************************************************************************
> *******/
. cap prog drop insert_into_file

. prog def insert_into_file
  1. {
  2.   syntax using/, Key(string) Value(string) [Format(string) verbose]
  3. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
  4. 
.   /* get value in correct format (unless it's a string) */
.   if !mi(real("`value'")) {
  5.     local value : di `format' `value'
  6.   }
  7.   else {
  8.     local value `value'
  9.   }
 10. 
.   /* confirm file handles are closed */
.   cap file close fout
 11.   cap file close fin
 12. 
.   /* create a temporary file for writing */
.   tempfile tempfile
 13.   qui file open fout using `tempfile', write replace
 14. 
.   /* if input file doesn't exist, create it and display a notification */
.   cap confirm file `using'
 15.   if _rc {
 16.     if !mi("`verbose'") {
 17.       di "Creating new file `using'..."
 18.     }
 19.   }
 20. 
.   /* else, open the input file and read the first line */
.   else {
 21.     file open fin using `using', read
 22. 
.     /* read the first line */
.     file read fin line
 23.   }
 24. 
.   /* store a flag indicating whether we found the line or not */
.   local found 0
 25. 
.   /* loop over all lines of the file */
.   while r(eof) == 0 {
 26. 
.     /* check if line matches the current key */
.     if regexm("`line'", "^`key',") {
 27. 
.       /* if verbose, show what we're replacing  */
.       if !mi("`verbose'") {
 28.         di `"Replacing "`line'" with "`key',`value'"..."'
 29.       }
 30.       local found 1
 31. 
.       /* replace the line with key,value */
.       local line `key',`value'
 32.     }
 33. 
.     /* write the line to the output file */
.     file write fout "`line'" _n
 34. 
.     /* read the next line */
.     file read fin line
 35.   }
 36. 
.   /* if we didn't find this key, append it to the end */
.   if `found' == 0 {
 37.     file write fout "`key',`value'" _n
 38.   }
 39. 
.   /* close input and output files */
.   cap file close fin
 40.   file close fout
 41. 
.   /* copy the temporary file to the `using` filename */
.   copy `tempfile' `using', replace
 42. }
 43. end

. /* *********** END program insert_into_file *********************************
> ******** */
. 
. /****************************************************************************
> ******/
. /* program count_stars : return a string with the right number of stars      
>      */
. /****************************************************************************
> ******/
. cap prog drop count_stars

. prog def count_stars, rclass
  1. {
  2.   syntax, p(real)
  3.   local star = ""
  4.   if `p' <= 0.1  local star = "*"
  5.   if `p' <= 0.05 local star = "**"
  6.   if `p' <= 0.01 local star = "***"
  7.   return local stars = "`star'"
  8. }
  9. end

. /* *********** END program count_stars **************************************
> *** */
. 
. 
end of do-file
. }

. global PYTHONPATH = "code"

. 
end of do-file
. }

. clear 

. version 13

. 
. /****************************/
. /* program that generates the update magnitudes */
. /****************************/
. cap pr drop make_update_table

. cap pr define make_update_table

. 
. qui make_update_table

. qui make_update_table, sample(nontrump)

. 
. /* load the sample */ 
. use "$int/public_data" , clear 

. keep if !mi(shifty)
(0 observations deleted)

. destring stratum, replace
stratum: all characters numeric; replaced as byte

. 
. 
. 
. /************************/
. /* 2. government index  */
. /************************/
. cap !rm -f out/gov_magnitude.csv

. 
. /* put observations into file */ 
. count
  1,900

. insert_into_file using out/gov_magnitude.csv, key(allobs) val(`r(N)') format(
> %9.0fc) 
(note: file out/gov_magnitude.csv not found)

. count if priors_below_info == 1 
  909

. insert_into_file using out/gov_magnitude.csv, key(belowobs) val(`r(N)') forma
> t(%9.0fc)  // "priors BELOW info"

. count if priors_at_info == 1 
  544

. insert_into_file using out/gov_magnitude.csv, key(atobs) val(`r(N)') format(%
> 9.0fc)  // "priors AT info"

. count if priors_above_info == 1 
  447

. insert_into_file using out/gov_magnitude.csv, key(aboveobs) val(`r(N)') forma
> t(%9.0fc)  // "priors ABOVE info"

. 
. foreach outcome in gov_index gov_not_strong gov_app gov_overreact gov_has_pri
> vate_info vote_trump  {
  2.   assert !mi(`outcome'_post)
  3.   assert !mi(`outcome'_pre)
  4.   
.   * regress on everyone 
.   qui  reghdfe `outcome'_post_std shifty `outcome'_pre_std , absorb(stratum) 
> vce(rob)
  5.   matrix mat = r(table)    
  6.   store_est_tpl using out/gov_magnitude.csv, name(`outcome') coef(shifty) 
> all format(%9.3fc)
  7.   local p = mat[4,1]
  8.   insert_into_file using out/gov_magnitude.csv, key(`outcome'_p) val(`p') 
> format(%9.3fc)
  9. 
.   * priors < info 
. qui  reghdfe `outcome'_post_std shifty `outcome'_pre_std if priors_above_info
>  == 1 , absorb(stratum) vce(rob)
 10.   store_est_tpl using out/gov_magnitude.csv, name(`outcome'_above) coef(sh
> ifty) all format(%9.3fc)
 11. 
.   * priors = info 
.   qui  reghdfe `outcome'_post_std shifty `outcome'_pre_std if priors_at_info 
> == 1 , absorb(stratum) vce(rob)
 12.   store_est_tpl using out/gov_magnitude.csv, name(`outcome'_at) coef(shift
> y) all format(%9.3fc)
 13.   
.   * priors > info
. qui  reghdfe `outcome'_post_std shifty `outcome'_pre_std if priors_below_info
>  == 1 , absorb(stratum) vce(rob)
 14.   store_est_tpl using out/gov_magnitude.csv, name(`outcome'_below) coef(sh
> ifty) all format(%9.3fc)
 15. 
. }

 ( 1)  shifty = 0

       F(  1,  1880) =    5.77
            Prob > F =    0.0164

 ( 1)  shifty = 0

       F(  1,   427) =    0.10
            Prob > F =    0.7497

 ( 1)  shifty = 0

       F(  1,   524) =    6.18
            Prob > F =    0.0133

 ( 1)  shifty = 0

       F(  1,   889) =    0.96
            Prob > F =    0.3280

 ( 1)  shifty = 0

       F(  1,  1880) =    0.02
            Prob > F =    0.8887

 ( 1)  shifty = 0

       F(  1,   427) =    0.26
            Prob > F =    0.6101

 ( 1)  shifty = 0

       F(  1,   524) =    0.16
            Prob > F =    0.6937

 ( 1)  shifty = 0

       F(  1,   889) =    0.69
            Prob > F =    0.4053

 ( 1)  shifty = 0

       F(  1,  1880) =   21.41
            Prob > F =    0.0000

 ( 1)  shifty = 0

       F(  1,   427) =    0.62
            Prob > F =    0.4311

 ( 1)  shifty = 0

       F(  1,   524) =   17.38
            Prob > F =    0.0000

 ( 1)  shifty = 0

       F(  1,   889) =    7.08
            Prob > F =    0.0079

 ( 1)  shifty = 0

       F(  1,  1880) =    1.44
            Prob > F =    0.2303

 ( 1)  shifty = 0

       F(  1,   427) =    0.37
            Prob > F =    0.5421

 ( 1)  shifty = 0

       F(  1,   524) =    2.00
            Prob > F =    0.1579

 ( 1)  shifty = 0

       F(  1,   889) =    0.34
            Prob > F =    0.5573

 ( 1)  shifty = 0

       F(  1,  1880) =    0.02
            Prob > F =    0.8939

 ( 1)  shifty = 0

       F(  1,   427) =    1.44
            Prob > F =    0.2303

 ( 1)  shifty = 0

       F(  1,   524) =    0.03
            Prob > F =    0.8523

 ( 1)  shifty = 0

       F(  1,   889) =    0.01
            Prob > F =    0.9177

 ( 1)  shifty = 0

       F(  1,  1880) =    0.44
            Prob > F =    0.5054

 ( 1)  shifty = 0

       F(  1,   427) =    1.67
            Prob > F =    0.1965

 ( 1)  shifty = 0

       F(  1,   524) =    0.01
            Prob > F =    0.9419

 ( 1)  shifty = 0

       F(  1,   889) =    0.02
            Prob > F =    0.8818

. 
. 
. /*************/
. /* p-values  */
. /*************/
. reg gov_index_post_std shifty i.stratum gov_index_pre_std if priors_below_inf
> o == 1 

      Source |       SS           df       MS      Number of obs   =       909
-------------+----------------------------------   F(19, 889)      =     69.45
       Model |  150.822457        19  7.93802405   Prob > F        =    0.0000
    Residual |  101.604346       889  .114290602   R-squared       =    0.5975
-------------+----------------------------------   Adj R-squared   =    0.5889
       Total |  252.426802       908  .278003086   Root MSE        =    .33807

------------------------------------------------------------------------------
gov_in~t_std |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.0219778   .0225086    -0.98   0.329     -.066154    .0221983
             |
     stratum |
          2  |  -.0163508    .055514    -0.29   0.768    -.1253046     .092603
          3  |   .0703008   .0612493     1.15   0.251    -.0499094    .1905109
          4  |   .0676203   .0698227     0.97   0.333    -.0694161    .2046568
          5  |   .0176987   .0594324     0.30   0.766    -.0989455     .134343
          6  |   .1258356   .0615903     2.04   0.041     .0049563    .2467149
          7  |   .0246568   .0644357     0.38   0.702    -.1018069    .1511206
          8  |   .1004001   .0748093     1.34   0.180    -.0464234    .2472235
          9  |   .1430552   .0661061     2.16   0.031     .0133131    .2727974
         10  |   .0560558   .0596167     0.94   0.347    -.0609501    .1730618
         11  |   .0132498   .0585799     0.23   0.821    -.1017211    .1282208
         12  |   .0052285   .0605408     0.09   0.931    -.1135911    .1240481
         13  |  -.0502777   .0712548    -0.71   0.481    -.1901249    .0895694
         14  |   .0377346   .0640465     0.59   0.556    -.0879655    .1634346
         15  |   .0642366   .0575094     1.12   0.264    -.0486333    .1771065
         16  |  -.0125067   .0892435    -0.14   0.889    -.1876592    .1626458
         17  |   .0010914   .0690614     0.02   0.987     -.134451    .1366339
         18  |   .1398158   .0616617     2.27   0.024     .0187963    .2608352
             |
gov_in~e_std |   .7656512   .0238678    32.08   0.000     .7188074     .812495
       _cons |   -.032464   .0414969    -0.78   0.434    -.1139074    .0489794
------------------------------------------------------------------------------

. estimates store gov_index_post_std_below

. 
. reg gov_index_post_std shifty i.stratum gov_index_pre_std if priors_at_info =
> = 1 

      Source |       SS           df       MS      Number of obs   =       544
-------------+----------------------------------   F(19, 524)      =     58.06
       Model |  128.275239        19  6.75132838   Prob > F        =    0.0000
    Residual |  60.9265698       524   .11627208   R-squared       =    0.6780
-------------+----------------------------------   Adj R-squared   =    0.6663
       Total |  189.201809       543  .348437954   Root MSE        =    .34099

------------------------------------------------------------------------------
gov_in~t_std |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.0754452   .0297635    -2.53   0.012    -.1339156   -.0169748
             |
     stratum |
          2  |  -.1035255   .0851878    -1.22   0.225    -.2708771     .063826
          3  |  -.0572793   .0987832    -0.58   0.562     -.251339    .1367804
          4  |   .0277616   .0744465     0.37   0.709    -.1184887     .174012
          5  |    .027054   .0898614     0.30   0.763    -.1494788    .2035868
          6  |   .1537991   .0827292     1.86   0.064    -.0087226    .3163209
          7  |    .043673   .0805927     0.54   0.588    -.1146516    .2019976
          8  |   .1237169   .0960513     1.29   0.198    -.0649761    .3124098
          9  |   .1211332   .0809277     1.50   0.135    -.0378494    .2801159
         10  |  -.0324916   .0868905    -0.37   0.709    -.2031881    .1382049
         11  |   .0196266   .0959019     0.20   0.838    -.1687728    .2080259
         12  |  -.0500949   .0861872    -0.58   0.561    -.2194098      .11922
         13  |  -.1423358   .0805547    -1.77   0.078    -.3005856    .0159139
         14  |  -.0505366    .085257    -0.59   0.554    -.2180241    .1169509
         15  |   .0443269   .0791158     0.56   0.576    -.1110963      .19975
         16  |  -.0240505    .081902    -0.29   0.769    -.1849472    .1368462
         17  |   .0944183   .0814645     1.16   0.247    -.0656188    .2544555
         18  |  -.0536392   .0851652    -0.63   0.529    -.2209464    .1136681
             |
gov_in~e_std |   .8109776   .0284524    28.50   0.000     .7550829    .8668724
       _cons |   .0133189   .0576132     0.23   0.817    -.0998623    .1265001
------------------------------------------------------------------------------

. estimates store gov_index_post_std_at

. 
. reg gov_index_post_std shifty i.stratum gov_index_pre_std if priors_above_inf
> o == 1

      Source |       SS           df       MS      Number of obs   =       447
-------------+----------------------------------   F(19, 427)      =     40.87
       Model |  89.2239199        19  4.69599578   Prob > F        =    0.0000
    Residual |  49.0624187       427  .114900278   R-squared       =    0.6452
-------------+----------------------------------   Adj R-squared   =    0.6294
       Total |  138.286339       446  .310059055   Root MSE        =    .33897

------------------------------------------------------------------------------
gov_in~t_std |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.0106824   .0326998    -0.33   0.744    -.0749551    .0535903
             |
     stratum |
          2  |   .1440082   .0735809     1.96   0.051    -.0006176     .288634
          3  |   .2055011      .0865     2.38   0.018     .0354822    .3755199
          4  |    .197607   .0802848     2.46   0.014     .0398044    .3554096
          5  |   .0258716   .0856317     0.30   0.763    -.1424406    .1941839
          6  |   .1612964   .0906254     1.78   0.076     -.016831    .3394239
          7  |  -.0121093   .0783815    -0.15   0.877    -.1661709    .1419524
          8  |   .1513653    .093724     1.62   0.107    -.0328525    .3355831
          9  |   .2348357   .0957857     2.45   0.015     .0465655     .423106
         10  |    .037598    .078891     0.48   0.634     -.117465     .192661
         11  |    .016057   .0922679     0.17   0.862    -.1652988    .1974129
         12  |   .0649436   .0832234     0.78   0.436    -.0986349    .2285221
         13  |    .054942   .0923173     0.60   0.552     -.126511    .2363949
         14  |   .0324715   .0998501     0.33   0.745    -.1637873    .2287304
         15  |   .1351612   .0833255     1.62   0.106     -.028618    .2989404
         16  |  -.0663693   .1048427    -0.63   0.527    -.2724413    .1397027
         17  |   .1722634   .1046378     1.65   0.100    -.0334058    .3779326
         18  |   .0280582    .112888     0.25   0.804    -.1938272    .2499436
             |
gov_in~e_std |   .7701271   .0331536    23.23   0.000     .7049625    .8352917
       _cons |  -.1411091   .0550337    -2.56   0.011    -.2492797   -.0329385
------------------------------------------------------------------------------

. estimates store gov_index_post_std_above

. 
. /* TEST 1: below vs at */ 
. 
. suest gov_index_post_std_below gov_index_post_std_at, rob 

Simultaneous results for gov_index_post_std_below, gov_index_post_std_at

                                                Number of obs     =      1,453

------------------------------------------------------------------------------
             |               Robust
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
gov_index_~n |
      shifty |  -.0219778   .0222171    -0.99   0.323    -.0655225    .0215669
             |
     stratum |
          2  |  -.0163508   .0535168    -0.31   0.760    -.1212418    .0885402
          3  |   .0703008   .0520759     1.35   0.177    -.0317662    .1723678
          4  |   .0676203   .0648131     1.04   0.297     -.059411    .1946517
          5  |   .0176987   .0574818     0.31   0.758    -.0949636     .130361
          6  |   .1258356   .0681634     1.85   0.065    -.0077622    .2594334
          7  |   .0246568   .0784672     0.31   0.753    -.1291361    .1784498
          8  |   .1004001   .0723021     1.39   0.165    -.0413094    .2421095
          9  |   .1430552   .0620915     2.30   0.021     .0213581    .2647524
         10  |   .0560558   .0631417     0.89   0.375    -.0676996    .1798112
         11  |   .0132498   .0533667     0.25   0.804    -.0913469    .1178466
         12  |   .0052285   .0580307     0.09   0.928    -.1085096    .1189667
         13  |  -.0502777   .0785936    -0.64   0.522    -.2043183    .1037628
         14  |   .0377346   .0537771     0.70   0.483    -.0676666    .1431357
         15  |   .0642366   .0565486     1.14   0.256    -.0465966    .1750698
         16  |  -.0125067   .0928754    -0.13   0.893    -.1945391    .1695256
         17  |   .0010914   .0651674     0.02   0.987    -.1266344    .1288173
         18  |   .1398158   .0623302     2.24   0.025     .0176508    .2619807
             |
gov_in~e_std |   .7656512   .0237104    32.29   0.000     .7191796    .8121228
       _cons |   -.032464    .041657    -0.78   0.436    -.1141102    .0491822
-------------+----------------------------------------------------------------
gov_index_~r |
       _cons |  -2.169011   .0596571   -36.36   0.000    -2.285937   -2.052085
-------------+----------------------------------------------------------------
gov_index_~n |
      shifty |  -.0754452   .0298056    -2.53   0.011     -.133863   -.0170274
             |
     stratum |
          2  |  -.1035255   .0690759    -1.50   0.134    -.2389118    .0318607
          3  |  -.0572793   .0946063    -0.61   0.545    -.2427043    .1281456
          4  |   .0277616   .0801821     0.35   0.729    -.1293924    .1849157
          5  |    .027054   .0625985     0.43   0.666    -.0956369    .1497449
          6  |   .1537991   .0765636     2.01   0.045     .0037371    .3038611
          7  |    .043673   .0741846     0.59   0.556    -.1017262    .1890722
          8  |   .1237169   .0854992     1.45   0.148    -.0438585    .2912922
          9  |   .1211332   .0653925     1.85   0.064    -.0070338    .2493003
         10  |  -.0324916   .0961289    -0.34   0.735    -.2209008    .1559176
         11  |   .0196266   .1012599     0.19   0.846    -.1788392    .2180924
         12  |  -.0500949   .0749133    -0.67   0.504    -.1969222    .0967325
         13  |  -.1423358   .0709135    -2.01   0.045    -.2813238   -.0033479
         14  |  -.0505366   .0682434    -0.74   0.459    -.1842913    .0832181
         15  |   .0443269   .0663153     0.67   0.504    -.0856488    .1743025
         16  |  -.0240505   .0730073    -0.33   0.742    -.1671422    .1190413
         17  |   .0944183   .0628904     1.50   0.133    -.0288446    .2176812
         18  |  -.0536392   .0604401    -0.89   0.375    -.1720995    .0648212
             |
gov_in~e_std |   .8109776   .0275856    29.40   0.000      .756911    .8650443
       _cons |   .0133189   .0432684     0.31   0.758    -.0714856    .0981234
-------------+----------------------------------------------------------------
gov_index_~r |
       _cons |  -2.151822   .0864339   -24.90   0.000     -2.32123   -1.982415
------------------------------------------------------------------------------

. test [gov_index_post_std_below_mean][shifty] = [gov_index_post_std_at_mean][s
> hifty]

 ( 1)  [gov_index_post_std_below_mean]shifty -
       [gov_index_post_std_at_mean]shifty = 0

           chi2(  1) =    2.07
         Prob > chi2 =    0.1504

. insert_into_file using out/gov_magnitude.csv, key(gov_index_p_below_at) val(`
> r(p)') format(%9.3fc)

. 
. /* TEST 2: above vs. at */ 
. suest gov_index_post_std_above gov_index_post_std_at, rob 

Simultaneous results for gov_index_post_std_above, gov_index_post_std_at

                                                Number of obs     =        991

------------------------------------------------------------------------------
             |               Robust
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
gov_index_~n |
      shifty |  -.0106824   .0327232    -0.33   0.744    -.0748186    .0534538
             |
     stratum |
          2  |   .1440082   .0694406     2.07   0.038     .0079071    .2801093
          3  |   .2055011   .0899649     2.28   0.022     .0291731     .381829
          4  |    .197607   .0724978     2.73   0.006      .055514       .3397
          5  |   .0258716   .0795399     0.33   0.745    -.1300237    .1817669
          6  |   .1612964   .0911757     1.77   0.077    -.0174047    .3399976
          7  |  -.0121093   .0785389    -0.15   0.877    -.1660427    .1418241
          8  |   .1513653   .1009233     1.50   0.134    -.0464407    .3491713
          9  |   .2348357   .1047708     2.24   0.025     .0294886    .4401828
         10  |    .037598   .0856035     0.44   0.661    -.1301817    .2053778
         11  |    .016057   .0825728     0.19   0.846    -.1457827    .1778968
         12  |   .0649436   .0903895     0.72   0.472    -.1122166    .2421038
         13  |    .054942   .0892787     0.62   0.538    -.1200411     .229925
         14  |   .0324715   .0926272     0.35   0.726    -.1490744    .2140175
         15  |   .1351612   .0713884     1.89   0.058    -.0047575      .27508
         16  |  -.0663693   .1186389    -0.56   0.576    -.2988972    .1661586
         17  |   .1722634   .0800621     2.15   0.031     .0153444    .3291823
         18  |   .0280582   .1029308     0.27   0.785    -.1736825    .2297989
             |
gov_in~e_std |   .7701271    .034685    22.20   0.000     .7021457    .8381085
       _cons |  -.1411091   .0551111    -2.56   0.010    -.2491248   -.0330933
-------------+----------------------------------------------------------------
gov_index_~r |
       _cons |  -2.163691    .073672   -29.37   0.000    -2.308085   -2.019296
-------------+----------------------------------------------------------------
gov_index_~n |
      shifty |  -.0754452   .0298103    -2.53   0.011    -.1338724    -.017018
             |
     stratum |
          2  |  -.1035255    .069087    -1.50   0.134    -.2389336    .0318825
          3  |  -.0572793   .0946215    -0.61   0.545    -.2427341    .1281754
          4  |   .0277616    .080195     0.35   0.729    -.1294177     .184941
          5  |    .027054   .0626086     0.43   0.666    -.0956566    .1497646
          6  |   .1537991   .0765759     2.01   0.045      .003713    .3038852
          7  |    .043673   .0741965     0.59   0.556    -.1017495    .1890956
          8  |   .1237169   .0855129     1.45   0.148    -.0438854    .2913191
          9  |   .1211332    .065403     1.85   0.064    -.0070544    .2493209
         10  |  -.0324916   .0961443    -0.34   0.735    -.2209311    .1559478
         11  |   .0196266   .1012762     0.19   0.846    -.1788711    .2181242
         12  |  -.0500949   .0749253    -0.67   0.504    -.1969458     .096756
         13  |  -.1423358   .0709249    -2.01   0.045    -.2813461   -.0033256
         14  |  -.0505366   .0682544    -0.74   0.459    -.1843127    .0832396
         15  |   .0443269    .066326     0.67   0.504    -.0856697    .1743234
         16  |  -.0240505   .0730191    -0.33   0.742    -.1671652    .1190642
         17  |   .0944183   .0629005     1.50   0.133    -.0288644     .217701
         18  |  -.0536392   .0604498    -0.89   0.375    -.1721185    .0648402
             |
gov_in~e_std |   .8109776     .02759    29.39   0.000     .7569023     .865053
       _cons |   .0133189   .0432753     0.31   0.758    -.0714992     .098137
-------------+----------------------------------------------------------------
gov_index_~r |
       _cons |  -2.151822   .0864477   -24.89   0.000    -2.321257   -1.982388
------------------------------------------------------------------------------

. test [gov_index_post_std_above_mean][shifty] = [gov_index_post_std_at_mean][s
> hifty]

 ( 1)  [gov_index_post_std_above_mean]shifty -
       [gov_index_post_std_at_mean]shifty = 0

           chi2(  1) =    2.14
         Prob > chi2 =    0.1435

. insert_into_file using out/gov_magnitude.csv, key(gov_index_p_at_above) val(`
> r(p)') format(%9.3fc)

. 
. /* TEST 3: below vs. above */ 
. suest gov_index_post_std_above gov_index_post_std_below, rob 

Simultaneous results for gov_index_post_std_above, gov_index_post_std_below

                                                Number of obs     =      1,356

------------------------------------------------------------------------------
             |               Robust
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
gov_index_~n |
      shifty |  -.0106824   .0327187    -0.33   0.744    -.0748099    .0534451
             |
     stratum |
          2  |   .1440082   .0694312     2.07   0.038     .0079256    .2800908
          3  |   .2055011   .0899527     2.28   0.022     .0291971    .3818051
          4  |    .197607   .0724879     2.73   0.006     .0555333    .3396807
          5  |   .0258716   .0795291     0.33   0.745    -.1300025    .1817458
          6  |   .1612964   .0911633     1.77   0.077    -.0173804    .3399733
          7  |  -.0121093   .0785282    -0.15   0.877    -.1660218    .1418032
          8  |   .1513653   .1009096     1.50   0.134    -.0464138    .3491444
          9  |   .2348357   .1047566     2.24   0.025     .0295165    .4401549
         10  |    .037598   .0855919     0.44   0.660    -.1301589     .205355
         11  |    .016057   .0825616     0.19   0.846    -.1457607    .1778748
         12  |   .0649436   .0903772     0.72   0.472    -.1121925    .2420797
         13  |    .054942   .0892666     0.62   0.538    -.1200173    .2299012
         14  |   .0324715   .0926146     0.35   0.726    -.1490497    .2139928
         15  |   .1351612   .0713787     1.89   0.058    -.0047385    .2750609
         16  |  -.0663693   .1186227    -0.56   0.576    -.2988656     .166127
         17  |   .1722634   .0800513     2.15   0.031     .0153658     .329161
         18  |   .0280582   .1029168     0.27   0.785     -.173655    .2297714
             |
gov_in~e_std |   .7701271   .0346803    22.21   0.000     .7021549    .8380993
       _cons |  -.1411091   .0551036    -2.56   0.010    -.2491102    -.033108
-------------+----------------------------------------------------------------
gov_index_~r |
       _cons |  -2.163691    .073662   -29.37   0.000    -2.308065   -2.019316
-------------+----------------------------------------------------------------
gov_index_~n |
      shifty |  -.0219778   .0222176    -0.99   0.323    -.0655236    .0215679
             |
     stratum |
          2  |  -.0163508   .0535181    -0.31   0.760    -.1212444    .0885427
          3  |   .0703008   .0520772     1.35   0.177    -.0317687    .1723703
          4  |   .0676203   .0648147     1.04   0.297    -.0594142    .1946549
          5  |   .0176987   .0574832     0.31   0.758    -.0949664    .1303638
          6  |   .1258356   .0681651     1.85   0.065    -.0077655    .2594367
          7  |   .0246568   .0784691     0.31   0.753    -.1291399    .1784535
          8  |   .1004001   .0723039     1.39   0.165    -.0413129     .242113
          9  |   .1430552   .0620931     2.30   0.021     .0213551    .2647554
         10  |   .0560558   .0631432     0.89   0.375    -.0677026    .1798143
         11  |   .0132498    .053368     0.25   0.804    -.0913495    .1178492
         12  |   .0052285   .0580322     0.09   0.928    -.1085124    .1189695
         13  |  -.0502777   .0785955    -0.64   0.522    -.2043221    .1037666
         14  |   .0377346   .0537784     0.70   0.483    -.0676692    .1431383
         15  |   .0642366     .05655     1.14   0.256    -.0465993    .1750725
         16  |  -.0125067   .0928776    -0.13   0.893    -.1945436    .1695301
         17  |   .0010914   .0651691     0.02   0.987    -.1266375    .1288204
         18  |   .1398158   .0623317     2.24   0.025     .0176478    .2619837
             |
gov_in~e_std |   .7656512    .023711    32.29   0.000     .7191785     .812124
       _cons |   -.032464    .041658    -0.78   0.436    -.1141123    .0491843
-------------+----------------------------------------------------------------
gov_index_~r |
       _cons |  -2.169011   .0596585   -36.36   0.000    -2.285939   -2.052082
------------------------------------------------------------------------------

. test [gov_index_post_std_above_mean][shifty] = [gov_index_post_std_below_mean
> ][shifty]

 ( 1)  [gov_index_post_std_above_mean]shifty -
       [gov_index_post_std_below_mean]shifty = 0

           chi2(  1) =    0.08
         Prob > chi2 =    0.7752

. insert_into_file using out/gov_magnitude.csv, key(gov_index_p_below_above) va
> l(`r(p)') format(%9.3fc)

. 
. table_from_tpl, t(code/gov_update_direction_template_nop.tex) r(out/gov_magni
> tude.csv) o(out/gov_update_direction.tex)

Created tex file out/gov_update_direction.tex.
Created out/gov_update_direction.tex.

. 
. /*******************************/
. /* put directly into the text  */
. /*******************************/
. import delimited using out/shifty_magnitude.csv, clear stringcols(2) 
(3 vars, 84 obs)

. drop if regexm(v1,"r2") == 1 
(8 observations deleted)

. cap file close fh

. file open fh using out/main_est.tex,  write replace 
(note: file out/main_est.tex not found)

. local N = _N

.     forv i = 1/`N' {
  2.         local name = v1[`i']
  3.         local name = subinstr("`name'","_","",.)
  4.   local value: di %5.3f round(abs(real(v2[`i'])),.001)
  5. 
.   /* convert percent or pp */ 
.   if (regexm("`name'","lnwidth") == 1 | regexm("`name'","updatemagdeaths") ==
>  1 | regexm("`name'","lndeath") == 1 | regexm("`name'","updatecovid") == 1 ) 
> & (regexm("`name'","beta") == 1 | regexm("`name'","se") == 1)  {
  6.     local value: di %5.1f round(abs(100*real(v2[`i'])),.1)
  7.   }
  8.   
.         file write fh "\newcommand{\" "`name'" "}{`value'}" _n
  9. }

. 
. import delimited using out/gov_magnitude.csv, clear
(3 vars, 151 obs)

. drop if regexm(v1,"r2") == 1
(24 observations deleted)

. drop if inlist(v1,"allobs","aboveobs","belowobs","atobs") == 1
(4 observations deleted)

. local N = _N

.     forv i = 1/`N' {
  2.         local name = v1[`i']
  3.         local name = subinstr("`name'","_","",.)
  4.         local value: di %5.3f round(abs(real(v2[`i'])),.001)
  5.         file write fh "\newcommand{\" "`name'" "}{`value'}" _n
  6. }

. 
. file close fh

. 
. 
. 
.  
. 
end of do-file

. 
. /* Figure 1: Inconsistent effects on the distribution */
. do code/distrib_figure.do

. /****************/
. /* Distributions */
. /****************/
. if "`c(username)'" == "pierre-lucvautrey" {
.   do ~/documents/github/covid/SetGlobals.do
. }

. else{
.   do ../SetGlobals.do

. version 13

. * set the number of ri replications
. global reps 1000

. 
. /* Sets stata globals */
. global raw = "../data"

. global int = "../data"

. 
. if "`c(username)'" == "charlierafkin" {
.   global raw = "~/Dropbox (MIT)/COVID/data/raw_decrypted/"
.   global int = "~/Dropbox (MIT)/COVID/data/intermediate/"
. }

. if "`c(username)'" == "pierre-lucvautrey" {
.   global raw = "~/Dropbox (MIT)/COVID/data/raw_decrypted/"
.   global int = "~/Dropbox (MIT)/COVID/data/intermediate/"
. }

. 
. global navy `" "51 122 183" "'

. global green `" "92 184 92" "'

. global ltblue `" "91 192 222" "'

. global red `" "217 83 79" "'

. global orange `" "240 173 78" "'

. 
. qui {

. 
. if "`c(username)'" == "pierre-lucvautrey" {
.   do ~/documents/github/COVID/programs.do
. }

. else{
.   do ../programs.do

. /*
> 
> Convert eps to pdf in mac Stata
> Author: CR
> Date: April 2018
> 
> */
. 
. 
. capture pr drop conversion

. capture pr define conversion

. 
. capture pr drop grout

. capture pr define grout

. 
. /******************************************/
. /* /\***** deflate cpi, base year *****\/ */
. /******************************************/
. capture pr drop get_cpi_deflator

. capture pr define get_cpi_deflator

. 
. 
. 
. 
. 
. 
. 
. /* other graphing/output programs that we want */
. 
. /****************************************************************************
> *********/
. /* program store_est_tpl : store b, se, p-values in format suitable for table
> _to_tpl */
. /****************************************************************************
> *********/
. cap prog drop store_est_tpl

. prog def store_est_tpl
  1. {
  2.   syntax using/,  coef(string) name(string) [format(string) beta se p n r2
>  all]
  3. 
.   /* turn on all flags if `all' is specified */
.   if !mi("`all'") {
  4.     local beta beta
  5.     local se se
  6.     local p p
  7.     local n n
  8.     local r2 r2
  9.   }
 10. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
 11. 
.   /* manage beta */
.   if !mi("`beta'") {
 12. 
.     /* store beta in the desired format */
.     local b3:  di `format' _b["`coef'"]
 13.     test `coef' = 0
 14.     local pvalue = `r(p)'
 15.     /* write p value (only makes sense if beta also specified) */
.     if !mi("`p'") {
 16.       insert_into_file using `using', key("`name'_p") value(" `pvalue'") f
> ormat("%5.2f")
 17.     }
 18. 
.     /* write beta to file */
.     insert_into_file using `using', key("`name'_beta") value(" `b3'") format(
> "`format'")
 19. 
.     /* count stars on the p and create starbeta */
.     count_stars, p(`pvalue')
 20.     insert_into_file using `using', key("`name'_starbeta") value(" `b3'`r(
> stars)'") format("`format'")
 21.   }
 22. 
.   /* manage se */
.   if !mi("`se'") {
 23.     local se3:  di `format' _se["`coef'"]
 24.     insert_into_file using `using', key("`name'_se") value(" `se3'")
 25.   }
 26. 
.   /* manage n */
.   if !mi("`n'") {
 27.     insert_into_file using `using', key("`name'_n") value(" `e(N)'") forma
> t("%1.0f")
 28.   }
 29. 
.   /* manage r2 */
.   if !mi("`r2'") {
 30.     insert_into_file using `using', key("`name'_r2") value(" `e(r2)'") for
> mat("%5.2f")
 31.   }
 32. }
 33. end

. /* *********** END program store_est_tpl ************************************
> ***** */
. 
. /****************************************************************************
> *********/
. /* program store_val_tpl : store value to a file with string and format      
>         */
. /****************************************************************************
> *********/
. cap prog drop store_val_tpl

. prog def store_val_tpl
  1. {
  2.   syntax using/,  Name(string) Value(string) [Format(string)]
  3. 
.   di `""store_val_tpl, name value format" is deprecated -- please use "insert
> _into_file, key value format" instead"'
  4. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
  5. 
.   /* get value in appropriate format (unless it's already a string) */
.   if !mi(real("`value'")) {
  6.     local v : di `format' `value'
  7.   }
  8.   else {
  9.     local v `value'
 10.   }
 11. 
.   /* write line to file */
.   append_to_file using `using', s("`name',`v'")
 12. }
 13. end

. /* *********** END program store_val_tpl ************************************
> ***** */
. 
. /****************************************************************************
> ***********************/
. /* program table_from_tpl : Create a table from a stored estimates file and a
>  .tex table template  */
. /****************************************************************************
> ***********************/
. cap prog drop table_from_tpl

. prog def table_from_tpl
  1. {
  2.   syntax, Template(string) Replacement(string) Output(string) [Verbose add
> stars dropstars]
  3. 
.   /* set up verbose flag */
.   if !mi("`verbose'") {
  4.       local v "-v"
  5.   }
  6.   else {
  7.       local v
  8.   }
  9. 
. 
.   /* if python path is not set, use current folder */
.   if mi("$PYTHONPATH") {
 10. 
.       /* set path to current folder */
.       local path .
 11.   }
 12.   else {
 13.       local path $PYTHONPATH
 14.   }
 15. 
.   /* check python file existence */
.   cap confirm file `path'/table_from_tpl.py
 16.   if _rc {
 17.       display as error "ERROR: table_from_tpl.py not found. Put in current
>  folder or folder defined by global \$PYTHONPATH"
 18.       error -1
 19.   }
 20. 
.   /* deal with addstars/dropstars parameters */
.   if "`addstars'" == "addstars" {
 21.     local star_param "--add-stars"
 22.   }
 23.   if "`dropstars'" == "dropstars" {
 24.     local star_param "--drop-stars"
 25.   }
 26. 
.   local pycommand `path'/table_from_tpl.py -t `template' -r `replacement' -o 
> `output' `v' `star_param'
 27.   if !mi("`verbose'") {
 28.       di `"Running `pycommand' "'
 29.   }
 30. 
.   shell python `pycommand'
 31.   cap confirm file `output'
 32.   if !_rc {
 33.     display "Created `output'."
 34.   }
 35.   else {
 36.     display "Could not create `output'."
 37.     error 1
 38.   }
 39. 
.   /* clean up the temporary file if star/nostar specified */
.   if !mi("`stars'") {
 40.     !rm $tmp/tpl_sed_tmp.tex
 41.   }
 42. }
 43. end

. /* *********** END program table_from_tpl ***********************************
> ****** */
. 
. /****************************************************************************
> ******/
. /* program append_to_file : Append a passed in string to a file              
>      */
. /****************************************************************************
> ******/
. cap prog drop append_to_file

. prog def append_to_file
  1. {
  2.   syntax using/, String(string)
  3. 
.   cap file close fh
  4.   file open fh using `using', write append
  5.   file write fh  `"`string'"'  _n
  6.   file close fh
  7. }
  8. end

. /* *********** END program append_to_file ***********************************
> ****** */
. 
. /****************************************************************************
> ******/
. /* program insert_into_file : Insert a key-value pair into a file            
>      */
. /*
> Assume "using" csv file take a key, value format, e.g.:
> 
> est1,3.544
> est2,3.234***
> ...
> 
> "est1" is the key. "3.544" is the value.
> 
> Example:
> 
> insert_into_file using $tmp/estimates.csv, key(est1) value(3.54493) format(%5
> .2f)
> 
> - if "est1" is not already in estimates file, it will be appended
> - if "est1" is already in estimates file, its value will be replaced with the
>  passed in parameter
> - estimates file will be created if it does not already exist
> 
> */
. 
. /****************************************************************************
> *******/
. cap prog drop insert_into_file

. prog def insert_into_file
  1. {
  2.   syntax using/, Key(string) Value(string) [Format(string) verbose]
  3. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
  4. 
.   /* get value in correct format (unless it's a string) */
.   if !mi(real("`value'")) {
  5.     local value : di `format' `value'
  6.   }
  7.   else {
  8.     local value `value'
  9.   }
 10. 
.   /* confirm file handles are closed */
.   cap file close fout
 11.   cap file close fin
 12. 
.   /* create a temporary file for writing */
.   tempfile tempfile
 13.   qui file open fout using `tempfile', write replace
 14. 
.   /* if input file doesn't exist, create it and display a notification */
.   cap confirm file `using'
 15.   if _rc {
 16.     if !mi("`verbose'") {
 17.       di "Creating new file `using'..."
 18.     }
 19.   }
 20. 
.   /* else, open the input file and read the first line */
.   else {
 21.     file open fin using `using', read
 22. 
.     /* read the first line */
.     file read fin line
 23.   }
 24. 
.   /* store a flag indicating whether we found the line or not */
.   local found 0
 25. 
.   /* loop over all lines of the file */
.   while r(eof) == 0 {
 26. 
.     /* check if line matches the current key */
.     if regexm("`line'", "^`key',") {
 27. 
.       /* if verbose, show what we're replacing  */
.       if !mi("`verbose'") {
 28.         di `"Replacing "`line'" with "`key',`value'"..."'
 29.       }
 30.       local found 1
 31. 
.       /* replace the line with key,value */
.       local line `key',`value'
 32.     }
 33. 
.     /* write the line to the output file */
.     file write fout "`line'" _n
 34. 
.     /* read the next line */
.     file read fin line
 35.   }
 36. 
.   /* if we didn't find this key, append it to the end */
.   if `found' == 0 {
 37.     file write fout "`key',`value'" _n
 38.   }
 39. 
.   /* close input and output files */
.   cap file close fin
 40.   file close fout
 41. 
.   /* copy the temporary file to the `using` filename */
.   copy `tempfile' `using', replace
 42. }
 43. end

. /* *********** END program insert_into_file *********************************
> ******** */
. 
. /****************************************************************************
> ******/
. /* program count_stars : return a string with the right number of stars      
>      */
. /****************************************************************************
> ******/
. cap prog drop count_stars

. prog def count_stars, rclass
  1. {
  2.   syntax, p(real)
  3.   local star = ""
  4.   if `p' <= 0.1  local star = "*"
  5.   if `p' <= 0.05 local star = "**"
  6.   if `p' <= 0.01 local star = "***"
  7.   return local stars = "`star'"
  8. }
  9. end

. /* *********** END program count_stars **************************************
> *** */
. 
. 
end of do-file
. }

. global PYTHONPATH = "code"

. 
end of do-file
. }

. clear 

. version 13

. 
. use "$int/public_data" , clear

. keep if shifty != .
(0 observations deleted)

. 
. /***************************************************************/
. /* Panel A: alternate, distribution of priors for whole sample */
. /***************************************************************/
. /**** text: median and mean of consistent ****/ 
. qreg deaths_pre if shifty == 0
Iteration  1:  WLS sum of weighted deviations =  4.462e+08

Iteration  1: sum of abs. weighted deviations =  4.457e+08
Iteration  2: sum of abs. weighted deviations =  3.735e+08

Median regression                                   Number of obs =        933
  Raw sum of deviations 3.73e+08 (about 100000)
  Min sum of deviations 3.73e+08                    Pseudo R2     =     0.0000

------------------------------------------------------------------------------
  deaths_pre |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _cons |     100000   5350.617    18.69   0.000     89499.35    110500.7
------------------------------------------------------------------------------

. local control_median: di %7.0fc _b[_cons]

. local control_median_se: di %5.0fc round(_se[_cons],10)

. 
. reg deaths_pre if shifty == 0

      Source |       SS           df       MS      Number of obs   =       933
-------------+----------------------------------   F(0, 932)       =      0.00
       Model |           0         0           .   Prob > F        =         .
    Residual |  8.2221e+16       932  8.8220e+13   R-squared       =    0.0000
-------------+----------------------------------   Adj R-squared   =    0.0000
       Total |  8.2221e+16       932  8.8220e+13   Root MSE        =    9.4e+06

------------------------------------------------------------------------------
  deaths_pre |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _cons |   832215.8     307498     2.71   0.007     228747.2     1435684
------------------------------------------------------------------------------

. local control_mean: di %7.0fc round(_b[_cons],1000)

. local control_mean_se: di %7.0fc round(_se[_cons],1000)

. 
. /**** text: median and mean of inconsistent ****/ 
. qreg deaths_pre if shifty == 1
Iteration  1:  WLS sum of weighted deviations =  3.755e+08

Iteration  1: sum of abs. weighted deviations =  3.753e+08
Iteration  2: sum of abs. weighted deviations =  3.267e+08

Median regression                                   Number of obs =        967
  Raw sum of deviations 3.27e+08 (about 100000)
  Min sum of deviations 3.27e+08                    Pseudo R2     =     0.0000

------------------------------------------------------------------------------
  deaths_pre |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _cons |     100000   4091.379    24.44   0.000     91970.98      108029
------------------------------------------------------------------------------

. local treat_median: di %7.0fc round(_b[_cons],1000)

. local treat_median_se: di %5.0fc round(_se[_cons],10)

. 
. reg deaths_pre if shifty == 1

      Source |       SS           df       MS      Number of obs   =       967
-------------+----------------------------------   F(0, 966)       =      0.00
       Model |           0         0           .   Prob > F        =         .
    Residual |  5.8275e+16       966  6.0326e+13   R-squared       =    0.0000
-------------+----------------------------------   Adj R-squared   =    0.0000
       Total |  5.8275e+16       966  6.0326e+13   Root MSE        =    7.8e+06

------------------------------------------------------------------------------
  deaths_pre |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _cons |   711751.5     249770     2.85   0.004     221597.2     1201906
------------------------------------------------------------------------------

. local treat_mean: di %7.0fc round(_b[_cons],1000)

. local treat_mean_se: di %7.0fc round(_se[_cons],1000)

. 
. /* fraction in each part of the distribution */ 
. sum priors_below_info

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
priors_bel~o |      1,900    .4784211    .4996656          0          1

. local fraction_opt: di %3.0f 100*`r(mean)'

. sum priors_at_info

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
priors_at_~o |      1,900    .2863158    .4521578          0          1

. local fraction_at: di %3.0f 100*`r(mean)'

. sum priors_above_info

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
priors_abo~o |      1,900    .2352632    .4242748          0          1

. local fraction_pess: di %3.0f 100*`r(mean)'

. 
. /* winsorize logs for the picture */ 
. gen ln_priors_wins = max(min(log10(deaths_pre),7.001),2)

. replace ln_priors_wins = 2 if deaths_pre == 0  // put the 2 people w 0 deaths
>  in the lowest bin
(2 real changes made)

. sort deaths_pre 

. local bottom_projection = 100000 

. local top_projection = 240000 

. gen low = 0 if inrange(deaths_pre,`bottom_projection' ,`top_projection')
(1,356 missing values generated)

. gen high = 0.34 if inrange(deaths_pre, `bottom_projection' ,`top_projection')
(1,356 missing values generated)

. 
. twoway  ///
>     (rarea high low ln_priors_wins, legend(off) lcolor(gs9) fcolor(gs8) ) ///
>     
>     ( histogram ln_priors_wins, lcolor(black) fraction start(2) width(.25) //
> /
>     fcolor(lavender )  xtitle("Prior beliefs about deaths in 6 months, entire
>  sample (log{sub:10} scale)") ///
>     ylab(0(0.05)0.3) xlab(2 "{&le} 100" 3 "1,000" 4 "10,000" 5 "100,000" 6 "1
>  million" 7 "{&ge} 10 million" , format(%09.1fc)  angle(45))  ///
>     text(.32 1.8 "Below 100,000: `fraction_opt'%", place(e) ) ///
>     text(.30 1.81 "At 100,000-240,000: `fraction_at'%", place(e)) ///
>     text(.28 1.8 "Above 240,000: `fraction_pess'%", place(e)) ///
>     text(.24 1.7 "{bf:Median:}", place(e)) ///    
>     text(.22 2.0 "Inconsistent: `treat_median' (SE: `treat_median_se')", plac
> e(e)) ///
>     text(.20 2.0 "Consistent: `control_median' (SE: `control_median_se')", pl
> ace(e) ) ///
>     text(.16 1.7 "{bf:Mean:}", place(e)) ///    
>   text(.14 2.0 "Inconsistent: `treat_mean' (SE: `treat_mean_se')", place(e)) 
>     ///
>     text(.12 2.0 "Consistent: `control_mean' (SE: `control_mean_se')", place(
> e)) ///
>     text(.25 5.7 "Government projection:", place(e) color(gs8) ) ///
>     text(.23 5.7 "100,000-240,000", place(e) color(gs8) ) ) ///
>     (pcarrowi .26 5.65 .27 5.42 , xsc(titlegap(*-18))   ytitle("Fraction") co
> lor(gs8) ) 

.    
. grout out/ln_priors_hist , pdf
out/ln_priors_hist written as PDF

. 
. /**********************/
. /* Panel B: Distribution of Log Changes */
. /**********************/
. /* winsorize beliefs for picture */
. gen update_mag_deaths_wins = min(update_mag_deaths, 15.001) 

. 
. 
. /* get fraction who update */ 
. reg update_covid if shifty == 0

      Source |       SS           df       MS      Number of obs   =       933
-------------+----------------------------------   F(0, 932)       =      0.00
       Model |           0         0           .   Prob > F        =         .
    Residual |  230.932476       932  .247781626   R-squared       =    0.0000
-------------+----------------------------------   Adj R-squared   =    0.0000
       Total |  230.932476       932  .247781626   Root MSE        =    .49778

------------------------------------------------------------------------------
update_covid |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _cons |   .4501608   .0162965    27.62   0.000     .4181787    .4821428
------------------------------------------------------------------------------

. local control: di %5.3f _b[_cons] 

. local control_se: di %5.3f _se[_cons] 

. 
. reg update_covid if shifty == 1

      Source |       SS           df       MS      Number of obs   =       967
-------------+----------------------------------   F(0, 966)       =      0.00
       Model |           0         0           .   Prob > F        =         .
    Residual |  233.466391       966  .241683634   R-squared       =    0.0000
-------------+----------------------------------   Adj R-squared   =    0.0000
       Total |  233.466391       966  .241683634   Root MSE        =    .49161

------------------------------------------------------------------------------
update_covid |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _cons |   .4074457   .0158092    25.77   0.000     .3764213    .4384701
------------------------------------------------------------------------------

. local treat: di %5.3f _b[_cons] 

. local treat_se: di %5.3f _se[_cons] 

. 
. /* get difference in means */ 
. reg update_covid shifty, robust

Linear regression                               Number of obs     =      1,900
                                                F(1, 1898)        =       3.54
                                                Prob > F          =     0.0601
                                                R-squared         =     0.0019
                                                Root MSE          =     .49465

------------------------------------------------------------------------------
             |               Robust
update_covid |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.0427151   .0227048    -1.88   0.060     -.087244    .0018138
       _cons |   .4501608   .0162963    27.62   0.000     .4182002    .4821214
------------------------------------------------------------------------------

. local diff_frac: di %5.3f _b[shifty]

. local diff_frac_se: di %5.3f _se[shifty]

. 
. 
. /* get update magnitude */ 
. reg update_mag_deaths if shifty == 0

      Source |       SS           df       MS      Number of obs   =       933
-------------+----------------------------------   F(0, 932)       =      0.00
       Model |           0         0           .   Prob > F        =         .
    Residual |  28877.1753       932  30.9840936   R-squared       =    0.0000
-------------+----------------------------------   Adj R-squared   =    0.0000
       Total |  28877.1753       932  30.9840936   Root MSE        =    5.5663

------------------------------------------------------------------------------
update_ma~hs |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _cons |   4.858851   .1822337    26.66   0.000     4.501215    5.216486
------------------------------------------------------------------------------

. local control_mean: di %5.2fc _b[_cons]

. local control_mean_se : di %4.3fc _se[_cons]

. 
. reg update_mag_deaths if shifty == 1

      Source |       SS           df       MS      Number of obs   =       967
-------------+----------------------------------   F(0, 966)       =      0.00
       Model |           0         0           .   Prob > F        =         .
    Residual |  28346.3202       966  29.3440168   R-squared       =    0.0000
-------------+----------------------------------   Adj R-squared   =    0.0000
       Total |  28346.3202       966  29.3440168   Root MSE        =     5.417

------------------------------------------------------------------------------
update_ma~hs |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _cons |   4.319522   .1741994    24.80   0.000     3.977669    4.661375
------------------------------------------------------------------------------

. local treat_mean: di %5.2fc _b[_cons]

. local treat_mean_se : di %4.3fc _se[_cons]

. 
. /* get difference in means */ 
. reg update_mag_deaths shifty, rob

Linear regression                               Number of obs     =      1,900
                                                F(1, 1898)        =       4.58
                                                Prob > F          =     0.0325
                                                R-squared         =     0.0024
                                                Root MSE          =     5.4908

------------------------------------------------------------------------------
             |               Robust
update_ma~hs |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.5393286   .2521001    -2.14   0.033    -1.033751   -.0449062
       _cons |   4.858851   .1822319    26.66   0.000     4.501455    5.216247
------------------------------------------------------------------------------

. local diff_mag: di %5.3f _b[shifty]

. local diff_mag_se: di %4.3f _se[shifty]

. 
. /**** plot distribution of changes ****/ 
. twoway  ///
>     ( histogram update_mag_deaths_wins if shifty == 0, ///
>     legend(lab(1 "Consistent")) fraction start(0) ///
>     width(1) lcolor($ltblue ) fcolor($ltblue )  ) /// 
>     ( histogram update_mag_deaths_wins if shifty == 1 , legend(order(2 1 ) la
> b(2 "Inconsistent") ///
>     col(2) ) xtitle("Update magnitude: ln(|posterior - prior| + 1)") ///
>     fraction start(0) width(1) lcolor(black) fcolor(none) ///
>     ylab(0(0.1)0.6) xlab(0(1)15  15 "{&ge}15" , format(%09.0fc) )  ///
>     text(.6 1.3 "{bf:Fraction choosing to update (posterior {&ne} prior):}", 
> place(e)) ///
>     text(.55 3 "Inconsistent: `treat' (SE:  `treat_se')", place(e) ) ///    
>     text(.5 3 "Consistent: `control' (SE: `control_se')", place(e) ) ///
>     text(.45 2.75 "{it:Difference}: `diff_frac' (SE: `diff_frac_se')", place(
> e) ) ///
>     text(.35 1.5 "{bf:Mean update magnitude:}", place(e) ) ///
>     text(.3 3 "Inconsistent: `treat_mean' (SE: `treat_mean_se')", place(e) ) 
> ///        
>     text(.25 3 "Consistent: `control_mean' (SE: `control_mean_se')", place(e)
>  ) ///
>     text(.2 2.75 "{it:Difference}: `diff_mag' (SE: `diff_mag_se')", place(e) 
> ) ///        
>     )

. 
. grout out/distrib_update_mag_deaths , pdf
out/distrib_update_mag_deaths written as PDF

.  
. 
end of do-file

. 
. /* Table 3: Inconsistent effects on the distribution */
. do code/ratio.do

. /**************************************************************/
. /* /\* This dofile generates the belief heterogeneity ratio and tests for the
>  ratio (Table 3) *\/ */
. /**************************************************************/
. if "`c(username)'" == "pierre-lucvautrey" {
.   do ~/documents/github/covid/SetGlobals.do
. }

. else{
.   do ../SetGlobals.do

. version 13

. * set the number of ri replications
. global reps 1000

. 
. /* Sets stata globals */
. global raw = "../data"

. global int = "../data"

. 
. if "`c(username)'" == "charlierafkin" {
.   global raw = "~/Dropbox (MIT)/COVID/data/raw_decrypted/"
.   global int = "~/Dropbox (MIT)/COVID/data/intermediate/"
. }

. if "`c(username)'" == "pierre-lucvautrey" {
.   global raw = "~/Dropbox (MIT)/COVID/data/raw_decrypted/"
.   global int = "~/Dropbox (MIT)/COVID/data/intermediate/"
. }

. 
. global navy `" "51 122 183" "'

. global green `" "92 184 92" "'

. global ltblue `" "91 192 222" "'

. global red `" "217 83 79" "'

. global orange `" "240 173 78" "'

. 
. qui {

. 
. if "`c(username)'" == "pierre-lucvautrey" {
.   do ~/documents/github/COVID/programs.do
. }

. else{
.   do ../programs.do

. /*
> 
> Convert eps to pdf in mac Stata
> Author: CR
> Date: April 2018
> 
> */
. 
. 
. capture pr drop conversion

. capture pr define conversion

. 
. capture pr drop grout

. capture pr define grout

. 
. /******************************************/
. /* /\***** deflate cpi, base year *****\/ */
. /******************************************/
. capture pr drop get_cpi_deflator

. capture pr define get_cpi_deflator

. 
. 
. 
. 
. 
. 
. 
. /* other graphing/output programs that we want */
. 
. /****************************************************************************
> *********/
. /* program store_est_tpl : store b, se, p-values in format suitable for table
> _to_tpl */
. /****************************************************************************
> *********/
. cap prog drop store_est_tpl

. prog def store_est_tpl
  1. {
  2.   syntax using/,  coef(string) name(string) [format(string) beta se p n r2
>  all]
  3. 
.   /* turn on all flags if `all' is specified */
.   if !mi("`all'") {
  4.     local beta beta
  5.     local se se
  6.     local p p
  7.     local n n
  8.     local r2 r2
  9.   }
 10. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
 11. 
.   /* manage beta */
.   if !mi("`beta'") {
 12. 
.     /* store beta in the desired format */
.     local b3:  di `format' _b["`coef'"]
 13.     test `coef' = 0
 14.     local pvalue = `r(p)'
 15.     /* write p value (only makes sense if beta also specified) */
.     if !mi("`p'") {
 16.       insert_into_file using `using', key("`name'_p") value(" `pvalue'") f
> ormat("%5.2f")
 17.     }
 18. 
.     /* write beta to file */
.     insert_into_file using `using', key("`name'_beta") value(" `b3'") format(
> "`format'")
 19. 
.     /* count stars on the p and create starbeta */
.     count_stars, p(`pvalue')
 20.     insert_into_file using `using', key("`name'_starbeta") value(" `b3'`r(
> stars)'") format("`format'")
 21.   }
 22. 
.   /* manage se */
.   if !mi("`se'") {
 23.     local se3:  di `format' _se["`coef'"]
 24.     insert_into_file using `using', key("`name'_se") value(" `se3'")
 25.   }
 26. 
.   /* manage n */
.   if !mi("`n'") {
 27.     insert_into_file using `using', key("`name'_n") value(" `e(N)'") forma
> t("%1.0f")
 28.   }
 29. 
.   /* manage r2 */
.   if !mi("`r2'") {
 30.     insert_into_file using `using', key("`name'_r2") value(" `e(r2)'") for
> mat("%5.2f")
 31.   }
 32. }
 33. end

. /* *********** END program store_est_tpl ************************************
> ***** */
. 
. /****************************************************************************
> *********/
. /* program store_val_tpl : store value to a file with string and format      
>         */
. /****************************************************************************
> *********/
. cap prog drop store_val_tpl

. prog def store_val_tpl
  1. {
  2.   syntax using/,  Name(string) Value(string) [Format(string)]
  3. 
.   di `""store_val_tpl, name value format" is deprecated -- please use "insert
> _into_file, key value format" instead"'
  4. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
  5. 
.   /* get value in appropriate format (unless it's already a string) */
.   if !mi(real("`value'")) {
  6.     local v : di `format' `value'
  7.   }
  8.   else {
  9.     local v `value'
 10.   }
 11. 
.   /* write line to file */
.   append_to_file using `using', s("`name',`v'")
 12. }
 13. end

. /* *********** END program store_val_tpl ************************************
> ***** */
. 
. /****************************************************************************
> ***********************/
. /* program table_from_tpl : Create a table from a stored estimates file and a
>  .tex table template  */
. /****************************************************************************
> ***********************/
. cap prog drop table_from_tpl

. prog def table_from_tpl
  1. {
  2.   syntax, Template(string) Replacement(string) Output(string) [Verbose add
> stars dropstars]
  3. 
.   /* set up verbose flag */
.   if !mi("`verbose'") {
  4.       local v "-v"
  5.   }
  6.   else {
  7.       local v
  8.   }
  9. 
. 
.   /* if python path is not set, use current folder */
.   if mi("$PYTHONPATH") {
 10. 
.       /* set path to current folder */
.       local path .
 11.   }
 12.   else {
 13.       local path $PYTHONPATH
 14.   }
 15. 
.   /* check python file existence */
.   cap confirm file `path'/table_from_tpl.py
 16.   if _rc {
 17.       display as error "ERROR: table_from_tpl.py not found. Put in current
>  folder or folder defined by global \$PYTHONPATH"
 18.       error -1
 19.   }
 20. 
.   /* deal with addstars/dropstars parameters */
.   if "`addstars'" == "addstars" {
 21.     local star_param "--add-stars"
 22.   }
 23.   if "`dropstars'" == "dropstars" {
 24.     local star_param "--drop-stars"
 25.   }
 26. 
.   local pycommand `path'/table_from_tpl.py -t `template' -r `replacement' -o 
> `output' `v' `star_param'
 27.   if !mi("`verbose'") {
 28.       di `"Running `pycommand' "'
 29.   }
 30. 
.   shell python `pycommand'
 31.   cap confirm file `output'
 32.   if !_rc {
 33.     display "Created `output'."
 34.   }
 35.   else {
 36.     display "Could not create `output'."
 37.     error 1
 38.   }
 39. 
.   /* clean up the temporary file if star/nostar specified */
.   if !mi("`stars'") {
 40.     !rm $tmp/tpl_sed_tmp.tex
 41.   }
 42. }
 43. end

. /* *********** END program table_from_tpl ***********************************
> ****** */
. 
. /****************************************************************************
> ******/
. /* program append_to_file : Append a passed in string to a file              
>      */
. /****************************************************************************
> ******/
. cap prog drop append_to_file

. prog def append_to_file
  1. {
  2.   syntax using/, String(string)
  3. 
.   cap file close fh
  4.   file open fh using `using', write append
  5.   file write fh  `"`string'"'  _n
  6.   file close fh
  7. }
  8. end

. /* *********** END program append_to_file ***********************************
> ****** */
. 
. /****************************************************************************
> ******/
. /* program insert_into_file : Insert a key-value pair into a file            
>      */
. /*
> Assume "using" csv file take a key, value format, e.g.:
> 
> est1,3.544
> est2,3.234***
> ...
> 
> "est1" is the key. "3.544" is the value.
> 
> Example:
> 
> insert_into_file using $tmp/estimates.csv, key(est1) value(3.54493) format(%5
> .2f)
> 
> - if "est1" is not already in estimates file, it will be appended
> - if "est1" is already in estimates file, its value will be replaced with the
>  passed in parameter
> - estimates file will be created if it does not already exist
> 
> */
. 
. /****************************************************************************
> *******/
. cap prog drop insert_into_file

. prog def insert_into_file
  1. {
  2.   syntax using/, Key(string) Value(string) [Format(string) verbose]
  3. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
  4. 
.   /* get value in correct format (unless it's a string) */
.   if !mi(real("`value'")) {
  5.     local value : di `format' `value'
  6.   }
  7.   else {
  8.     local value `value'
  9.   }
 10. 
.   /* confirm file handles are closed */
.   cap file close fout
 11.   cap file close fin
 12. 
.   /* create a temporary file for writing */
.   tempfile tempfile
 13.   qui file open fout using `tempfile', write replace
 14. 
.   /* if input file doesn't exist, create it and display a notification */
.   cap confirm file `using'
 15.   if _rc {
 16.     if !mi("`verbose'") {
 17.       di "Creating new file `using'..."
 18.     }
 19.   }
 20. 
.   /* else, open the input file and read the first line */
.   else {
 21.     file open fin using `using', read
 22. 
.     /* read the first line */
.     file read fin line
 23.   }
 24. 
.   /* store a flag indicating whether we found the line or not */
.   local found 0
 25. 
.   /* loop over all lines of the file */
.   while r(eof) == 0 {
 26. 
.     /* check if line matches the current key */
.     if regexm("`line'", "^`key',") {
 27. 
.       /* if verbose, show what we're replacing  */
.       if !mi("`verbose'") {
 28.         di `"Replacing "`line'" with "`key',`value'"..."'
 29.       }
 30.       local found 1
 31. 
.       /* replace the line with key,value */
.       local line `key',`value'
 32.     }
 33. 
.     /* write the line to the output file */
.     file write fout "`line'" _n
 34. 
.     /* read the next line */
.     file read fin line
 35.   }
 36. 
.   /* if we didn't find this key, append it to the end */
.   if `found' == 0 {
 37.     file write fout "`key',`value'" _n
 38.   }
 39. 
.   /* close input and output files */
.   cap file close fin
 40.   file close fout
 41. 
.   /* copy the temporary file to the `using` filename */
.   copy `tempfile' `using', replace
 42. }
 43. end

. /* *********** END program insert_into_file *********************************
> ******** */
. 
. /****************************************************************************
> ******/
. /* program count_stars : return a string with the right number of stars      
>      */
. /****************************************************************************
> ******/
. cap prog drop count_stars

. prog def count_stars, rclass
  1. {
  2.   syntax, p(real)
  3.   local star = ""
  4.   if `p' <= 0.1  local star = "*"
  5.   if `p' <= 0.05 local star = "**"
  6.   if `p' <= 0.01 local star = "***"
  7.   return local stars = "`star'"
  8. }
  9. end

. /* *********** END program count_stars **************************************
> *** */
. 
. 
end of do-file
. }

. global PYTHONPATH = "code"

. 
end of do-file
. }

. clear 

. version 13

. use "$int/public_data" , clear

. 
. cap rm -f out/ratio.csv

. 
. 
. /* put observations into file */ 
. count
  1,900

. insert_into_file using out/ratio.csv, key(allobs) val(`r(N)') format(%9.0fc) 
(note: file out/ratio.csv not found)

. count if priors_below_info == 1 
  909

. insert_into_file using out/ratio.csv, key(belowobs) val(`r(N)') format(%9.0fc
> )  // "priors BELOW info"

. count if priors_at_info == 1 
  544

. insert_into_file using out/ratio.csv, key(atobs) val(`r(N)') format(%9.0fc)  
> // "priors AT info"

. count if priors_above_info == 1 
  447

. insert_into_file using out/ratio.csv, key(aboveobs) val(`r(N)') format(%9.0fc
> )  // "priors ABOVE info"

. 
. 
. /* loop over each outcome */
. foreach outcome in  update_covid update_mag_deaths { 
  2. 
.   reg `outcome' shifty, rob 
  3.   nlcom (_b[shifty] + _b[_cons]) / _b[_cons]
  4.   matrix beta = r(b)
  5.   local b: di %5.3f beta[1,1]
  6.   matrix V = r(V)
  7.   local std_err = sqrt(V[1,1])
  8.   local z = `b'/`std_err'
  9.   local pvalue = 2*normal(-abs(`z'))
 10.   count_stars, p(`pvalue') 
 11.   insert_into_file using out/ratio.csv, key(`outcome'_starbeta) val(`b'`r(
> stars)') format(%5.3fc) 
 12.   insert_into_file using out/ratio.csv, key(`outcome'_se) val(`std_err') f
> ormat(%5.3fc) 
 13.   
.   /* individually regress above , at, below */
.   reg `outcome' shifty if priors_above_info == 1 , 
 14.   estimates store above
 15. 
.   reg `outcome' shifty if priors_at_info == 1 , 
 16.   estimates store at
 17. 
.   reg `outcome' shifty if priors_below_info == 1 , 
 18.   estimates store below
 19. 
.   /* all people who are not optimists */ 
.   reg `outcome' shifty if priors_below_info == 0 , 
 20.   estimates store not_below
 21. 
.   suest above at below , rob 
 22. 
.   nlcom ([above_mean]shifty + [above_mean]_cons) / [above_mean]_cons
 23.   matrix beta = r(b)
 24.   local b: di %5.3f beta[1,1]  
 25.   matrix V = r(V)
 26.   local std_err = sqrt(V[1,1])
 27.   local z = `b'/`std_err'
 28.   local pvalue = 2*normal(-abs(`z'))
 29.   count_stars, p(`pvalue') 
 30.   insert_into_file using out/ratio.csv, key(`outcome'_above_starbeta) val(
> `b'`r(stars)') format(%5.3fc) 
 31.   insert_into_file using out/ratio.csv, key(`outcome'_above_se) val(`std_e
> rr') format(%5.3fc) 
 32. 
. 
. 
.   nlcom ([at_mean]shifty + [at_mean]_cons) / [at_mean]_cons
 33.   matrix beta = r(b)
 34.   local b: di %5.3f beta[1,1]  
 35.   matrix V = r(V)
 36.   local std_err = sqrt(V[1,1])
 37.   local z = `b'/`std_err'
 38.   local pvalue = 2*normal(-abs(`z'))
 39.   count_stars, p(`pvalue') 
 40.   insert_into_file using out/ratio.csv, key(`outcome'_at_starbeta) val(`b'
> `r(stars)') format(%5.3fc) 
 41.   insert_into_file using out/ratio.csv, key(`outcome'_at_se) val(`std_err'
> ) format(%5.3fc) 
 42. 
. 
.   nlcom ([below_mean]shifty + [below_mean]_cons) / [below_mean]_cons
 43.   matrix beta = r(b)
 44.   local b: di %5.3f beta[1,1]
 45.   matrix V = r(V)
 46.   local std_err = sqrt(V[1,1])
 47.   local z = `b'/`std_err'
 48.   local pvalue = 2*normal(-abs(`z'))
 49.   count_stars, p(`pvalue') 
 50.   insert_into_file using out/ratio.csv, key(`outcome'_below_starbeta) val(
> `b'`r(stars)') format(%5.3fc) 
 51.   insert_into_file using out/ratio.csv, key(`outcome'_below_se) val(`std_e
> rr') format(%5.3fc) 
 52. 
.   /***** tests ******/
.   /* above = at */ 
.   nlcom ([above_mean]shifty + [above_mean]_cons) / [above_mean]_cons - ([at_m
> ean]shifty + [at_mean]_cons) / [at_mean]_cons, post
 53.   matrix b = r(b)
 54.   matrix V = r(V)
 55.   local std_err = sqrt(V[1,1])
 56.   local z = b[1,1]/`std_err'
 57.   local pvalue = 2*normal(-abs(`z'))
 58.   insert_into_file using out/ratio.csv, key(`outcome'_p_at_above) val(`pva
> lue') format(%5.3fc) 
 59. 
.   /* at = below */
.   suest above at below , rob 
 60.   nlcom ([at_mean]shifty + [at_mean]_cons) / [at_mean]_cons - ([below_mean
> ]shifty + [below_mean]_cons) / [below_mean]_cons
 61.   matrix b = r(b)
 62.   matrix V = r(V)
 63.   local std_err = sqrt(V[1,1])
 64.   local z = b[1,1]/`std_err'
 65.   local pvalue = 2*normal(-abs(`z'))
 66.   insert_into_file using out/ratio.csv, key(`outcome'_p_below_at) val(`pva
> lue') format(%5.3fc) 
 67. 
.   /* above = below */
.   suest above at below , rob 
 68.   nlcom ([above_mean]shifty + [above_mean]_cons) / [above_mean]_cons - ([b
> elow_mean]shifty + [below_mean]_cons) / [below_mean]_cons
 69.   matrix b = r(b)
 70.   matrix V = r(V)
 71.   local std_err = sqrt(V[1,1])
 72.   local z = b[1,1]/`std_err'
 73.   local pvalue = 2*normal(-abs(`z'))
 74.   insert_into_file using out/ratio.csv, key(`outcome'_p_below_above) val(`
> pvalue') format(%5.3fc) 
 75. 
.   /* test for above = not above */
.   suest below not_below , rob
 76.   nlcom ([below_mean]shifty + [below_mean]_cons) / [below_mean]_cons - ([n
> ot_below_mean]shifty + [not_below_mean]_cons) / [not_below_mean]_cons  
 77.   matrix b = r(b)
 78.   matrix V = r(V)
 79.   local std_err = sqrt(V[1,1])
 80.   local z = b[1,1]/`std_err'
 81.   local pvalue = 2*normal(-abs(`z'))
 82.   insert_into_file using out/ratio.csv, key(`outcome'_p_below_not) val(`pv
> alue') format(%5.3fc) 
 83. 
. }

Linear regression                               Number of obs     =      1,900
                                                F(1, 1898)        =       3.54
                                                Prob > F          =     0.0601
                                                R-squared         =     0.0019
                                                Root MSE          =     .49465

------------------------------------------------------------------------------
             |               Robust
update_covid |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.0427151   .0227048    -1.88   0.060     -.087244    .0018138
       _cons |   .4501608   .0162963    27.62   0.000     .4182002    .4821214
------------------------------------------------------------------------------

       _nl_1:  (_b[shifty] + _b[_cons]) / _b[_cons]

------------------------------------------------------------------------------
update_covid |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |   .9051115   .0480311    18.84   0.000     .8109724    .9992507
------------------------------------------------------------------------------

      Source |       SS           df       MS      Number of obs   =       447
-------------+----------------------------------   F(1, 445)       =      3.18
       Model |  .763738918         1  .763738918   Prob > F        =    0.0751
    Residual |   106.75304       445  .239894471   R-squared       =    0.0071
-------------+----------------------------------   Adj R-squared   =    0.0049
       Total |  107.516779       446   .24106901   Root MSE        =    .48979

------------------------------------------------------------------------------
update_covid |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.0827615   .0463838    -1.78   0.075      -.17392    .0083969
       _cons |   .4460094   .0335599    13.29   0.000     .3800539    .5119649
------------------------------------------------------------------------------

      Source |       SS           df       MS      Number of obs   =       544
-------------+----------------------------------   F(1, 542)       =      0.76
       Model |  .167943648         1  .167943648   Prob > F        =    0.3827
    Residual |  119.241983       542  .220003658   R-squared       =    0.0014
-------------+----------------------------------   Adj R-squared   =   -0.0004
       Total |  119.409926       543  .219907784   Root MSE        =    .46905

------------------------------------------------------------------------------
update_covid |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.0351525   .0402336    -0.87   0.383    -.1141855    .0438805
       _cons |   .3433962   .0288132    11.92   0.000     .2867969    .3999955
------------------------------------------------------------------------------

      Source |       SS           df       MS      Number of obs   =       909
-------------+----------------------------------   F(1, 907)       =      0.48
       Model |  .121223746         1  .121223746   Prob > F        =    0.4867
    Residual |  227.121901       907  .250410034   R-squared       =    0.0005
-------------+----------------------------------   Adj R-squared   =   -0.0006
       Total |  227.243124       908  .250267758   Root MSE        =    .50041

------------------------------------------------------------------------------
update_covid |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.0230963   .0331951    -0.70   0.487    -.0882445    .0420519
       _cons |   .5142857   .0234596    21.92   0.000     .4682444    .5603271
------------------------------------------------------------------------------

      Source |       SS           df       MS      Number of obs   =       991
-------------+----------------------------------   F(1, 989)       =      3.35
       Model |  .770110915         1  .770110915   Prob > F        =    0.0677
    Residual |  227.623431       989  .230155137   R-squared       =    0.0034
-------------+----------------------------------   Adj R-squared   =    0.0024
       Total |  228.393542       990  .230700547   Root MSE        =    .47974

------------------------------------------------------------------------------
update_covid |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |   -.055788   .0304982    -1.83   0.068    -.1156367    .0040607
       _cons |   .3891213    .021943    17.73   0.000     .3460611    .4321816
------------------------------------------------------------------------------

Simultaneous results for above, at, below

                                                Number of obs     =      1,900

------------------------------------------------------------------------------
             |               Robust
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
above_mean   |
      shifty |  -.0827615   .0463639    -1.79   0.074    -.1736331    .0081101
       _cons |   .4460094   .0340681    13.09   0.000     .3792372    .5127816
-------------+----------------------------------------------------------------
above_lnvar  |
       _cons |  -1.427556   .0202025   -70.66   0.000    -1.467152    -1.38796
-------------+----------------------------------------------------------------
at_mean      |
      shifty |  -.0351525   .0401991    -0.87   0.382    -.1139412    .0436362
       _cons |   .3433962    .029177    11.77   0.000     .2862103    .4005821
-------------+----------------------------------------------------------------
at_lnvar     |
       _cons |  -1.514111   .0319699   -47.36   0.000    -1.576771   -1.451451
-------------+----------------------------------------------------------------
below_mean   |
      shifty |  -.0230963   .0331673    -0.70   0.486     -.088103    .0419105
       _cons |   .5142857    .023437    21.94   0.000     .4683501    .5602213
-------------+----------------------------------------------------------------
below_lnvar  |
       _cons |  -1.384656    .001574  -879.72   0.000    -1.387741   -1.381571
------------------------------------------------------------------------------

       _nl_1:  ([above_mean]shifty + [above_mean]_cons) / [above_mean]_cons

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |   .8144399   .0940306     8.66   0.000     .6301434    .9987365
------------------------------------------------------------------------------

       _nl_1:  ([at_mean]shifty + [at_mean]_cons) / [at_mean]_cons

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |   .8976328   .1109118     8.09   0.000     .6802498    1.115016
------------------------------------------------------------------------------

       _nl_1:  ([below_mean]shifty + [below_mean]_cons) / [below_mean]_cons

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |   .9550906   .0630624    15.15   0.000     .8314904    1.078691
------------------------------------------------------------------------------

       _nl_1:  ([above_mean]shifty + [above_mean]_cons) / [above_mean]_cons - (
> [at_mean]shifty + [at_mean]_cons) / [at_mean]_cons

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |  -.0831929   .1454069    -0.57   0.567    -.3681852    .2017994
------------------------------------------------------------------------------

Simultaneous results for above, at, below

                                                Number of obs     =      1,900

------------------------------------------------------------------------------
             |               Robust
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
above_mean   |
      shifty |  -.0827615   .0463639    -1.79   0.074    -.1736331    .0081101
       _cons |   .4460094   .0340681    13.09   0.000     .3792372    .5127816
-------------+----------------------------------------------------------------
above_lnvar  |
       _cons |  -1.427556   .0202025   -70.66   0.000    -1.467152    -1.38796
-------------+----------------------------------------------------------------
at_mean      |
      shifty |  -.0351525   .0401991    -0.87   0.382    -.1139412    .0436362
       _cons |   .3433962    .029177    11.77   0.000     .2862103    .4005821
-------------+----------------------------------------------------------------
at_lnvar     |
       _cons |  -1.514111   .0319699   -47.36   0.000    -1.576771   -1.451451
-------------+----------------------------------------------------------------
below_mean   |
      shifty |  -.0230963   .0331673    -0.70   0.486     -.088103    .0419105
       _cons |   .5142857    .023437    21.94   0.000     .4683501    .5602213
-------------+----------------------------------------------------------------
below_lnvar  |
       _cons |  -1.384656    .001574  -879.72   0.000    -1.387741   -1.381571
------------------------------------------------------------------------------

       _nl_1:  ([at_mean]shifty + [at_mean]_cons) / [at_mean]_cons - ([below_me
> an]shifty + [below_mean]_cons) / [below_mean]_cons

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |  -.0574577   .1275864    -0.45   0.652    -.3075225     .192607
------------------------------------------------------------------------------

Simultaneous results for above, at, below

                                                Number of obs     =      1,900

------------------------------------------------------------------------------
             |               Robust
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
above_mean   |
      shifty |  -.0827615   .0463639    -1.79   0.074    -.1736331    .0081101
       _cons |   .4460094   .0340681    13.09   0.000     .3792372    .5127816
-------------+----------------------------------------------------------------
above_lnvar  |
       _cons |  -1.427556   .0202025   -70.66   0.000    -1.467152    -1.38796
-------------+----------------------------------------------------------------
at_mean      |
      shifty |  -.0351525   .0401991    -0.87   0.382    -.1139412    .0436362
       _cons |   .3433962    .029177    11.77   0.000     .2862103    .4005821
-------------+----------------------------------------------------------------
at_lnvar     |
       _cons |  -1.514111   .0319699   -47.36   0.000    -1.576771   -1.451451
-------------+----------------------------------------------------------------
below_mean   |
      shifty |  -.0230963   .0331673    -0.70   0.486     -.088103    .0419105
       _cons |   .5142857    .023437    21.94   0.000     .4683501    .5602213
-------------+----------------------------------------------------------------
below_lnvar  |
       _cons |  -1.384656    .001574  -879.72   0.000    -1.387741   -1.381571
------------------------------------------------------------------------------

       _nl_1:  ([above_mean]shifty + [above_mean]_cons) / [above_mean]_cons - (
> [below_mean]shifty + [below_mean]_cons) / [below_mean]_cons

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |  -.1406506   .1132194    -1.24   0.214    -.3625565    .0812553
------------------------------------------------------------------------------

Simultaneous results for below, not_below

                                                Number of obs     =      1,900

------------------------------------------------------------------------------
             |               Robust
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
below_mean   |
      shifty |  -.0230963   .0331673    -0.70   0.486     -.088103    .0419105
       _cons |   .5142857    .023437    21.94   0.000     .4683501    .5602213
-------------+----------------------------------------------------------------
below_lnvar  |
       _cons |  -1.384656    .001574  -879.72   0.000    -1.387741   -1.381571
-------------+----------------------------------------------------------------
not_below_~n |
      shifty |   -.055788   .0305117    -1.83   0.067    -.1155899    .0040138
       _cons |   .3891213   .0223059    17.44   0.000     .3454025    .4328402
-------------+----------------------------------------------------------------
not_below_~r |
       _cons |  -1.469002   .0187676   -78.27   0.000    -1.505786   -1.432218
------------------------------------------------------------------------------

       _nl_1:  ([below_mean]shifty + [below_mean]_cons) / [below_mean]_cons - (
> [not_below_mean]shifty + [not_below_mean]_cons) / [not_below_mean]_cons

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |   .0984597     .09618     1.02   0.306    -.0900497    .2869691
------------------------------------------------------------------------------

Linear regression                               Number of obs     =      1,900
                                                F(1, 1898)        =       4.58
                                                Prob > F          =     0.0325
                                                R-squared         =     0.0024
                                                Root MSE          =     5.4908

------------------------------------------------------------------------------
             |               Robust
update_mag~s |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.5393286   .2521001    -2.14   0.033    -1.033751   -.0449062
       _cons |   4.858851   .1822319    26.66   0.000     4.501455    5.216247
------------------------------------------------------------------------------

       _nl_1:  (_b[shifty] + _b[_cons]) / _b[_cons]

------------------------------------------------------------------------------
update_mag~s |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |   .8890008     .04896    18.16   0.000     .7930409    .9849607
------------------------------------------------------------------------------

      Source |       SS           df       MS      Number of obs   =       447
-------------+----------------------------------   F(1, 445)       =      2.88
       Model |  118.624335         1  118.624335   Prob > F        =    0.0903
    Residual |   18317.914       445  41.1638517   R-squared       =    0.0064
-------------+----------------------------------   Adj R-squared   =    0.0042
       Total |  18436.5384       446  41.3375299   Root MSE        =    6.4159

------------------------------------------------------------------------------
update_mag~s |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -1.031438   .6075948    -1.70   0.090    -2.225549    .1626741
       _cons |   5.682184   .4396106    12.93   0.000     4.818213    6.546155
------------------------------------------------------------------------------

      Source |       SS           df       MS      Number of obs   =       544
-------------+----------------------------------   F(1, 542)       =      0.50
       Model |  13.3201799         1  13.3201799   Prob > F        =    0.4783
    Residual |   14343.342       542  26.4637306   R-squared       =    0.0009
-------------+----------------------------------   Adj R-squared   =   -0.0009
       Total |  14356.6622       543  26.4395252   Root MSE        =    5.1443

------------------------------------------------------------------------------
update_mag~s |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.3130614   .4412655    -0.71   0.478    -1.179861    .5537387
       _cons |   3.689095   .3160113    11.67   0.000     3.068338    4.309852
------------------------------------------------------------------------------

      Source |       SS           df       MS      Number of obs   =       909
-------------+----------------------------------   F(1, 907)       =      1.58
       Model |  41.2590548         1  41.2590548   Prob > F        =    0.2089
    Residual |  23665.4097       907  26.0919622   R-squared       =    0.0017
-------------+----------------------------------   Adj R-squared   =    0.0006
       Total |  23706.6688       908  26.1086661   Root MSE        =     5.108

------------------------------------------------------------------------------
update_mag~s |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.4260965   .3388455    -1.26   0.209    -1.091109    .2389159
       _cons |   5.154708   .2394681    21.53   0.000     4.684732    5.624684
------------------------------------------------------------------------------

      Source |       SS           df       MS      Number of obs   =       991
-------------+----------------------------------   F(1, 989)       =      2.82
       Model |  95.0387596         1  95.0387596   Prob > F        =    0.0934
    Residual |  33337.1288       989  33.7079159   R-squared       =    0.0028
-------------+----------------------------------   Adj R-squared   =    0.0018
       Total |  33432.1676       990  33.7698662   Root MSE        =    5.8059

------------------------------------------------------------------------------
update_mag~s |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.6197472   .3690882    -1.68   0.093    -1.344033    .1045387
       _cons |   4.577229   .2655535    17.24   0.000     4.056116    5.098342
------------------------------------------------------------------------------

Simultaneous results for above, at, below

                                                Number of obs     =      1,900

------------------------------------------------------------------------------
             |               Robust
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
above_mean   |
      shifty |  -1.031438   .6077802    -1.70   0.090    -2.222665    .1597897
       _cons |   5.682184    .449794    12.63   0.000     4.800604    6.563764
-------------+----------------------------------------------------------------
above_lnvar  |
       _cons |    3.71756   .0323322   114.98   0.000     3.654191     3.78093
-------------+----------------------------------------------------------------
at_mean      |
      shifty |  -.3130614   .4407817    -0.71   0.478    -1.176978    .5508549
       _cons |   3.689095   .3185274    11.58   0.000     3.064793    4.313398
-------------+----------------------------------------------------------------
at_lnvar     |
       _cons |   3.275775   .0358674    91.33   0.000     3.205476    3.346074
-------------+----------------------------------------------------------------
below_mean   |
      shifty |  -.4260965   .3385556    -1.26   0.208    -1.089653    .2374604
       _cons |   5.154708   .2411726    21.37   0.000     4.682019    5.627398
-------------+----------------------------------------------------------------
below_lnvar  |
       _cons |   3.261627    .016918   192.79   0.000     3.228469    3.294786
------------------------------------------------------------------------------

       _nl_1:  ([above_mean]shifty + [above_mean]_cons) / [above_mean]_cons

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |   .8184787    .096812     8.45   0.000     .6287306    1.008227
------------------------------------------------------------------------------

       _nl_1:  ([at_mean]shifty + [at_mean]_cons) / [at_mean]_cons

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |   .9151387   .1142997     8.01   0.000     .6911155    1.139162
------------------------------------------------------------------------------

       _nl_1:  ([below_mean]shifty + [below_mean]_cons) / [below_mean]_cons

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |   .9173384   .0629824    14.56   0.000     .7938951    1.040782
------------------------------------------------------------------------------

       _nl_1:  ([above_mean]shifty + [above_mean]_cons) / [above_mean]_cons - (
> [at_mean]shifty + [at_mean]_cons) / [at_mean]_cons

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |    -.09666   .1497898    -0.65   0.519    -.3902427    .1969226
------------------------------------------------------------------------------

Simultaneous results for above, at, below

                                                Number of obs     =      1,900

------------------------------------------------------------------------------
             |               Robust
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
above_mean   |
      shifty |  -1.031438   .6077802    -1.70   0.090    -2.222665    .1597897
       _cons |   5.682184    .449794    12.63   0.000     4.800604    6.563764
-------------+----------------------------------------------------------------
above_lnvar  |
       _cons |    3.71756   .0323322   114.98   0.000     3.654191     3.78093
-------------+----------------------------------------------------------------
at_mean      |
      shifty |  -.3130614   .4407817    -0.71   0.478    -1.176978    .5508549
       _cons |   3.689095   .3185274    11.58   0.000     3.064793    4.313398
-------------+----------------------------------------------------------------
at_lnvar     |
       _cons |   3.275775   .0358674    91.33   0.000     3.205476    3.346074
-------------+----------------------------------------------------------------
below_mean   |
      shifty |  -.4260965   .3385556    -1.26   0.208    -1.089653    .2374604
       _cons |   5.154708   .2411726    21.37   0.000     4.682019    5.627398
-------------+----------------------------------------------------------------
below_lnvar  |
       _cons |   3.261627    .016918   192.79   0.000     3.228469    3.294786
------------------------------------------------------------------------------

       _nl_1:  ([at_mean]shifty + [at_mean]_cons) / [at_mean]_cons - ([below_me
> an]shifty + [below_mean]_cons) / [below_mean]_cons

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |  -.0021997   .1305036    -0.02   0.987    -.2579821    .2535827
------------------------------------------------------------------------------

Simultaneous results for above, at, below

                                                Number of obs     =      1,900

------------------------------------------------------------------------------
             |               Robust
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
above_mean   |
      shifty |  -1.031438   .6077802    -1.70   0.090    -2.222665    .1597897
       _cons |   5.682184    .449794    12.63   0.000     4.800604    6.563764
-------------+----------------------------------------------------------------
above_lnvar  |
       _cons |    3.71756   .0323322   114.98   0.000     3.654191     3.78093
-------------+----------------------------------------------------------------
at_mean      |
      shifty |  -.3130614   .4407817    -0.71   0.478    -1.176978    .5508549
       _cons |   3.689095   .3185274    11.58   0.000     3.064793    4.313398
-------------+----------------------------------------------------------------
at_lnvar     |
       _cons |   3.275775   .0358674    91.33   0.000     3.205476    3.346074
-------------+----------------------------------------------------------------
below_mean   |
      shifty |  -.4260965   .3385556    -1.26   0.208    -1.089653    .2374604
       _cons |   5.154708   .2411726    21.37   0.000     4.682019    5.627398
-------------+----------------------------------------------------------------
below_lnvar  |
       _cons |   3.261627    .016918   192.79   0.000     3.228469    3.294786
------------------------------------------------------------------------------

       _nl_1:  ([above_mean]shifty + [above_mean]_cons) / [above_mean]_cons - (
> [below_mean]shifty + [below_mean]_cons) / [below_mean]_cons

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |  -.0988597   .1154961    -0.86   0.392    -.3252279    .1275085
------------------------------------------------------------------------------

Simultaneous results for below, not_below

                                                Number of obs     =      1,900

------------------------------------------------------------------------------
             |               Robust
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
below_mean   |
      shifty |  -.4260965   .3385556    -1.26   0.208    -1.089653    .2374604
       _cons |   5.154708   .2411726    21.37   0.000     4.682019    5.627398
-------------+----------------------------------------------------------------
below_lnvar  |
       _cons |   3.261627    .016918   192.79   0.000     3.228469    3.294786
-------------+----------------------------------------------------------------
not_below_~n |
      shifty |  -.6197472   .3693478    -1.68   0.093    -1.343656    .1041611
       _cons |   4.577229   .2709439    16.89   0.000     4.046189    5.108269
-------------+----------------------------------------------------------------
not_below_~r |
       _cons |   3.517733   .0269555   130.50   0.000     3.464901    3.570565
------------------------------------------------------------------------------

       _nl_1:  ([below_mean]shifty + [below_mean]_cons) / [below_mean]_cons - (
> [not_below_mean]shifty + [not_below_mean]_cons) / [not_below_mean]_cons

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |   .0527363   .0979461     0.54   0.590    -.1392346    .2447072
------------------------------------------------------------------------------

. 
. table_from_tpl, t(code/ratio_p_template.tex) r(out/ratio.csv) o(out/ratio.tex
> )

Created tex file out/ratio.tex.
Created out/ratio.tex.

. 
. cap file close fh

. file open fh using out/ratio_est.tex,  write replace 
(note: file out/ratio_est.tex not found)

. 
. import delimited using out/ratio.csv, clear
(3 vars, 28 obs)

. drop if regexm(v1,"r2") == 1
(0 observations deleted)

. drop if inlist(v1,"allobs","aboveobs","belowobs","atobs") == 1
(4 observations deleted)

. local N = _N

.     forv i = 1/`N' {
  2.         local name = v1[`i']
  3.         local name = subinstr("ratio`name'","_","",.)
  4.         local value = v2[`i']
  5.         local value = subinstr("`value'","*","",.)
  6.         local value: di %5.3f round(real("`value'"),.001)
  7.         file write fh "\newcommand{\" "`name'" "}{`value'}" _n
  8. }

. 
. file close fh

. 
end of do-file

. 
. /* Appendix: Ratio, and Appendix: Heterogeneity by decile */
. do code/deciles.do

. /*****************************************************/
. /* /\* This dofile studies revealed pref outcomes *\/ */
. /*****************************************************/
. if "`c(username)'" == "pierre-lucvautrey" {
.   do ~/documents/github/covid/SetGlobals.do
. }

. else{
.   do ../SetGlobals.do

. version 13

. * set the number of ri replications
. global reps 1000

. 
. /* Sets stata globals */
. global raw = "../data"

. global int = "../data"

. 
. if "`c(username)'" == "charlierafkin" {
.   global raw = "~/Dropbox (MIT)/COVID/data/raw_decrypted/"
.   global int = "~/Dropbox (MIT)/COVID/data/intermediate/"
. }

. if "`c(username)'" == "pierre-lucvautrey" {
.   global raw = "~/Dropbox (MIT)/COVID/data/raw_decrypted/"
.   global int = "~/Dropbox (MIT)/COVID/data/intermediate/"
. }

. 
. global navy `" "51 122 183" "'

. global green `" "92 184 92" "'

. global ltblue `" "91 192 222" "'

. global red `" "217 83 79" "'

. global orange `" "240 173 78" "'

. 
. qui {

. 
. if "`c(username)'" == "pierre-lucvautrey" {
.   do ~/documents/github/COVID/programs.do
. }

. else{
.   do ../programs.do

. /*
> 
> Convert eps to pdf in mac Stata
> Author: CR
> Date: April 2018
> 
> */
. 
. 
. capture pr drop conversion

. capture pr define conversion

. 
. capture pr drop grout

. capture pr define grout

. 
. /******************************************/
. /* /\***** deflate cpi, base year *****\/ */
. /******************************************/
. capture pr drop get_cpi_deflator

. capture pr define get_cpi_deflator

. 
. 
. 
. 
. 
. 
. 
. /* other graphing/output programs that we want */
. 
. /****************************************************************************
> *********/
. /* program store_est_tpl : store b, se, p-values in format suitable for table
> _to_tpl */
. /****************************************************************************
> *********/
. cap prog drop store_est_tpl

. prog def store_est_tpl
  1. {
  2.   syntax using/,  coef(string) name(string) [format(string) beta se p n r2
>  all]
  3. 
.   /* turn on all flags if `all' is specified */
.   if !mi("`all'") {
  4.     local beta beta
  5.     local se se
  6.     local p p
  7.     local n n
  8.     local r2 r2
  9.   }
 10. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
 11. 
.   /* manage beta */
.   if !mi("`beta'") {
 12. 
.     /* store beta in the desired format */
.     local b3:  di `format' _b["`coef'"]
 13.     test `coef' = 0
 14.     local pvalue = `r(p)'
 15.     /* write p value (only makes sense if beta also specified) */
.     if !mi("`p'") {
 16.       insert_into_file using `using', key("`name'_p") value(" `pvalue'") f
> ormat("%5.2f")
 17.     }
 18. 
.     /* write beta to file */
.     insert_into_file using `using', key("`name'_beta") value(" `b3'") format(
> "`format'")
 19. 
.     /* count stars on the p and create starbeta */
.     count_stars, p(`pvalue')
 20.     insert_into_file using `using', key("`name'_starbeta") value(" `b3'`r(
> stars)'") format("`format'")
 21.   }
 22. 
.   /* manage se */
.   if !mi("`se'") {
 23.     local se3:  di `format' _se["`coef'"]
 24.     insert_into_file using `using', key("`name'_se") value(" `se3'")
 25.   }
 26. 
.   /* manage n */
.   if !mi("`n'") {
 27.     insert_into_file using `using', key("`name'_n") value(" `e(N)'") forma
> t("%1.0f")
 28.   }
 29. 
.   /* manage r2 */
.   if !mi("`r2'") {
 30.     insert_into_file using `using', key("`name'_r2") value(" `e(r2)'") for
> mat("%5.2f")
 31.   }
 32. }
 33. end

. /* *********** END program store_est_tpl ************************************
> ***** */
. 
. /****************************************************************************
> *********/
. /* program store_val_tpl : store value to a file with string and format      
>         */
. /****************************************************************************
> *********/
. cap prog drop store_val_tpl

. prog def store_val_tpl
  1. {
  2.   syntax using/,  Name(string) Value(string) [Format(string)]
  3. 
.   di `""store_val_tpl, name value format" is deprecated -- please use "insert
> _into_file, key value format" instead"'
  4. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
  5. 
.   /* get value in appropriate format (unless it's already a string) */
.   if !mi(real("`value'")) {
  6.     local v : di `format' `value'
  7.   }
  8.   else {
  9.     local v `value'
 10.   }
 11. 
.   /* write line to file */
.   append_to_file using `using', s("`name',`v'")
 12. }
 13. end

. /* *********** END program store_val_tpl ************************************
> ***** */
. 
. /****************************************************************************
> ***********************/
. /* program table_from_tpl : Create a table from a stored estimates file and a
>  .tex table template  */
. /****************************************************************************
> ***********************/
. cap prog drop table_from_tpl

. prog def table_from_tpl
  1. {
  2.   syntax, Template(string) Replacement(string) Output(string) [Verbose add
> stars dropstars]
  3. 
.   /* set up verbose flag */
.   if !mi("`verbose'") {
  4.       local v "-v"
  5.   }
  6.   else {
  7.       local v
  8.   }
  9. 
. 
.   /* if python path is not set, use current folder */
.   if mi("$PYTHONPATH") {
 10. 
.       /* set path to current folder */
.       local path .
 11.   }
 12.   else {
 13.       local path $PYTHONPATH
 14.   }
 15. 
.   /* check python file existence */
.   cap confirm file `path'/table_from_tpl.py
 16.   if _rc {
 17.       display as error "ERROR: table_from_tpl.py not found. Put in current
>  folder or folder defined by global \$PYTHONPATH"
 18.       error -1
 19.   }
 20. 
.   /* deal with addstars/dropstars parameters */
.   if "`addstars'" == "addstars" {
 21.     local star_param "--add-stars"
 22.   }
 23.   if "`dropstars'" == "dropstars" {
 24.     local star_param "--drop-stars"
 25.   }
 26. 
.   local pycommand `path'/table_from_tpl.py -t `template' -r `replacement' -o 
> `output' `v' `star_param'
 27.   if !mi("`verbose'") {
 28.       di `"Running `pycommand' "'
 29.   }
 30. 
.   shell python `pycommand'
 31.   cap confirm file `output'
 32.   if !_rc {
 33.     display "Created `output'."
 34.   }
 35.   else {
 36.     display "Could not create `output'."
 37.     error 1
 38.   }
 39. 
.   /* clean up the temporary file if star/nostar specified */
.   if !mi("`stars'") {
 40.     !rm $tmp/tpl_sed_tmp.tex
 41.   }
 42. }
 43. end

. /* *********** END program table_from_tpl ***********************************
> ****** */
. 
. /****************************************************************************
> ******/
. /* program append_to_file : Append a passed in string to a file              
>      */
. /****************************************************************************
> ******/
. cap prog drop append_to_file

. prog def append_to_file
  1. {
  2.   syntax using/, String(string)
  3. 
.   cap file close fh
  4.   file open fh using `using', write append
  5.   file write fh  `"`string'"'  _n
  6.   file close fh
  7. }
  8. end

. /* *********** END program append_to_file ***********************************
> ****** */
. 
. /****************************************************************************
> ******/
. /* program insert_into_file : Insert a key-value pair into a file            
>      */
. /*
> Assume "using" csv file take a key, value format, e.g.:
> 
> est1,3.544
> est2,3.234***
> ...
> 
> "est1" is the key. "3.544" is the value.
> 
> Example:
> 
> insert_into_file using $tmp/estimates.csv, key(est1) value(3.54493) format(%5
> .2f)
> 
> - if "est1" is not already in estimates file, it will be appended
> - if "est1" is already in estimates file, its value will be replaced with the
>  passed in parameter
> - estimates file will be created if it does not already exist
> 
> */
. 
. /****************************************************************************
> *******/
. cap prog drop insert_into_file

. prog def insert_into_file
  1. {
  2.   syntax using/, Key(string) Value(string) [Format(string) verbose]
  3. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
  4. 
.   /* get value in correct format (unless it's a string) */
.   if !mi(real("`value'")) {
  5.     local value : di `format' `value'
  6.   }
  7.   else {
  8.     local value `value'
  9.   }
 10. 
.   /* confirm file handles are closed */
.   cap file close fout
 11.   cap file close fin
 12. 
.   /* create a temporary file for writing */
.   tempfile tempfile
 13.   qui file open fout using `tempfile', write replace
 14. 
.   /* if input file doesn't exist, create it and display a notification */
.   cap confirm file `using'
 15.   if _rc {
 16.     if !mi("`verbose'") {
 17.       di "Creating new file `using'..."
 18.     }
 19.   }
 20. 
.   /* else, open the input file and read the first line */
.   else {
 21.     file open fin using `using', read
 22. 
.     /* read the first line */
.     file read fin line
 23.   }
 24. 
.   /* store a flag indicating whether we found the line or not */
.   local found 0
 25. 
.   /* loop over all lines of the file */
.   while r(eof) == 0 {
 26. 
.     /* check if line matches the current key */
.     if regexm("`line'", "^`key',") {
 27. 
.       /* if verbose, show what we're replacing  */
.       if !mi("`verbose'") {
 28.         di `"Replacing "`line'" with "`key',`value'"..."'
 29.       }
 30.       local found 1
 31. 
.       /* replace the line with key,value */
.       local line `key',`value'
 32.     }
 33. 
.     /* write the line to the output file */
.     file write fout "`line'" _n
 34. 
.     /* read the next line */
.     file read fin line
 35.   }
 36. 
.   /* if we didn't find this key, append it to the end */
.   if `found' == 0 {
 37.     file write fout "`key',`value'" _n
 38.   }
 39. 
.   /* close input and output files */
.   cap file close fin
 40.   file close fout
 41. 
.   /* copy the temporary file to the `using` filename */
.   copy `tempfile' `using', replace
 42. }
 43. end

. /* *********** END program insert_into_file *********************************
> ******** */
. 
. /****************************************************************************
> ******/
. /* program count_stars : return a string with the right number of stars      
>      */
. /****************************************************************************
> ******/
. cap prog drop count_stars

. prog def count_stars, rclass
  1. {
  2.   syntax, p(real)
  3.   local star = ""
  4.   if `p' <= 0.1  local star = "*"
  5.   if `p' <= 0.05 local star = "**"
  6.   if `p' <= 0.01 local star = "***"
  7.   return local stars = "`star'"
  8. }
  9. end

. /* *********** END program count_stars **************************************
> *** */
. 
. 
end of do-file
. }

. global PYTHONPATH = "code"

. 
end of do-file
. }

. clear 

. version 13

. 
. /***************************************************/
. /* form deciles of the prior beliefs distribution  */
. /***************************************************/
. use "$int/public_data" , clear

. keep if shifty != .
(0 observations deleted)

. foreach decile of numlist 0(10)90 {
  2.   assert !mi(deaths_pre)
  3.   
.   local decile_plus_10 = `decile'+10 
  4.   cap qreg deaths_pre, q(`decile')
  5.   if _rc == 0 local low = _b[_cons]
  6.   if _rc != 0 local low = 0
  7.   
.   cap qreg deaths_pre, q(`decile_plus_10')
  8.   if _rc == 0 local high = _b[_cons]
  9.   if _rc != 0 local high = . 
 10.   
.   gen q_deaths_`decile'_`decile_plus_10' = inrange(deaths_pre,`low',`high'-1)
>  
 11. }

. 
. assert q_deaths_0_10 + q_deaths_10_20 + q_deaths_20_30 + q_deaths_30_40 + q_d
> eaths_40_50 + q_deaths_50_60 + q_deaths_60_70 + q_deaths_70_80 + q_deaths_80_
> 90 + q_deaths_90_100  == 1 

. 
. /***********************/
. /* put into a picture  */
. /***********************/
. cap file close fh

. cap file open fh using out/decile_width.csv, write replace

. file write fh "outcome,q,b,se,by" _n

. 
. foreach decile of numlist 0(10)90 {
  2.   local decile_plus_10 = `decile' + 10
  3. 
.   foreach outcome in update_mag_deaths update_covid {
  4. 
.     /* get the effect on the outcome */
.     qui reghdfe `outcome' shifty if q_deaths_`decile'_`decile_plus_10' == 1, 
> vce(rob) absorb(stratum)
  5.     local est = _b[shifty]
  6.     local se = _se[shifty]
  7. 
.     file write fh "`outcome',`decile',`est',`se',deaths" _n
  8. 
.     /* get the effect on the ratio, excluding stratum FEs per the footnote in
>  the paper */ 
.     qui reg `outcome' shifty if q_deaths_`decile'_`decile_plus_10' == 1, vce(
> rob) 
  9.     local ratio = (_b[shifty]+_b[_cons])/(_b[_cons])
 10. 
.     nlcom (_b[shifty]+_b[_cons])/_b[_cons]
 11.     matrix var = r(V)
 12.     local se = sqrt(var[1,1])
 13.     file write fh "`outcome',`decile',`ratio',`se',diff" _n 
 14.     
.     
.   }
 15. 
. }

       _nl_1:  (_b[shifty]+_b[_cons])/_b[_cons]

------------------------------------------------------------------------------
update_mag~s |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |    .838278   .1353461     6.19   0.000     .5730044    1.103551
------------------------------------------------------------------------------

       _nl_1:  (_b[shifty]+_b[_cons])/_b[_cons]

------------------------------------------------------------------------------
update_covid |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |   .9176946    .134963     6.80   0.000     .6531719    1.182217
------------------------------------------------------------------------------

       _nl_1:  (_b[shifty]+_b[_cons])/_b[_cons]

------------------------------------------------------------------------------
update_mag~s |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |   1.142313   .1538483     7.42   0.000     .8407763    1.443851
------------------------------------------------------------------------------

       _nl_1:  (_b[shifty]+_b[_cons])/_b[_cons]

------------------------------------------------------------------------------
update_covid |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |   1.202727   .1574381     7.64   0.000     .8941543      1.5113
------------------------------------------------------------------------------

       _nl_1:  (_b[shifty]+_b[_cons])/_b[_cons]

------------------------------------------------------------------------------
update_mag~s |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |   .9814681    .129737     7.57   0.000     .7271882    1.235748
------------------------------------------------------------------------------

       _nl_1:  (_b[shifty]+_b[_cons])/_b[_cons]

------------------------------------------------------------------------------
update_covid |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |   1.004575   .1272753     7.89   0.000     .7551202     1.25403
------------------------------------------------------------------------------

       _nl_1:  (_b[shifty]+_b[_cons])/_b[_cons]

------------------------------------------------------------------------------
update_mag~s |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |   .7242864   .1090195     6.64   0.000     .5106121    .9379607
------------------------------------------------------------------------------

       _nl_1:  (_b[shifty]+_b[_cons])/_b[_cons]

------------------------------------------------------------------------------
update_covid |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |   .7302288   .1090218     6.70   0.000     .5165499    .9439077
------------------------------------------------------------------------------

       _nl_1:  (_b[shifty]+_b[_cons])/_b[_cons]

------------------------------------------------------------------------------
update_mag~s |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |   1.031108   .2285794     4.51   0.000     .5831008    1.479116
------------------------------------------------------------------------------

       _nl_1:  (_b[shifty]+_b[_cons])/_b[_cons]

------------------------------------------------------------------------------
update_covid |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |   1.058233   .2313729     4.57   0.000     .6047503    1.511716
------------------------------------------------------------------------------

       _nl_1:  (_b[shifty]+_b[_cons])/_b[_cons]

------------------------------------------------------------------------------
update_mag~s |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |   .8665123   .1390451     6.23   0.000     .5939889    1.139036
------------------------------------------------------------------------------

       _nl_1:  (_b[shifty]+_b[_cons])/_b[_cons]

------------------------------------------------------------------------------
update_covid |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |   .8688172    .138235     6.29   0.000     .5978816    1.139753
------------------------------------------------------------------------------

       _nl_1:  (_b[shifty]+_b[_cons])/_b[_cons]

------------------------------------------------------------------------------
update_mag~s |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |   .9635522   .2280953     4.22   0.000     .5164937    1.410611
------------------------------------------------------------------------------

       _nl_1:  (_b[shifty]+_b[_cons])/_b[_cons]

------------------------------------------------------------------------------
update_covid |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |   .9190962   .2140104     4.29   0.000     .4996435    1.338549
------------------------------------------------------------------------------

       _nl_1:  (_b[shifty]+_b[_cons])/_b[_cons]

------------------------------------------------------------------------------
update_mag~s |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |   .8442343   .2803992     3.01   0.003     .2946618    1.393807
------------------------------------------------------------------------------

       _nl_1:  (_b[shifty]+_b[_cons])/_b[_cons]

------------------------------------------------------------------------------
update_covid |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |   .8187135   .2700169     3.03   0.002       .28949    1.347937
------------------------------------------------------------------------------

       _nl_1:  (_b[shifty]+_b[_cons])/_b[_cons]

------------------------------------------------------------------------------
update_mag~s |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |   .8083221   .1502044     5.38   0.000     .5139269    1.102717
------------------------------------------------------------------------------

       _nl_1:  (_b[shifty]+_b[_cons])/_b[_cons]

------------------------------------------------------------------------------
update_covid |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |   .8080698   .1474966     5.48   0.000     .5189819    1.097158
------------------------------------------------------------------------------

       _nl_1:  (_b[shifty]+_b[_cons])/_b[_cons]

------------------------------------------------------------------------------
update_mag~s |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |   .8198197   .1200828     6.83   0.000     .5844618    1.055178
------------------------------------------------------------------------------

       _nl_1:  (_b[shifty]+_b[_cons])/_b[_cons]

------------------------------------------------------------------------------
update_covid |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |   .8089394   .1163568     6.95   0.000     .5808842    1.036995
------------------------------------------------------------------------------

. 
. /************************************************************/
. /* helper function to write numbers into the text directly  */
. /************************************************************/
. cap pr drop writelatex

. pr define writelatex
  1. syntax, number(string) name(string) [digits(real 0)] 
  2. 
.     file write fh "\newcommand{\" 
  3.     file write fh "`name'" 
  4.     file write fh "}{"
  5.     file write fh %5.`digits'fc (`number') "}" _n
  6. 
. end 

. 
. cap file close fh

. cap file open fh using out/pvaldeciles.tex, write replace 

. 
. /******************/
. /* /\* graph  *\/ */
. /******************/
. import delimited using out/decile_width, clear
(5 vars, 40 obs)

. gen high = b + 1.96 * se

. gen low = b - 1.96 * se

. keep if by == "diff" & outcome == "update_covid"
(30 observations deleted)

. 
. gen inv_var = 1/(se^2)

. 
. reg b q if by == "diff" & outcome == "update_covid" [pw=inv_var], rob
(sum of wgt is 467.4985885620117)

Linear regression                               Number of obs     =         10
                                                F(1, 8)           =       3.72
                                                Prob > F          =     0.0898
                                                R-squared         =     0.2325
                                                Root MSE          =     .13114

------------------------------------------------------------------------------
             |               Robust
           b |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
           q |  -.0021104   .0010936    -1.93   0.090    -.0046323    .0004116
       _cons |   .9802006   .0906082    10.82   0.000     .7712578    1.189143
------------------------------------------------------------------------------

. matrix mat = r(table)

. local p: di %5.3f mat[4,1]

. 
. writelatex, name(pupdatecovidratio) number(`p') digits(3) 

. 
. twoway ///
>     (scatter b q, yline(1, lcolor(red))  ytitle("Treatment effect ratio of In
> consistent to Consistent") msymbol(O)  ) ///n
>     (lfit b q [pw=inv_var], lpattern(line) xtitle("Percentile of prior belief
> s" "{&larr} more optimistic | more pessimistic {&rarr}") xlab(0 "0-9" 10 "10-
> 19" ///
>     20 "20-29"     30 "30-39" 40 "40-49" 50 "50-59" 60 "60-69" 70 "70-79" 80 
> "80-89" 90 "90-100" , angle(45)) legend(off) ///
>     text(1.15 57 "Test of H{sub:0}: slope = 0", place(e)) ///
>     text(1.1 60 "{it:p}-value: `p'", place(e) ) )
(note:  named style line not found in class linepattern, default attributes
    used)
(note:  named style line not found in class linepattern, default attributes
    used)

.     
. grout out/ratio_frac , pdf 
out/ratio_frac written as PDF

. 
. /******* version with 95% CI ********/
.  
. twoway ///
>     (rarea high low q, color(gs15) )     ///
>     (scatter b q, mcolor(black)   ytitle("Treatment effect ratio of Inconsist
> ent to Consistent") msymbol(O)   ///
>  xtitle("Percentile of prior beliefs" "{&larr} more optimistic | more pessimi
> stic {&rarr}") xlab(0 "0-9" 10 "10-19" ///
>     20 "20-29"     30 "30-39" 40 "40-49" 50 "50-59" 60 "60-69" 70 "70-79" 80 
> "80-89" 90 "90-100" , angle(45)) legend(off) ) ///
>     (function y =1 , lpattern(solid) lcolor(red) legend(off) range(0 100)  ) 

.   
.     
. grout out/ratio_frac_ci , pdf
out/ratio_frac_ci written as PDF

. 
. 
. /****** coef ratio ******/ 
. import delimited using out/decile_width, clear
(5 vars, 40 obs)

. keep if by == "diff" & outcome == "update_mag_deaths"
(30 observations deleted)

. gen high = b + 1.96 * se

. gen low = b - 1.96 * se

. 
. gen inv_var = 1/(se^2)

. 
. reg b q if by == "diff" & outcome == "update_mag_deaths" [pw=inv_var], rob
(sum of wgt is 456.8624639511108)

Linear regression                               Number of obs     =         10
                                                F(1, 8)           =       1.33
                                                Prob > F          =     0.2825
                                                R-squared         =     0.1063
                                                Root MSE          =     .12817

------------------------------------------------------------------------------
             |               Robust
           b |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
           q |  -.0012979   .0011265    -1.15   0.283    -.0038956    .0012998
       _cons |   .9299025   .0897287    10.36   0.000     .7229878    1.136817
------------------------------------------------------------------------------

. matrix mat = r(table)

. local p: di %5.3f mat[4,1]

. 
. twoway ///
>     (scatter b q, yline(1, lcolor(red)) ytitle("Treatment effect ratio of Inc
> onsistent to Consistent") msymbol(O)  ) ///
>     (lfit b q [pw=inv_var], lpattern(line) xtitle("Percentile of prior belief
> s" "{&larr} more optimistic | more pessimistic {&rarr}") xlab(0 "0-9" 10 "10-
> 19" ///
>     20 "20-29"     30 "30-39" 40 "40-49" 50 "50-59" 60 "60-69" 70 "70-79" 80 
> "80-89" 90 "90-100" , angle(45)) legend(off) ///
>     text(1.15 57 "Test of H{sub:0}: slope = 0", place(e)) ///
>     text(1.1 60 "{it:p}-value: `p'", place(e) ) )
(note:  named style line not found in class linepattern, default attributes
    used)
(note:  named style line not found in class linepattern, default attributes
    used)

.     
. grout out/ratio_deaths , pdf
out/ratio_deaths written as PDF

. 
. twoway ///
>     (rarea high low q, color(gs15) )     ///
>     (scatter b q, mcolor(black)   ytitle("Treatment effect ratio of Inconsist
> ent to Consistent") msymbol(O)   ///
>     xtitle("Percentile of prior beliefs" "{&larr} more optimistic | more pess
> imistic {&rarr}") xlab(0 "0-9" 10 "10-19" ///
>     20 "20-29"     30 "30-39" 40 "40-49" 50 "50-59" 60 "60-69" 70 "70-79" 80 
> "80-89" 90 "90-100" , angle(45)) legend(off) ) ///
> (function y =1 , lcolor(red) legend(off) lpattern(solid) range(0 100) ) 

. 
. grout out/ratio_deaths_ci , pdf
out/ratio_deaths_ci written as PDF

. 
. writelatex, name(pupdatemagdeathsratio) number(`p') digits(3) 

. cap file close fh

. 
. 
. /****************************/
. /* coef  by decile and width  */
. /****************************/
. import delimited using out/decile_width, clear
(5 vars, 40 obs)

. gen inv_var = 1/(se^2)

. 
. keep if by == "deaths" 
(20 observations deleted)

. gen high = b + 1.96 * se

. gen low = b - 1.96 * se

. 
. twoway /// 
>     (scatter b q if outcome == "update_mag_deaths", yline(0, lpattern(dash) l
> color(gray) ) ///
>     ytitle("Treatment effect on update magnitude") msymbol(O)) ///
>     (lfit b q [pw=inv_var] if outcome == "update_mag_deaths", lpattern(line) 
> xtitle("Percentile of prior beliefs" "{&larr} more optimistic | more pessimis
> tic {&rarr}") xlab(0 "0-9" 10 "10-19" ///
>     20 "20-29"     30 "30-39" 40 "40-49" 50 "50-59" 60 "60-69" 70 "70-79" 80 
> "80-89" 90 "90-100" , angle(45)) legend(off) )
(note:  named style line not found in class linepattern, default attributes
    used)
(note:  named style line not found in class linepattern, default attributes
    used)

. 
. grout out/decile_update_mag_deaths_deaths , pdf
out/decile_update_mag_deaths_deaths written as PDF

. 
. twoway /// 
>     (scatter b q if outcome == "update_covid", yline(0, lpattern(dash) lcolor
> (gray) ) ytitle("Treatment effect on update propensity") msymbol(O)) ///
>     (lfit b q [pw=inv_var] if outcome == "update_covid", lpattern(line) xtitl
> e("Percentile of prior beliefs" "{&larr} more optimistic | more pessimistic {
> &rarr}") xlab(0 "0-9" 10 "10-19" ///
>     20 "20-29"     30 "30-39" 40 "40-49" 50 "50-59" 60 "60-69" 70 "70-79" 80 
> "80-89" 90 "90-100" , angle(45)) legend(off) )
(note:  named style line not found in class linepattern, default attributes
    used)
(note:  named style line not found in class linepattern, default attributes
    used)

. 
. grout out/decile_update_covid_deaths , pdf
out/decile_update_covid_deaths written as PDF

. 
end of do-file

. 
. /* Appendix: add/subtract controls for Table 2 */
. do code/shifty_controls.do

. /****************************************************************************
> *****************/
. /* This generates a table of the steady/shifty experiment with various contro
> ls/no controls  */
. /****************************************************************************
> *****************/
. /**********************************************************/
. /* Generate effect on alternate outcome of belief update  */
. /**********************************************************/
. if "`c(username)'" == "pierre-lucvautrey" {
.   do ~/documents/github/covid/SetGlobals.do
. }

. else{
.   do ../SetGlobals.do

. version 13

. * set the number of ri replications
. global reps 1000

. 
. /* Sets stata globals */
. global raw = "../data"

. global int = "../data"

. 
. if "`c(username)'" == "charlierafkin" {
.   global raw = "~/Dropbox (MIT)/COVID/data/raw_decrypted/"
.   global int = "~/Dropbox (MIT)/COVID/data/intermediate/"
. }

. if "`c(username)'" == "pierre-lucvautrey" {
.   global raw = "~/Dropbox (MIT)/COVID/data/raw_decrypted/"
.   global int = "~/Dropbox (MIT)/COVID/data/intermediate/"
. }

. 
. global navy `" "51 122 183" "'

. global green `" "92 184 92" "'

. global ltblue `" "91 192 222" "'

. global red `" "217 83 79" "'

. global orange `" "240 173 78" "'

. 
. qui {

. 
. if "`c(username)'" == "pierre-lucvautrey" {
.   do ~/documents/github/COVID/programs.do
. }

. else{
.   do ../programs.do

. /*
> 
> Convert eps to pdf in mac Stata
> Author: CR
> Date: April 2018
> 
> */
. 
. 
. capture pr drop conversion

. capture pr define conversion

. 
. capture pr drop grout

. capture pr define grout

. 
. /******************************************/
. /* /\***** deflate cpi, base year *****\/ */
. /******************************************/
. capture pr drop get_cpi_deflator

. capture pr define get_cpi_deflator

. 
. 
. 
. 
. 
. 
. 
. /* other graphing/output programs that we want */
. 
. /****************************************************************************
> *********/
. /* program store_est_tpl : store b, se, p-values in format suitable for table
> _to_tpl */
. /****************************************************************************
> *********/
. cap prog drop store_est_tpl

. prog def store_est_tpl
  1. {
  2.   syntax using/,  coef(string) name(string) [format(string) beta se p n r2
>  all]
  3. 
.   /* turn on all flags if `all' is specified */
.   if !mi("`all'") {
  4.     local beta beta
  5.     local se se
  6.     local p p
  7.     local n n
  8.     local r2 r2
  9.   }
 10. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
 11. 
.   /* manage beta */
.   if !mi("`beta'") {
 12. 
.     /* store beta in the desired format */
.     local b3:  di `format' _b["`coef'"]
 13.     test `coef' = 0
 14.     local pvalue = `r(p)'
 15.     /* write p value (only makes sense if beta also specified) */
.     if !mi("`p'") {
 16.       insert_into_file using `using', key("`name'_p") value(" `pvalue'") f
> ormat("%5.2f")
 17.     }
 18. 
.     /* write beta to file */
.     insert_into_file using `using', key("`name'_beta") value(" `b3'") format(
> "`format'")
 19. 
.     /* count stars on the p and create starbeta */
.     count_stars, p(`pvalue')
 20.     insert_into_file using `using', key("`name'_starbeta") value(" `b3'`r(
> stars)'") format("`format'")
 21.   }
 22. 
.   /* manage se */
.   if !mi("`se'") {
 23.     local se3:  di `format' _se["`coef'"]
 24.     insert_into_file using `using', key("`name'_se") value(" `se3'")
 25.   }
 26. 
.   /* manage n */
.   if !mi("`n'") {
 27.     insert_into_file using `using', key("`name'_n") value(" `e(N)'") forma
> t("%1.0f")
 28.   }
 29. 
.   /* manage r2 */
.   if !mi("`r2'") {
 30.     insert_into_file using `using', key("`name'_r2") value(" `e(r2)'") for
> mat("%5.2f")
 31.   }
 32. }
 33. end

. /* *********** END program store_est_tpl ************************************
> ***** */
. 
. /****************************************************************************
> *********/
. /* program store_val_tpl : store value to a file with string and format      
>         */
. /****************************************************************************
> *********/
. cap prog drop store_val_tpl

. prog def store_val_tpl
  1. {
  2.   syntax using/,  Name(string) Value(string) [Format(string)]
  3. 
.   di `""store_val_tpl, name value format" is deprecated -- please use "insert
> _into_file, key value format" instead"'
  4. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
  5. 
.   /* get value in appropriate format (unless it's already a string) */
.   if !mi(real("`value'")) {
  6.     local v : di `format' `value'
  7.   }
  8.   else {
  9.     local v `value'
 10.   }
 11. 
.   /* write line to file */
.   append_to_file using `using', s("`name',`v'")
 12. }
 13. end

. /* *********** END program store_val_tpl ************************************
> ***** */
. 
. /****************************************************************************
> ***********************/
. /* program table_from_tpl : Create a table from a stored estimates file and a
>  .tex table template  */
. /****************************************************************************
> ***********************/
. cap prog drop table_from_tpl

. prog def table_from_tpl
  1. {
  2.   syntax, Template(string) Replacement(string) Output(string) [Verbose add
> stars dropstars]
  3. 
.   /* set up verbose flag */
.   if !mi("`verbose'") {
  4.       local v "-v"
  5.   }
  6.   else {
  7.       local v
  8.   }
  9. 
. 
.   /* if python path is not set, use current folder */
.   if mi("$PYTHONPATH") {
 10. 
.       /* set path to current folder */
.       local path .
 11.   }
 12.   else {
 13.       local path $PYTHONPATH
 14.   }
 15. 
.   /* check python file existence */
.   cap confirm file `path'/table_from_tpl.py
 16.   if _rc {
 17.       display as error "ERROR: table_from_tpl.py not found. Put in current
>  folder or folder defined by global \$PYTHONPATH"
 18.       error -1
 19.   }
 20. 
.   /* deal with addstars/dropstars parameters */
.   if "`addstars'" == "addstars" {
 21.     local star_param "--add-stars"
 22.   }
 23.   if "`dropstars'" == "dropstars" {
 24.     local star_param "--drop-stars"
 25.   }
 26. 
.   local pycommand `path'/table_from_tpl.py -t `template' -r `replacement' -o 
> `output' `v' `star_param'
 27.   if !mi("`verbose'") {
 28.       di `"Running `pycommand' "'
 29.   }
 30. 
.   shell python `pycommand'
 31.   cap confirm file `output'
 32.   if !_rc {
 33.     display "Created `output'."
 34.   }
 35.   else {
 36.     display "Could not create `output'."
 37.     error 1
 38.   }
 39. 
.   /* clean up the temporary file if star/nostar specified */
.   if !mi("`stars'") {
 40.     !rm $tmp/tpl_sed_tmp.tex
 41.   }
 42. }
 43. end

. /* *********** END program table_from_tpl ***********************************
> ****** */
. 
. /****************************************************************************
> ******/
. /* program append_to_file : Append a passed in string to a file              
>      */
. /****************************************************************************
> ******/
. cap prog drop append_to_file

. prog def append_to_file
  1. {
  2.   syntax using/, String(string)
  3. 
.   cap file close fh
  4.   file open fh using `using', write append
  5.   file write fh  `"`string'"'  _n
  6.   file close fh
  7. }
  8. end

. /* *********** END program append_to_file ***********************************
> ****** */
. 
. /****************************************************************************
> ******/
. /* program insert_into_file : Insert a key-value pair into a file            
>      */
. /*
> Assume "using" csv file take a key, value format, e.g.:
> 
> est1,3.544
> est2,3.234***
> ...
> 
> "est1" is the key. "3.544" is the value.
> 
> Example:
> 
> insert_into_file using $tmp/estimates.csv, key(est1) value(3.54493) format(%5
> .2f)
> 
> - if "est1" is not already in estimates file, it will be appended
> - if "est1" is already in estimates file, its value will be replaced with the
>  passed in parameter
> - estimates file will be created if it does not already exist
> 
> */
. 
. /****************************************************************************
> *******/
. cap prog drop insert_into_file

. prog def insert_into_file
  1. {
  2.   syntax using/, Key(string) Value(string) [Format(string) verbose]
  3. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
  4. 
.   /* get value in correct format (unless it's a string) */
.   if !mi(real("`value'")) {
  5.     local value : di `format' `value'
  6.   }
  7.   else {
  8.     local value `value'
  9.   }
 10. 
.   /* confirm file handles are closed */
.   cap file close fout
 11.   cap file close fin
 12. 
.   /* create a temporary file for writing */
.   tempfile tempfile
 13.   qui file open fout using `tempfile', write replace
 14. 
.   /* if input file doesn't exist, create it and display a notification */
.   cap confirm file `using'
 15.   if _rc {
 16.     if !mi("`verbose'") {
 17.       di "Creating new file `using'..."
 18.     }
 19.   }
 20. 
.   /* else, open the input file and read the first line */
.   else {
 21.     file open fin using `using', read
 22. 
.     /* read the first line */
.     file read fin line
 23.   }
 24. 
.   /* store a flag indicating whether we found the line or not */
.   local found 0
 25. 
.   /* loop over all lines of the file */
.   while r(eof) == 0 {
 26. 
.     /* check if line matches the current key */
.     if regexm("`line'", "^`key',") {
 27. 
.       /* if verbose, show what we're replacing  */
.       if !mi("`verbose'") {
 28.         di `"Replacing "`line'" with "`key',`value'"..."'
 29.       }
 30.       local found 1
 31. 
.       /* replace the line with key,value */
.       local line `key',`value'
 32.     }
 33. 
.     /* write the line to the output file */
.     file write fout "`line'" _n
 34. 
.     /* read the next line */
.     file read fin line
 35.   }
 36. 
.   /* if we didn't find this key, append it to the end */
.   if `found' == 0 {
 37.     file write fout "`key',`value'" _n
 38.   }
 39. 
.   /* close input and output files */
.   cap file close fin
 40.   file close fout
 41. 
.   /* copy the temporary file to the `using` filename */
.   copy `tempfile' `using', replace
 42. }
 43. end

. /* *********** END program insert_into_file *********************************
> ******** */
. 
. /****************************************************************************
> ******/
. /* program count_stars : return a string with the right number of stars      
>      */
. /****************************************************************************
> ******/
. cap prog drop count_stars

. prog def count_stars, rclass
  1. {
  2.   syntax, p(real)
  3.   local star = ""
  4.   if `p' <= 0.1  local star = "*"
  5.   if `p' <= 0.05 local star = "**"
  6.   if `p' <= 0.01 local star = "***"
  7.   return local stars = "`star'"
  8. }
  9. end

. /* *********** END program count_stars **************************************
> *** */
. 
. 
end of do-file
. }

. global PYTHONPATH = "code"

. 
end of do-file
. }

. clear 

. version 13

. 
. use "$int/public_data" , clear

. keep if !mi(shifty)
(0 observations deleted)

. assert !mi(hhi)

. assert !mi(education)

. assert !mi(ethnicity)

. assert !mi(hispanic) 

. gen race_eth = "white non-hispanic" if ethnicity == "1"
(444 missing values generated)

. replace race_eth = "black non-hispanic" if ethnicity == "2"
(172 real changes made)

. replace race_eth = "hispanic" if inrange(real(hispanic),2,14) 
(177 real changes made)

. replace race_eth = "asian/other" if race_eth == "" 
(192 real changes made)

. 
. destring hhi , replace 
hhi: all characters numeric; replaced as int

. gen hhi_bin = "low or missing" if inrange(hhi,1,4) | hhi == -3105
(1,226 missing values generated)

. replace hhi_bin = "middle" if inrange(hhi,5,18) 
(931 real changes made)

. replace hhi_bin = "high" if inrange(hhi,19,.) 
(295 real changes made)

. 
. destring education, replace 
education: all characters numeric; replaced as int

. cap drop educ_bin

. gen educ_bin = "hs or less or missing" if inlist(education,1,2,-3105)
(1,427 missing values generated)

. replace educ_bin = "some college" if inlist(education,3,4,5)
(596 real changes made)

. replace educ_bin = "college+" if inlist(education,6,7,8)
(831 real changes made)

. 
. la var shifty "Inconsistent"

. 
. eststo clear

. foreach outcome in update_mag_deaths update_covid {
  2. 
.   /***** randomization inference for all specs *****/
.   /* no fe */
.   ritest shifty _b[shifty], strata(ri_stratum) reps($reps) seed(100) : reg `o
> utcome' shifty, vce(rob)
  3.   matrix p = r(p)
  4.   local p: di %5.3f p[1,1] 
  5.   local p_ri_nofe = `p' 
  6.   
.   /* stratum fe */ 
.   ritest shifty _b[shifty], strata(ri_stratum) reps($reps) seed(100) : reghdf
> e `outcome' shifty, vce(rob) absorb(stratum)  
  7.   matrix p = r(p)
  8.   local p: di %5.3f p[1,1] 
  9.   local p_ri_stratum = `p' 
 10. 
.   /* demo + stratum fe */ 
.   ritest shifty _b[shifty], strata(ri_stratum) reps($reps) seed(100) : reghdf
> e `outcome' shifty, vce(rob) absorb(stratum region race_eth educ_bin hhi_bin)
>   
 11.   matrix p = r(p)
 12.   local p: di %5.3f p[1,1] 
 13.   local p_ri_group = `p'     
 14.     
.   /****** regression: no controls ******/ 
.   eststo: reg `outcome' shifty, vce(rob)
 15.   matrix mat_nofe = r(table)
 16.   local p_nofe: di %5.3f mat_nofe[4,1]  
 17.   estadd local p_rob = `p_nofe' 
 18.   estadd local p_ri = `p_ri_nofe' 
 19.   estadd local stratum "No"
 20.   estadd local group "No"
 21.   
.   /******* stratum fixed effects *******/ 
.   eststo: reghdfe `outcome' shifty, vce(rob) absorb(stratum) 
 22.   matrix mat_stratum = r(table)
 23.   local p_stratum: di %5.3f mat_stratum[4,1]
 24.   estadd local p_rob = `p_stratum' 
 25.   estadd local p_ri = `p_ri_stratum' 
 26.   estadd local stratum "\$\checkmark\$"
 27.   estadd local group "No"
 28. 
.   /* randomization inference */ 
. 
.   /******* stratum + demographic group fixed effects *****/     
.   eststo: reghdfe `outcome' shifty, vce(rob) absorb(stratum region race_eth e
> duc_bin hhi_bin) 
 29.   matrix mat_group = r(table)
 30.   local p_group: di %5.3f mat_group[4,1]
 31.   estadd local p_rob = `p_group' 
 32.   estadd local p_ri = `p_ri_group'
 33.   estadd local stratum "\$\checkmark\$"
 34.   estadd local group "\$\checkmark\$"
 35.   
. }
(running regress on estimation sample)

Linear regression                               Number of obs     =      1,900
                                                F(1, 1898)        =       4.58
                                                Prob > F          =     0.0325
                                                R-squared         =     0.0024
                                                Root MSE          =     5.4908

------------------------------------------------------------------------------
             |               Robust
update_mag~s |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.5393286   .2521001    -2.14   0.033    -1.033751   -.0449062
       _cons |   4.858851   .1822319    26.66   0.000     4.501455    5.216247
------------------------------------------------------------------------------

Resampling replications (1000)
----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5 
..................................................    50
..................................................   100
..................................................   150
..................................................   200
..................................................   250
..................................................   300
..................................................   350
..................................................   400
..................................................   450
..................................................   500
..................................................   550
..................................................   600
..................................................   650
..................................................   700
..................................................   750
..................................................   800
..................................................   850
..................................................   900
..................................................   950
..................................................  1000

      command:  regress update_mag_deaths shifty, vce(rob)
        _pm_1:  _b[shifty]
  res. var(s):  shifty
   Resampling:  Permuting shifty
Clust. var(s):  __000000
     Clusters:  1900
Strata var(s):  ri_stratum
       Strata:  679

------------------------------------------------------------------------------
T            |     T(obs)       c       n   p=c/n   SE(p) [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _pm_1 |  -.5393286      23    1000  0.0230  0.0047  .0146346   .0343123
------------------------------------------------------------------------------
Note: Confidence interval is with respect to p=c/n.
Note: c = #{|T| >= |T(obs)|}
(running reghdfe on estimation sample)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   1,   1881) =       4.12
                                                  Prob > F        =     0.0425
                                                  R-squared       =     0.0372
                                                  Adj R-squared   =     0.0280
                                                  Within R-sq.    =     0.0022
                                                  Root MSE        =     5.4184

------------------------------------------------------------------------------
             |               Robust
update_mag~s |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |   -.505591   .2490891    -2.03   0.043    -.9941109    -.017071
       _cons |    4.84168   .1794968    26.97   0.000     4.489646    5.193714
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+

Resampling replications (1000)
----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5 
..................................................    50
..................................................   100
..................................................   150
..................................................   200
..................................................   250
..................................................   300
..................................................   350
..................................................   400
..................................................   450
..................................................   500
..................................................   550
..................................................   600
..................................................   650
..................................................   700
..................................................   750
..................................................   800
..................................................   850
..................................................   900
..................................................   950
..................................................  1000

      command:  reghdfe update_mag_deaths shifty, absorb(stratum) vce(rob)
        _pm_1:  _b[shifty]
  res. var(s):  shifty
   Resampling:  Permuting shifty
Clust. var(s):  __000000
     Clusters:  1900
Strata var(s):  ri_stratum
       Strata:  679

------------------------------------------------------------------------------
T            |     T(obs)       c       n   p=c/n   SE(p) [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _pm_1 |   -.505591      39    1000  0.0390  0.0061  .0278771   .0529309
------------------------------------------------------------------------------
Note: Confidence interval is with respect to p=c/n.
Note: c = #{|T| >= |T(obs)|}
(running reghdfe on estimation sample)
(MWFE estimator converged in 7 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 5 HDFE groups                           F(   1,   1871) =       3.77
                                                  Prob > F        =     0.0523
                                                  R-squared       =     0.0441
                                                  Adj R-squared   =     0.0298
                                                  Within R-sq.    =     0.0020
                                                  Root MSE        =     5.4136

------------------------------------------------------------------------------
             |               Robust
update_mag~s |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.4854503   .2499513    -1.94   0.052     -.975663    .0047624
       _cons |   4.831429   .1800382    26.84   0.000     4.478333    5.184526
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
      region |         4           1           3     |
    race_eth |         4           1           3    ?|
    educ_bin |         3           1           2    ?|
     hhi_bin |         3           1           2    ?|
-----------------------------------------------------+
? = number of redundant parameters may be higher

Resampling replications (1000)
----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5 
..................................................    50
..................................................   100
..................................................   150
..................................................   200
..................................................   250
..................................................   300
..................................................   350
..................................................   400
..................................................   450
..................................................   500
..................................................   550
..................................................   600
..................................................   650
..................................................   700
..................................................   750
..................................................   800
..................................................   850
..................................................   900
..................................................   950
..................................................  1000

      command:  reghdfe update_mag_deaths shifty, absorb(stratum region
                    race_eth educ_bin hhi_bin) vce(rob)
        _pm_1:  _b[shifty]
  res. var(s):  shifty
   Resampling:  Permuting shifty
Clust. var(s):  __000000
     Clusters:  1900
Strata var(s):  ri_stratum
       Strata:  679

------------------------------------------------------------------------------
T            |     T(obs)       c       n   p=c/n   SE(p) [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _pm_1 |  -.4854503      48    1000  0.0480  0.0068  .0356003   .0631401
------------------------------------------------------------------------------
Note: Confidence interval is with respect to p=c/n.
Note: c = #{|T| >= |T(obs)|}

Linear regression                               Number of obs     =      1,900
                                                F(1, 1898)        =       4.58
                                                Prob > F          =     0.0325
                                                R-squared         =     0.0024
                                                Root MSE          =     5.4908

------------------------------------------------------------------------------
             |               Robust
update_mag~s |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.5393286   .2521001    -2.14   0.033    -1.033751   -.0449062
       _cons |   4.858851   .1822319    26.66   0.000     4.501455    5.216247
------------------------------------------------------------------------------
(est1 stored)

added macro:
              e(p_rob) : ".033"

added macro:
               e(p_ri) : ".023"

added macro:
            e(stratum) : "No"

added macro:
              e(group) : "No"
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   1,   1881) =       4.12
                                                  Prob > F        =     0.0425
                                                  R-squared       =     0.0372
                                                  Adj R-squared   =     0.0280
                                                  Within R-sq.    =     0.0022
                                                  Root MSE        =     5.4184

------------------------------------------------------------------------------
             |               Robust
update_mag~s |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |   -.505591   .2490891    -2.03   0.043    -.9941109    -.017071
       _cons |    4.84168   .1794968    26.97   0.000     4.489646    5.193714
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est2 stored)

added macro:
              e(p_rob) : ".043"

added macro:
               e(p_ri) : ".039"

added macro:
            e(stratum) : "$\checkmark$"

added macro:
              e(group) : "No"
(MWFE estimator converged in 7 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 5 HDFE groups                           F(   1,   1871) =       3.77
                                                  Prob > F        =     0.0523
                                                  R-squared       =     0.0441
                                                  Adj R-squared   =     0.0298
                                                  Within R-sq.    =     0.0020
                                                  Root MSE        =     5.4136

------------------------------------------------------------------------------
             |               Robust
update_mag~s |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.4854503   .2499513    -1.94   0.052     -.975663    .0047624
       _cons |   4.831429   .1800382    26.84   0.000     4.478333    5.184526
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
      region |         4           1           3     |
    race_eth |         4           1           3    ?|
    educ_bin |         3           1           2    ?|
     hhi_bin |         3           1           2    ?|
-----------------------------------------------------+
? = number of redundant parameters may be higher
(est3 stored)

added macro:
              e(p_rob) : ".052"

added macro:
               e(p_ri) : ".048"

added macro:
            e(stratum) : "$\checkmark$"

added macro:
              e(group) : "$\checkmark$"
(running regress on estimation sample)

Linear regression                               Number of obs     =      1,900
                                                F(1, 1898)        =       3.54
                                                Prob > F          =     0.0601
                                                R-squared         =     0.0019
                                                Root MSE          =     .49465

------------------------------------------------------------------------------
             |               Robust
update_covid |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.0427151   .0227048    -1.88   0.060     -.087244    .0018138
       _cons |   .4501608   .0162963    27.62   0.000     .4182002    .4821214
------------------------------------------------------------------------------

Resampling replications (1000)
----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5 
..................................................    50
..................................................   100
..................................................   150
..................................................   200
..................................................   250
..................................................   300
..................................................   350
..................................................   400
..................................................   450
..................................................   500
..................................................   550
..................................................   600
..................................................   650
..................................................   700
..................................................   750
..................................................   800
..................................................   850
..................................................   900
..................................................   950
..................................................  1000

      command:  regress update_covid shifty, vce(rob)
        _pm_1:  _b[shifty]
  res. var(s):  shifty
   Resampling:  Permuting shifty
Clust. var(s):  __000000
     Clusters:  1900
Strata var(s):  ri_stratum
       Strata:  679

------------------------------------------------------------------------------
T            |     T(obs)       c       n   p=c/n   SE(p) [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _pm_1 |  -.0427151      56    1000  0.0560  0.0073  .0425755   .0721077
------------------------------------------------------------------------------
Note: Confidence interval is with respect to p=c/n.
Note: c = #{|T| >= |T(obs)|}
(running reghdfe on estimation sample)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   1,   1881) =       3.18
                                                  Prob > F        =     0.0748
                                                  R-squared       =     0.0325
                                                  Adj R-squared   =     0.0232
                                                  Within R-sq.    =     0.0017
                                                  Root MSE        =     0.4892

------------------------------------------------------------------------------
             |               Robust
update_covid |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.0401568   .0225287    -1.78   0.075    -.0843407    .0040271
       _cons |   .4488587   .0161213    27.84   0.000     .4172413    .4804762
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+

Resampling replications (1000)
----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5 
..................................................    50
..................................................   100
..................................................   150
..................................................   200
..................................................   250
..................................................   300
..................................................   350
..................................................   400
..................................................   450
..................................................   500
..................................................   550
..................................................   600
..................................................   650
..................................................   700
..................................................   750
..................................................   800
..................................................   850
..................................................   900
..................................................   950
..................................................  1000

      command:  reghdfe update_covid shifty, absorb(stratum) vce(rob)
        _pm_1:  _b[shifty]
  res. var(s):  shifty
   Resampling:  Permuting shifty
Clust. var(s):  __000000
     Clusters:  1900
Strata var(s):  ri_stratum
       Strata:  679

------------------------------------------------------------------------------
T            |     T(obs)       c       n   p=c/n   SE(p) [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _pm_1 |  -.0401568      79    1000  0.0790  0.0085  .0630412   .0974871
------------------------------------------------------------------------------
Note: Confidence interval is with respect to p=c/n.
Note: c = #{|T| >= |T(obs)|}
(running reghdfe on estimation sample)
(MWFE estimator converged in 7 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 5 HDFE groups                           F(   1,   1871) =       2.91
                                                  Prob > F        =     0.0882
                                                  R-squared       =     0.0396
                                                  Adj R-squared   =     0.0252
                                                  Within R-sq.    =     0.0016
                                                  Root MSE        =     0.4887

------------------------------------------------------------------------------
             |               Robust
update_covid |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.0385375   .0225886    -1.71   0.088     -.082839     .005764
       _cons |   .4480346   .0161468    27.75   0.000      .416367    .4797022
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
      region |         4           1           3     |
    race_eth |         4           1           3    ?|
    educ_bin |         3           1           2    ?|
     hhi_bin |         3           1           2    ?|
-----------------------------------------------------+
? = number of redundant parameters may be higher

Resampling replications (1000)
----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5 
..................................................    50
..................................................   100
..................................................   150
..................................................   200
..................................................   250
..................................................   300
..................................................   350
..................................................   400
..................................................   450
..................................................   500
..................................................   550
..................................................   600
..................................................   650
..................................................   700
..................................................   750
..................................................   800
..................................................   850
..................................................   900
..................................................   950
..................................................  1000

      command:  reghdfe update_covid shifty, absorb(stratum region race_eth
                    educ_bin hhi_bin) vce(rob)
        _pm_1:  _b[shifty]
  res. var(s):  shifty
   Resampling:  Permuting shifty
Clust. var(s):  __000000
     Clusters:  1900
Strata var(s):  ri_stratum
       Strata:  679

------------------------------------------------------------------------------
T            |     T(obs)       c       n   p=c/n   SE(p) [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _pm_1 |  -.0385375      80    1000  0.0800  0.0086   .063942   .0985798
------------------------------------------------------------------------------
Note: Confidence interval is with respect to p=c/n.
Note: c = #{|T| >= |T(obs)|}

Linear regression                               Number of obs     =      1,900
                                                F(1, 1898)        =       3.54
                                                Prob > F          =     0.0601
                                                R-squared         =     0.0019
                                                Root MSE          =     .49465

------------------------------------------------------------------------------
             |               Robust
update_covid |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.0427151   .0227048    -1.88   0.060     -.087244    .0018138
       _cons |   .4501608   .0162963    27.62   0.000     .4182002    .4821214
------------------------------------------------------------------------------
(est4 stored)

added macro:
              e(p_rob) : ".06"

added macro:
               e(p_ri) : ".056"

added macro:
            e(stratum) : "No"

added macro:
              e(group) : "No"
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   1,   1881) =       3.18
                                                  Prob > F        =     0.0748
                                                  R-squared       =     0.0325
                                                  Adj R-squared   =     0.0232
                                                  Within R-sq.    =     0.0017
                                                  Root MSE        =     0.4892

------------------------------------------------------------------------------
             |               Robust
update_covid |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.0401568   .0225287    -1.78   0.075    -.0843407    .0040271
       _cons |   .4488587   .0161213    27.84   0.000     .4172413    .4804762
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est5 stored)

added macro:
              e(p_rob) : ".075"

added macro:
               e(p_ri) : ".079"

added macro:
            e(stratum) : "$\checkmark$"

added macro:
              e(group) : "No"
(MWFE estimator converged in 7 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 5 HDFE groups                           F(   1,   1871) =       2.91
                                                  Prob > F        =     0.0882
                                                  R-squared       =     0.0396
                                                  Adj R-squared   =     0.0252
                                                  Within R-sq.    =     0.0016
                                                  Root MSE        =     0.4887

------------------------------------------------------------------------------
             |               Robust
update_covid |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.0385375   .0225886    -1.71   0.088     -.082839     .005764
       _cons |   .4480346   .0161468    27.75   0.000      .416367    .4797022
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
      region |         4           1           3     |
    race_eth |         4           1           3    ?|
    educ_bin |         3           1           2    ?|
     hhi_bin |         3           1           2    ?|
-----------------------------------------------------+
? = number of redundant parameters may be higher
(est6 stored)

added macro:
              e(p_rob) : ".088"

added macro:
               e(p_ri) : ".08"

added macro:
            e(stratum) : "$\checkmark$"

added macro:
              e(group) : "$\checkmark$"

. 
. esttab using out/changing_fe.tex, replace se label drop(_cons) star(* 0.1 ** 
> 0.05 *** 0.01) ///
>     mlabel("\shortstack{Update magnitude}" ///
>     "\shortstack{Update magnitude}" ///
>     "\shortstack{Update magnitude}" ///
>     "\shortstack{Update propensity}" ///
>     "\shortstack{Update propensity}" ///
>     "\shortstack{Update propensity}" ///
>     ) scalars("stratum Stratum FE" "group Demographic FE" ///
>     "note \underline{\$p\$-value}:" /// 
>     "p_rob \ \ \ \ \ \ \ \ Robust standard errors" "p_ri \ \ \ \ \ \ \ \ Perm
> utation test") 
(note: file out/changing_fe.tex not found)
(output written to out/changing_fe.tex)

.     
. 
. 
. 
. 
end of do-file

. 
. /* Appendix: additional belief outcomes for changing */
. do code/other_beliefs.do

. /***********************************************************************/
. /* /\* Appendix table of effects on deaths, death rate, net update *\/ */
. /***********************************************************************/
. if "`c(username)'" == "pierre-lucvautrey" {
.   do ~/documents/github/covid/SetGlobals.do
. }

. else{
.   do ../SetGlobals.do

. version 13

. * set the number of ri replications
. global reps 1000

. 
. /* Sets stata globals */
. global raw = "../data"

. global int = "../data"

. 
. if "`c(username)'" == "charlierafkin" {
.   global raw = "~/Dropbox (MIT)/COVID/data/raw_decrypted/"
.   global int = "~/Dropbox (MIT)/COVID/data/intermediate/"
. }

. if "`c(username)'" == "pierre-lucvautrey" {
.   global raw = "~/Dropbox (MIT)/COVID/data/raw_decrypted/"
.   global int = "~/Dropbox (MIT)/COVID/data/intermediate/"
. }

. 
. global navy `" "51 122 183" "'

. global green `" "92 184 92" "'

. global ltblue `" "91 192 222" "'

. global red `" "217 83 79" "'

. global orange `" "240 173 78" "'

. 
. qui {

. 
. if "`c(username)'" == "pierre-lucvautrey" {
.   do ~/documents/github/COVID/programs.do
. }

. else{
.   do ../programs.do

. /*
> 
> Convert eps to pdf in mac Stata
> Author: CR
> Date: April 2018
> 
> */
. 
. 
. capture pr drop conversion

. capture pr define conversion

. 
. capture pr drop grout

. capture pr define grout

. 
. /******************************************/
. /* /\***** deflate cpi, base year *****\/ */
. /******************************************/
. capture pr drop get_cpi_deflator

. capture pr define get_cpi_deflator

. 
. 
. 
. 
. 
. 
. 
. /* other graphing/output programs that we want */
. 
. /****************************************************************************
> *********/
. /* program store_est_tpl : store b, se, p-values in format suitable for table
> _to_tpl */
. /****************************************************************************
> *********/
. cap prog drop store_est_tpl

. prog def store_est_tpl
  1. {
  2.   syntax using/,  coef(string) name(string) [format(string) beta se p n r2
>  all]
  3. 
.   /* turn on all flags if `all' is specified */
.   if !mi("`all'") {
  4.     local beta beta
  5.     local se se
  6.     local p p
  7.     local n n
  8.     local r2 r2
  9.   }
 10. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
 11. 
.   /* manage beta */
.   if !mi("`beta'") {
 12. 
.     /* store beta in the desired format */
.     local b3:  di `format' _b["`coef'"]
 13.     test `coef' = 0
 14.     local pvalue = `r(p)'
 15.     /* write p value (only makes sense if beta also specified) */
.     if !mi("`p'") {
 16.       insert_into_file using `using', key("`name'_p") value(" `pvalue'") f
> ormat("%5.2f")
 17.     }
 18. 
.     /* write beta to file */
.     insert_into_file using `using', key("`name'_beta") value(" `b3'") format(
> "`format'")
 19. 
.     /* count stars on the p and create starbeta */
.     count_stars, p(`pvalue')
 20.     insert_into_file using `using', key("`name'_starbeta") value(" `b3'`r(
> stars)'") format("`format'")
 21.   }
 22. 
.   /* manage se */
.   if !mi("`se'") {
 23.     local se3:  di `format' _se["`coef'"]
 24.     insert_into_file using `using', key("`name'_se") value(" `se3'")
 25.   }
 26. 
.   /* manage n */
.   if !mi("`n'") {
 27.     insert_into_file using `using', key("`name'_n") value(" `e(N)'") forma
> t("%1.0f")
 28.   }
 29. 
.   /* manage r2 */
.   if !mi("`r2'") {
 30.     insert_into_file using `using', key("`name'_r2") value(" `e(r2)'") for
> mat("%5.2f")
 31.   }
 32. }
 33. end

. /* *********** END program store_est_tpl ************************************
> ***** */
. 
. /****************************************************************************
> *********/
. /* program store_val_tpl : store value to a file with string and format      
>         */
. /****************************************************************************
> *********/
. cap prog drop store_val_tpl

. prog def store_val_tpl
  1. {
  2.   syntax using/,  Name(string) Value(string) [Format(string)]
  3. 
.   di `""store_val_tpl, name value format" is deprecated -- please use "insert
> _into_file, key value format" instead"'
  4. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
  5. 
.   /* get value in appropriate format (unless it's already a string) */
.   if !mi(real("`value'")) {
  6.     local v : di `format' `value'
  7.   }
  8.   else {
  9.     local v `value'
 10.   }
 11. 
.   /* write line to file */
.   append_to_file using `using', s("`name',`v'")
 12. }
 13. end

. /* *********** END program store_val_tpl ************************************
> ***** */
. 
. /****************************************************************************
> ***********************/
. /* program table_from_tpl : Create a table from a stored estimates file and a
>  .tex table template  */
. /****************************************************************************
> ***********************/
. cap prog drop table_from_tpl

. prog def table_from_tpl
  1. {
  2.   syntax, Template(string) Replacement(string) Output(string) [Verbose add
> stars dropstars]
  3. 
.   /* set up verbose flag */
.   if !mi("`verbose'") {
  4.       local v "-v"
  5.   }
  6.   else {
  7.       local v
  8.   }
  9. 
. 
.   /* if python path is not set, use current folder */
.   if mi("$PYTHONPATH") {
 10. 
.       /* set path to current folder */
.       local path .
 11.   }
 12.   else {
 13.       local path $PYTHONPATH
 14.   }
 15. 
.   /* check python file existence */
.   cap confirm file `path'/table_from_tpl.py
 16.   if _rc {
 17.       display as error "ERROR: table_from_tpl.py not found. Put in current
>  folder or folder defined by global \$PYTHONPATH"
 18.       error -1
 19.   }
 20. 
.   /* deal with addstars/dropstars parameters */
.   if "`addstars'" == "addstars" {
 21.     local star_param "--add-stars"
 22.   }
 23.   if "`dropstars'" == "dropstars" {
 24.     local star_param "--drop-stars"
 25.   }
 26. 
.   local pycommand `path'/table_from_tpl.py -t `template' -r `replacement' -o 
> `output' `v' `star_param'
 27.   if !mi("`verbose'") {
 28.       di `"Running `pycommand' "'
 29.   }
 30. 
.   shell python `pycommand'
 31.   cap confirm file `output'
 32.   if !_rc {
 33.     display "Created `output'."
 34.   }
 35.   else {
 36.     display "Could not create `output'."
 37.     error 1
 38.   }
 39. 
.   /* clean up the temporary file if star/nostar specified */
.   if !mi("`stars'") {
 40.     !rm $tmp/tpl_sed_tmp.tex
 41.   }
 42. }
 43. end

. /* *********** END program table_from_tpl ***********************************
> ****** */
. 
. /****************************************************************************
> ******/
. /* program append_to_file : Append a passed in string to a file              
>      */
. /****************************************************************************
> ******/
. cap prog drop append_to_file

. prog def append_to_file
  1. {
  2.   syntax using/, String(string)
  3. 
.   cap file close fh
  4.   file open fh using `using', write append
  5.   file write fh  `"`string'"'  _n
  6.   file close fh
  7. }
  8. end

. /* *********** END program append_to_file ***********************************
> ****** */
. 
. /****************************************************************************
> ******/
. /* program insert_into_file : Insert a key-value pair into a file            
>      */
. /*
> Assume "using" csv file take a key, value format, e.g.:
> 
> est1,3.544
> est2,3.234***
> ...
> 
> "est1" is the key. "3.544" is the value.
> 
> Example:
> 
> insert_into_file using $tmp/estimates.csv, key(est1) value(3.54493) format(%5
> .2f)
> 
> - if "est1" is not already in estimates file, it will be appended
> - if "est1" is already in estimates file, its value will be replaced with the
>  passed in parameter
> - estimates file will be created if it does not already exist
> 
> */
. 
. /****************************************************************************
> *******/
. cap prog drop insert_into_file

. prog def insert_into_file
  1. {
  2.   syntax using/, Key(string) Value(string) [Format(string) verbose]
  3. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
  4. 
.   /* get value in correct format (unless it's a string) */
.   if !mi(real("`value'")) {
  5.     local value : di `format' `value'
  6.   }
  7.   else {
  8.     local value `value'
  9.   }
 10. 
.   /* confirm file handles are closed */
.   cap file close fout
 11.   cap file close fin
 12. 
.   /* create a temporary file for writing */
.   tempfile tempfile
 13.   qui file open fout using `tempfile', write replace
 14. 
.   /* if input file doesn't exist, create it and display a notification */
.   cap confirm file `using'
 15.   if _rc {
 16.     if !mi("`verbose'") {
 17.       di "Creating new file `using'..."
 18.     }
 19.   }
 20. 
.   /* else, open the input file and read the first line */
.   else {
 21.     file open fin using `using', read
 22. 
.     /* read the first line */
.     file read fin line
 23.   }
 24. 
.   /* store a flag indicating whether we found the line or not */
.   local found 0
 25. 
.   /* loop over all lines of the file */
.   while r(eof) == 0 {
 26. 
.     /* check if line matches the current key */
.     if regexm("`line'", "^`key',") {
 27. 
.       /* if verbose, show what we're replacing  */
.       if !mi("`verbose'") {
 28.         di `"Replacing "`line'" with "`key',`value'"..."'
 29.       }
 30.       local found 1
 31. 
.       /* replace the line with key,value */
.       local line `key',`value'
 32.     }
 33. 
.     /* write the line to the output file */
.     file write fout "`line'" _n
 34. 
.     /* read the next line */
.     file read fin line
 35.   }
 36. 
.   /* if we didn't find this key, append it to the end */
.   if `found' == 0 {
 37.     file write fout "`key',`value'" _n
 38.   }
 39. 
.   /* close input and output files */
.   cap file close fin
 40.   file close fout
 41. 
.   /* copy the temporary file to the `using` filename */
.   copy `tempfile' `using', replace
 42. }
 43. end

. /* *********** END program insert_into_file *********************************
> ******** */
. 
. /****************************************************************************
> ******/
. /* program count_stars : return a string with the right number of stars      
>      */
. /****************************************************************************
> ******/
. cap prog drop count_stars

. prog def count_stars, rclass
  1. {
  2.   syntax, p(real)
  3.   local star = ""
  4.   if `p' <= 0.1  local star = "*"
  5.   if `p' <= 0.05 local star = "**"
  6.   if `p' <= 0.01 local star = "***"
  7.   return local stars = "`star'"
  8. }
  9. end

. /* *********** END program count_stars **************************************
> *** */
. 
. 
end of do-file
. }

. global PYTHONPATH = "code"

. 
end of do-file
. }

. clear 

. version 13

. 
. use "$int/public_data" , clear 

. keep if !mi(shifty)
(0 observations deleted)

. la var shifty "Inconsistent"

. 
. /**********************/
. /* TABLE: net update  */
. /**********************/
. foreach outcome in ln_deaths ln_width {
  2.   local ln_deathsnm "\shortstack{Net update: \\ ln(posterior)}"
  3.   local ln_widthnm "\shortstack{Width of \\ confidence interval \\ (log)}"
  4.   eststo clear
  5.   
.   eststo: reghdfe `outcome'_post shifty `outcome'_pre , absorb(stratum) vce(r
> ob)
  6.   estadd local sample "All"
  7.   
.   eststo: reghdfe `outcome'_post shifty `outcome'_pre if priors_below_info ==
>  1, absorb(stratum) vce(rob)
  8.   estadd local sample "Priors below info"
  9.   
.   eststo: reghdfe `outcome'_post shifty `outcome'_pre if priors_at_info == 1 
> , absorb(stratum) vce(rob)
 10.   estadd local sample "Priors at info"
 11.   
.   eststo: reghdfe `outcome'_post shifty `outcome'_pre if priors_above_info ==
>  1, absorb(stratum) vce(rob)
 12.   estadd local sample "Priors above info"
 13. 
.   esttab using out/effects_`outcome'.tex, replace se label drop(_cons *pre) /
> //
>       star(* 0.1 ** 0.05 *** 0.01) ///
>       mlabel("``outcome'nm'" ///
>       "``outcome'nm'" ///
>       "``outcome'nm'" ///
>       "``outcome'nm'") ///
>       scalars("sample Sample:")             
 14. }
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   2,   1880) =     348.47
                                                  Prob > F        =     0.0000
                                                  R-squared       =     0.6785
                                                  Adj R-squared   =     0.6753
                                                  Within R-sq.    =     0.6724
                                                  Root MSE        =     1.1318

------------------------------------------------------------------------------
             |               Robust
ln_deaths_~t |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.0249534   .0511241    -0.49   0.626    -.1252194    .0753127
ln_deaths_~e |   .8030573   .0319068    25.17   0.000     .7404807    .8656338
       _cons |   2.367097   .3554454     6.66   0.000     1.669988    3.064206
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est1 stored)

added macro:
             e(sample) : "All"
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =        909
Absorbing 1 HDFE group                            F(   2,    889) =      68.57
                                                  Prob > F        =     0.0000
                                                  R-squared       =     0.5473
                                                  Adj R-squared   =     0.5377
                                                  Within R-sq.    =     0.5353
                                                  Root MSE        =     1.2557

------------------------------------------------------------------------------
             |               Robust
ln_deaths_~t |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.0893488   .0831572    -1.07   0.283    -.2525561    .0738585
ln_deaths_~e |   .8395773   .0783753    10.71   0.000     .6857551    .9933994
       _cons |   2.049159   .7586671     2.70   0.007      .560171    3.538146
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est2 stored)

added macro:
             e(sample) : "Priors below info"
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =        544
Absorbing 1 HDFE group                            F(   2,    524) =      43.14
                                                  Prob > F        =     0.0000
                                                  R-squared       =     0.1548
                                                  Adj R-squared   =     0.1242
                                                  Within R-sq.    =     0.1233
                                                  Root MSE        =     0.6570

------------------------------------------------------------------------------
             |               Robust
ln_deaths_~t |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |   .0549214   .0582955     0.94   0.347    -.0596003     .169443
ln_deaths_~e |   .8655961   .0932145     9.29   0.000     .6824761    1.048716
       _cons |   1.597525   1.120818     1.43   0.155    -.6043238    3.799374
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est3 stored)

added macro:
             e(sample) : "Priors at info"
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =        447
Absorbing 1 HDFE group                            F(   2,    427) =      18.71
                                                  Prob > F        =     0.0000
                                                  R-squared       =     0.2946
                                                  Adj R-squared   =     0.2632
                                                  Within R-sq.    =     0.2701
                                                  Root MSE        =     1.3137

------------------------------------------------------------------------------
             |               Robust
ln_deaths_~t |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |   .0052789   .1272722     0.04   0.967    -.2448792     .255437
ln_deaths_~e |    .700367   .1154208     6.07   0.000     .4735034    .9272306
       _cons |   3.718013   1.499125     2.48   0.014     .7714306    6.664595
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est4 stored)

added macro:
             e(sample) : "Priors above info"
(note: file out/effects_ln_deaths.tex not found)
(output written to out/effects_ln_deaths.tex)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,899
Absorbing 1 HDFE group                            F(   2,   1879) =     278.12
                                                  Prob > F        =     0.0000
                                                  R-squared       =     0.5842
                                                  Adj R-squared   =     0.5800
                                                  Within R-sq.    =     0.5794
                                                  Root MSE        =     1.6505

------------------------------------------------------------------------------
             |               Robust
ln_width_p~t |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.0148924   .0753042    -0.20   0.843    -.1625811    .1327963
ln_width_pre |   .7619106   .0324229    23.50   0.000     .6983219    .8254992
       _cons |   2.516873   .3693865     6.81   0.000     1.792422    3.241324
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est1 stored)

added macro:
             e(sample) : "All"
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =        908
Absorbing 1 HDFE group                            F(   2,    888) =     116.88
                                                  Prob > F        =     0.0000
                                                  R-squared       =     0.4986
                                                  Adj R-squared   =     0.4879
                                                  Within R-sq.    =     0.4929
                                                  Root MSE        =     1.7937

------------------------------------------------------------------------------
             |               Robust
ln_width_p~t |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.0252642   .1191423    -0.21   0.832    -.2590976    .2085693
ln_width_pre |   .8182548    .054748    14.95   0.000     .7108042    .9257054
       _cons |   1.914557   .5302706     3.61   0.000      .873827    2.955286
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est2 stored)

added macro:
             e(sample) : "Priors below info"
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =        544
Absorbing 1 HDFE group                            F(   2,    524) =       2.62
                                                  Prob > F        =     0.0741
                                                  R-squared       =     0.1871
                                                  Adj R-squared   =     0.1576
                                                  Within R-sq.    =     0.1569
                                                  Root MSE        =     1.1591

------------------------------------------------------------------------------
             |               Robust
ln_width_p~t |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |   .0671124   .1074327     0.62   0.532    -.1439393     .278164
ln_width_pre |   .3835208   .1754373     2.19   0.029     .0388741    .7281676
       _cons |   6.898903   2.060437     3.35   0.001     2.851171    10.94664
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est3 stored)

added macro:
             e(sample) : "Priors at info"
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =        447
Absorbing 1 HDFE group                            F(   2,    427) =      27.62
                                                  Prob > F        =     0.0000
                                                  R-squared       =     0.4032
                                                  Adj R-squared   =     0.3767
                                                  Within R-sq.    =     0.3861
                                                  Root MSE        =     1.7471

------------------------------------------------------------------------------
             |               Robust
ln_width_p~t |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.1358571   .1686927    -0.81   0.421    -.4674285    .1957144
ln_width_pre |   .6731665   .0957645     7.03   0.000      .484938    .8613949
       _cons |   3.899244   1.309721     2.98   0.003     1.324941    6.473547
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est4 stored)

added macro:
             e(sample) : "Priors above info"
(note: file out/effects_ln_width.tex not found)
(output written to out/effects_ln_width.tex)

. 
. eststo clear 

. /******************************/
. /* absolute effects  */
. /******************************/
. foreach outcome in death_rate_old death_rate_young {
  2.   gen um_`outcome' = abs(`outcome'_post - `outcome'_pre)
  3. }

. 
. gen um_dji = ln(abs(dji_post - dji_pre) +1 ) 

. 
. foreach outcome in death_rate_old death_rate_young dji {
  2.   eststo: reghdfe um_`outcome' shifty, absorb(stratum)  vce(rob)
  3. }
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   1,   1881) =       0.45
                                                  Prob > F        =     0.5041
                                                  R-squared       =     0.0134
                                                  Adj R-squared   =     0.0040
                                                  Within R-sq.    =     0.0002
                                                  Root MSE        =    26.6650

------------------------------------------------------------------------------
             |               Robust
um_death_r~d |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |   .8237163   1.232698     0.67   0.504    -1.593884    3.241316
       _cons |   9.221051   .8555876    10.78   0.000      7.54305    10.89905
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est1 stored)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   1,   1881) =       0.18
                                                  Prob > F        =     0.6724
                                                  R-squared       =     0.0135
                                                  Adj R-squared   =     0.0041
                                                  Within R-sq.    =     0.0001
                                                  Root MSE        =    15.3085

------------------------------------------------------------------------------
             |               Robust
um_death_r~g |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |   .2947053    .696768     0.42   0.672    -1.071814    1.661225
       _cons |   3.153037    .488006     6.46   0.000     2.195947    4.110127
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est2 stored)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   1,   1881) =       1.26
                                                  Prob > F        =     0.2614
                                                  R-squared       =     0.0212
                                                  Adj R-squared   =     0.0118
                                                  Within R-sq.    =     0.0007
                                                  Root MSE        =     3.4973

------------------------------------------------------------------------------
             |               Robust
      um_dji |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.1801984   .1604062    -1.12   0.261    -.4947913    .1343945
       _cons |   1.906578   .1164311    16.38   0.000      1.67823    2.134926
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est3 stored)

. 
. /*************************/
. /* net effects  */
. /*************************/
. foreach outcome in death_rate_old death_rate_young ln_dji {
  2.   eststo: reghdfe `outcome'_post shifty `outcome'_pre, absorb(stratum) vce
> (rob)
  3. }
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   2,   1880) =     473.31
                                                  Prob > F        =     0.0000
                                                  R-squared       =     0.4853
                                                  Adj R-squared   =     0.4801
                                                  Within R-sq.    =     0.4730
                                                  Root MSE        =    26.3254

------------------------------------------------------------------------------
             |               Robust
death~d_post |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -2.684917   1.220387    -2.20   0.028    -5.078372   -.2914617
death_~d_pre |   .7059809     .02345    30.11   0.000     .6599902    .7519717
       _cons |   9.105144   .9178477     9.92   0.000     7.305036    10.90525
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est4 stored)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   2,   1880) =      45.88
                                                  Prob > F        =     0.0000
                                                  R-squared       =     0.3454
                                                  Adj R-squared   =     0.3388
                                                  Within R-sq.    =     0.3362
                                                  Root MSE        =    14.0260

------------------------------------------------------------------------------
             |               Robust
death~g_post |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.3480143   .6356641    -0.55   0.584    -1.594696    .8986671
death_~g_pre |   .5841348   .0611441     9.55   0.000     .4642173    .7040522
       _cons |   2.631414   .4481971     5.87   0.000     1.752398     3.51043
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est5 stored)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   2,   1880) =     435.38
                                                  Prob > F        =     0.0000
                                                  R-squared       =     0.5442
                                                  Adj R-squared   =     0.5396
                                                  Within R-sq.    =     0.5277
                                                  Root MSE        =     0.9474

------------------------------------------------------------------------------
             |               Robust
 ln_dji_post |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.0135271   .0433415    -0.31   0.755    -.0985296    .0714754
  ln_dji_pre |   .8528369   .0292001    29.21   0.000     .7955688    .9101049
       _cons |   1.451901   .2934911     4.95   0.000     .8762989    2.027504
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est6 stored)

. 
. esttab using out/effects_excl_death.tex, replace se label drop(_cons *pre) st
> ar(* 0.1 ** 0.05 *** 0.01) ///
>     mlabel("\shortstack{Update magnitude: \\ death rate \\ (for ages: 50--80)
> }" ///
>     "\shortstack{Update magnitude: \\ death rate \\ (for ages: 20--50)}" /// 
>     "\shortstack{Update magnitude: \\ Dow Jones \\ Index}" /// 
>     "\shortstack{Net update: \\ death rate \\ (for ages: 50--80)}" ///
>     "\shortstack{Net update: \\ death rate \\ (for ages: 20--50)}" /// 
>     "\shortstack{Net update: \\ Dow Jones \\ Index}"  /// 
>     "\shortstack{Net update: \\ deaths \\ ln(posterior $-$ prior $+$ 1)}" )
(note: file out/effects_excl_death.tex not found)
(output written to out/effects_excl_death.tex)

. 
. 
. 
. 
end of do-file

. 
. /* Appendix: table of revealed preference outcomes for changing */
. do code/revealed_changing.do

. /****************************************************************************
> *****************/
. /* This generates a table of the steady/shifty experiment with various contro
> ls/no controls  */
. /****************************************************************************
> *****************/
. /**********************************************************/
. /* Generate effect on alternate outcome of belief update  */
. /**********************************************************/
. if "`c(username)'" == "pierre-lucvautrey" {
.   do ~/documents/github/covid/SetGlobals.do
. }

. else{
.   do ../SetGlobals.do

. version 13

. * set the number of ri replications
. global reps 1000

. 
. /* Sets stata globals */
. global raw = "../data"

. global int = "../data"

. 
. if "`c(username)'" == "charlierafkin" {
.   global raw = "~/Dropbox (MIT)/COVID/data/raw_decrypted/"
.   global int = "~/Dropbox (MIT)/COVID/data/intermediate/"
. }

. if "`c(username)'" == "pierre-lucvautrey" {
.   global raw = "~/Dropbox (MIT)/COVID/data/raw_decrypted/"
.   global int = "~/Dropbox (MIT)/COVID/data/intermediate/"
. }

. 
. global navy `" "51 122 183" "'

. global green `" "92 184 92" "'

. global ltblue `" "91 192 222" "'

. global red `" "217 83 79" "'

. global orange `" "240 173 78" "'

. 
. qui {

. 
. if "`c(username)'" == "pierre-lucvautrey" {
.   do ~/documents/github/COVID/programs.do
. }

. else{
.   do ../programs.do

. /*
> 
> Convert eps to pdf in mac Stata
> Author: CR
> Date: April 2018
> 
> */
. 
. 
. capture pr drop conversion

. capture pr define conversion

. 
. capture pr drop grout

. capture pr define grout

. 
. /******************************************/
. /* /\***** deflate cpi, base year *****\/ */
. /******************************************/
. capture pr drop get_cpi_deflator

. capture pr define get_cpi_deflator

. 
. 
. 
. 
. 
. 
. 
. /* other graphing/output programs that we want */
. 
. /****************************************************************************
> *********/
. /* program store_est_tpl : store b, se, p-values in format suitable for table
> _to_tpl */
. /****************************************************************************
> *********/
. cap prog drop store_est_tpl

. prog def store_est_tpl
  1. {
  2.   syntax using/,  coef(string) name(string) [format(string) beta se p n r2
>  all]
  3. 
.   /* turn on all flags if `all' is specified */
.   if !mi("`all'") {
  4.     local beta beta
  5.     local se se
  6.     local p p
  7.     local n n
  8.     local r2 r2
  9.   }
 10. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
 11. 
.   /* manage beta */
.   if !mi("`beta'") {
 12. 
.     /* store beta in the desired format */
.     local b3:  di `format' _b["`coef'"]
 13.     test `coef' = 0
 14.     local pvalue = `r(p)'
 15.     /* write p value (only makes sense if beta also specified) */
.     if !mi("`p'") {
 16.       insert_into_file using `using', key("`name'_p") value(" `pvalue'") f
> ormat("%5.2f")
 17.     }
 18. 
.     /* write beta to file */
.     insert_into_file using `using', key("`name'_beta") value(" `b3'") format(
> "`format'")
 19. 
.     /* count stars on the p and create starbeta */
.     count_stars, p(`pvalue')
 20.     insert_into_file using `using', key("`name'_starbeta") value(" `b3'`r(
> stars)'") format("`format'")
 21.   }
 22. 
.   /* manage se */
.   if !mi("`se'") {
 23.     local se3:  di `format' _se["`coef'"]
 24.     insert_into_file using `using', key("`name'_se") value(" `se3'")
 25.   }
 26. 
.   /* manage n */
.   if !mi("`n'") {
 27.     insert_into_file using `using', key("`name'_n") value(" `e(N)'") forma
> t("%1.0f")
 28.   }
 29. 
.   /* manage r2 */
.   if !mi("`r2'") {
 30.     insert_into_file using `using', key("`name'_r2") value(" `e(r2)'") for
> mat("%5.2f")
 31.   }
 32. }
 33. end

. /* *********** END program store_est_tpl ************************************
> ***** */
. 
. /****************************************************************************
> *********/
. /* program store_val_tpl : store value to a file with string and format      
>         */
. /****************************************************************************
> *********/
. cap prog drop store_val_tpl

. prog def store_val_tpl
  1. {
  2.   syntax using/,  Name(string) Value(string) [Format(string)]
  3. 
.   di `""store_val_tpl, name value format" is deprecated -- please use "insert
> _into_file, key value format" instead"'
  4. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
  5. 
.   /* get value in appropriate format (unless it's already a string) */
.   if !mi(real("`value'")) {
  6.     local v : di `format' `value'
  7.   }
  8.   else {
  9.     local v `value'
 10.   }
 11. 
.   /* write line to file */
.   append_to_file using `using', s("`name',`v'")
 12. }
 13. end

. /* *********** END program store_val_tpl ************************************
> ***** */
. 
. /****************************************************************************
> ***********************/
. /* program table_from_tpl : Create a table from a stored estimates file and a
>  .tex table template  */
. /****************************************************************************
> ***********************/
. cap prog drop table_from_tpl

. prog def table_from_tpl
  1. {
  2.   syntax, Template(string) Replacement(string) Output(string) [Verbose add
> stars dropstars]
  3. 
.   /* set up verbose flag */
.   if !mi("`verbose'") {
  4.       local v "-v"
  5.   }
  6.   else {
  7.       local v
  8.   }
  9. 
. 
.   /* if python path is not set, use current folder */
.   if mi("$PYTHONPATH") {
 10. 
.       /* set path to current folder */
.       local path .
 11.   }
 12.   else {
 13.       local path $PYTHONPATH
 14.   }
 15. 
.   /* check python file existence */
.   cap confirm file `path'/table_from_tpl.py
 16.   if _rc {
 17.       display as error "ERROR: table_from_tpl.py not found. Put in current
>  folder or folder defined by global \$PYTHONPATH"
 18.       error -1
 19.   }
 20. 
.   /* deal with addstars/dropstars parameters */
.   if "`addstars'" == "addstars" {
 21.     local star_param "--add-stars"
 22.   }
 23.   if "`dropstars'" == "dropstars" {
 24.     local star_param "--drop-stars"
 25.   }
 26. 
.   local pycommand `path'/table_from_tpl.py -t `template' -r `replacement' -o 
> `output' `v' `star_param'
 27.   if !mi("`verbose'") {
 28.       di `"Running `pycommand' "'
 29.   }
 30. 
.   shell python `pycommand'
 31.   cap confirm file `output'
 32.   if !_rc {
 33.     display "Created `output'."
 34.   }
 35.   else {
 36.     display "Could not create `output'."
 37.     error 1
 38.   }
 39. 
.   /* clean up the temporary file if star/nostar specified */
.   if !mi("`stars'") {
 40.     !rm $tmp/tpl_sed_tmp.tex
 41.   }
 42. }
 43. end

. /* *********** END program table_from_tpl ***********************************
> ****** */
. 
. /****************************************************************************
> ******/
. /* program append_to_file : Append a passed in string to a file              
>      */
. /****************************************************************************
> ******/
. cap prog drop append_to_file

. prog def append_to_file
  1. {
  2.   syntax using/, String(string)
  3. 
.   cap file close fh
  4.   file open fh using `using', write append
  5.   file write fh  `"`string'"'  _n
  6.   file close fh
  7. }
  8. end

. /* *********** END program append_to_file ***********************************
> ****** */
. 
. /****************************************************************************
> ******/
. /* program insert_into_file : Insert a key-value pair into a file            
>      */
. /*
> Assume "using" csv file take a key, value format, e.g.:
> 
> est1,3.544
> est2,3.234***
> ...
> 
> "est1" is the key. "3.544" is the value.
> 
> Example:
> 
> insert_into_file using $tmp/estimates.csv, key(est1) value(3.54493) format(%5
> .2f)
> 
> - if "est1" is not already in estimates file, it will be appended
> - if "est1" is already in estimates file, its value will be replaced with the
>  passed in parameter
> - estimates file will be created if it does not already exist
> 
> */
. 
. /****************************************************************************
> *******/
. cap prog drop insert_into_file

. prog def insert_into_file
  1. {
  2.   syntax using/, Key(string) Value(string) [Format(string) verbose]
  3. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
  4. 
.   /* get value in correct format (unless it's a string) */
.   if !mi(real("`value'")) {
  5.     local value : di `format' `value'
  6.   }
  7.   else {
  8.     local value `value'
  9.   }
 10. 
.   /* confirm file handles are closed */
.   cap file close fout
 11.   cap file close fin
 12. 
.   /* create a temporary file for writing */
.   tempfile tempfile
 13.   qui file open fout using `tempfile', write replace
 14. 
.   /* if input file doesn't exist, create it and display a notification */
.   cap confirm file `using'
 15.   if _rc {
 16.     if !mi("`verbose'") {
 17.       di "Creating new file `using'..."
 18.     }
 19.   }
 20. 
.   /* else, open the input file and read the first line */
.   else {
 21.     file open fin using `using', read
 22. 
.     /* read the first line */
.     file read fin line
 23.   }
 24. 
.   /* store a flag indicating whether we found the line or not */
.   local found 0
 25. 
.   /* loop over all lines of the file */
.   while r(eof) == 0 {
 26. 
.     /* check if line matches the current key */
.     if regexm("`line'", "^`key',") {
 27. 
.       /* if verbose, show what we're replacing  */
.       if !mi("`verbose'") {
 28.         di `"Replacing "`line'" with "`key',`value'"..."'
 29.       }
 30.       local found 1
 31. 
.       /* replace the line with key,value */
.       local line `key',`value'
 32.     }
 33. 
.     /* write the line to the output file */
.     file write fout "`line'" _n
 34. 
.     /* read the next line */
.     file read fin line
 35.   }
 36. 
.   /* if we didn't find this key, append it to the end */
.   if `found' == 0 {
 37.     file write fout "`key',`value'" _n
 38.   }
 39. 
.   /* close input and output files */
.   cap file close fin
 40.   file close fout
 41. 
.   /* copy the temporary file to the `using` filename */
.   copy `tempfile' `using', replace
 42. }
 43. end

. /* *********** END program insert_into_file *********************************
> ******** */
. 
. /****************************************************************************
> ******/
. /* program count_stars : return a string with the right number of stars      
>      */
. /****************************************************************************
> ******/
. cap prog drop count_stars

. prog def count_stars, rclass
  1. {
  2.   syntax, p(real)
  3.   local star = ""
  4.   if `p' <= 0.1  local star = "*"
  5.   if `p' <= 0.05 local star = "**"
  6.   if `p' <= 0.01 local star = "***"
  7.   return local stars = "`star'"
  8. }
  9. end

. /* *********** END program count_stars **************************************
> *** */
. 
. 
end of do-file
. }

. global PYTHONPATH = "code"

. 
end of do-file
. }

. clear 

. version 13

. 
. /*****************/
. /* EXPERIMENT 2  */
. /*****************/
. * Panel A: Performance on Effort Task
.   use "$int/public_data" , clear

.   la var shifty "Inconsistent"

.   keep if shifty != .
(0 observations deleted)

. 
.   eststo clear

. 
.   * get randomization inference p values
.   foreach task in covid metro {
  2.     local covidnm COVID
  3.     local metronm Metro
  4.      
.   eststo: reghdfe index_`task' shifty  , absorb(stratum) vce(rob) 
  5.   matrix mat = r(table)
  6.   local p: di %5.3f mat[4,1]
  7.     estadd local task = "``task'nm'"
  8.     
.   eststo: reghdfe frac_accurate_`task'_std shifty  , absorb(stratum) vce(rob)
>  
  9.   matrix mat = r(table)
 10.   local p: di %5.3f mat[4,1]  
 11.     estadd local task = "``task'nm'"
 12. 
.     eststo: reghdfe speed_`task'_std shifty  , absorb(stratum) vce(rob) 
 13.     matrix mat = r(table)
 14.     local p: di %5.3f mat[4,1]
 15.     estadd local task = "``task'nm'"
 16. 
.     eststo: reghdfe speed_alt_`task'_std shifty  , absorb(stratum) vce(rob) 
 17.     matrix mat = r(table)
 18.     local p: di %5.3f mat[4,1]
 19.     estadd local task = "``task'nm'"
 20.     
.   }
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =        916
Absorbing 1 HDFE group                            F(   1,    897) =       3.62
                                                  Prob > F        =     0.0575
                                                  R-squared       =     0.0311
                                                  Adj R-squared   =     0.0117
                                                  Within R-sq.    =     0.0041
                                                  Root MSE        =     0.6119

------------------------------------------------------------------------------
             |               Robust
 index_covid |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |   .0782804   .0411658     1.90   0.058     -.002512    .1590728
       _cons |   -.001296   .0307185    -0.04   0.966    -.0615844    .0589925
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est1 stored)

added macro:
               e(task) : "COVID"
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =        916
Absorbing 1 HDFE group                            F(   1,    897) =       1.86
                                                  Prob > F        =     0.1734
                                                  R-squared       =     0.0443
                                                  Adj R-squared   =     0.0252
                                                  Within R-sq.    =     0.0021
                                                  Root MSE        =     0.9716

------------------------------------------------------------------------------
             |               Robust
frac_a~d_std |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |   .0883488   .0648451     1.36   0.173     -.038917    .2156146
       _cons |  -.0058415   .0471231    -0.12   0.901    -.0983258    .0866428
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est2 stored)

added macro:
               e(task) : "COVID"
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =        916
Absorbing 1 HDFE group                            F(   1,    897) =       1.23
                                                  Prob > F        =     0.2684
                                                  R-squared       =     0.0325
                                                  Adj R-squared   =     0.0131
                                                  Within R-sq.    =     0.0014
                                                  Root MSE        =     0.9143

------------------------------------------------------------------------------
             |               Robust
speed_covi~d |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |    .068212   .0615993     1.11   0.268    -.0526834    .1891075
       _cons |   .0032496   .0471793     0.07   0.945    -.0893451    .0958443
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est3 stored)

added macro:
               e(task) : "COVID"
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =        916
Absorbing 1 HDFE group                            F(   1,    897) =       0.02
                                                  Prob > F        =     0.8979
                                                  R-squared       =     0.0098
                                                  Adj R-squared   =    -0.0101
                                                  Within R-sq.    =     0.0000
                                                  Root MSE        =     1.0917

------------------------------------------------------------------------------
             |               Robust
speed_alt_c~ |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.0101558   .0791204    -0.13   0.898    -.1654384    .1451268
       _cons |    .005572   .0485539     0.11   0.909    -.0897204    .1008644
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est4 stored)

added macro:
               e(task) : "COVID"
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =        984
Absorbing 1 HDFE group                            F(   1,    965) =       0.23
                                                  Prob > F        =     0.6353
                                                  R-squared       =     0.0192
                                                  Adj R-squared   =     0.0009
                                                  Within R-sq.    =     0.0002
                                                  Root MSE        =     0.6471

------------------------------------------------------------------------------
             |               Robust
 index_metro |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |   .0198064   .0417467     0.47   0.635    -.0621183    .1017311
       _cons |   .0012187   .0298552     0.04   0.967    -.0573699    .0598073
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est5 stored)

added macro:
               e(task) : "Metro"
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =        984
Absorbing 1 HDFE group                            F(   1,    965) =       0.05
                                                  Prob > F        =     0.8275
                                                  R-squared       =     0.0167
                                                  Adj R-squared   =    -0.0017
                                                  Within R-sq.    =     0.0000
                                                  Root MSE        =     1.0111

------------------------------------------------------------------------------
             |               Robust
frac_a~o_std |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.0142954   .0655696    -0.22   0.827    -.1429708      .11438
       _cons |  -.0001126   .0457425    -0.00   0.998    -.0898789    .0896537
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est6 stored)

added macro:
               e(task) : "Metro"
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =        984
Absorbing 1 HDFE group                            F(   1,    965) =       0.82
                                                  Prob > F        =     0.3644
                                                  R-squared       =     0.0353
                                                  Adj R-squared   =     0.0173
                                                  Within R-sq.    =     0.0008
                                                  Root MSE        =     0.9379

------------------------------------------------------------------------------
             |               Robust
speed_metr~d |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |   .0539082   .0594129     0.91   0.364    -.0626851    .1705016
       _cons |     .00255   .0442953     0.06   0.954    -.0843761    .0894761
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est7 stored)

added macro:
               e(task) : "Metro"
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =        984
Absorbing 1 HDFE group                            F(   1,    965) =       0.24
                                                  Prob > F        =     0.6277
                                                  R-squared       =     0.0519
                                                  Adj R-squared   =     0.0342
                                                  Within R-sq.    =     0.0002
                                                  Root MSE        =     1.2763

------------------------------------------------------------------------------
             |               Robust
speed_alt_m~ |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.0402256   .0829171    -0.49   0.628    -.2029443    .1224931
       _cons |   .0008554   .0438147     0.02   0.984    -.0851276    .0868385
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est8 stored)

added macro:
               e(task) : "Metro"

.   
.     esttab using out/exp_2_effortshifty.tex, replace se label drop(_cons) sta
> r(* 0.1 ** 0.05 *** 0.01) ///
>       mlabel("\shortstack{Index \\ (sd)}" ///
>       "\shortstack{Accuracy \\ (sd)}" ///
>       "\shortstack{Speed \\ clicks (sd)}" ///
>       "\shortstack{Speed \\ time on page (sd)}" ///
>       "\shortstack{Index \\ (sd)}" ///
>       "\shortstack{Accuracy \\ (sd)}" ///
>       "\shortstack{Speed \\ clicks (sd)}" ///
>       "\shortstack{Speed \\ time on page (sd)}" ) /// 
>       scalars("task Task") sfmt(%5.3f) 
(note: file out/exp_2_effortshifty.tex not found)
(output written to out/exp_2_effortshifty.tex)

. 
.       * Panel B: Demand for Info
.     destring stratum, replace
stratum: all characters numeric; replaced as byte

.     foreach outcome in cute well hi {
  2.       reg dfi_`outcome' shifty i.stratum
  3.       estimates store `outcome'
  4.     }

      Source |       SS           df       MS      Number of obs   =     1,900
-------------+----------------------------------   F(18, 1881)     =      2.10
       Model |  5.40326004        18  .300181113   Prob > F        =    0.0045
    Residual |  269.234108     1,881  .143133497   R-squared       =    0.0197
-------------+----------------------------------   Adj R-squared   =    0.0103
       Total |  274.637368     1,899    .1446221   Root MSE        =    .37833

------------------------------------------------------------------------------
    dfi_cute |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.0053751   .0174029    -0.31   0.757    -.0395061    .0287559
             |
     stratum |
          2  |   .0028262   .0436873     0.06   0.948    -.0828546    .0885069
          3  |  -.0094911   .0492296    -0.19   0.847    -.1060415    .0870594
          4  |  -.0102691    .047072    -0.22   0.827     -.102588    .0820497
          5  |    .051732    .047553     1.09   0.277    -.0415302    .1449942
          6  |   .0612022   .0475724     1.29   0.198    -.0320981    .1545024
          7  |  -.0018477   .0470601    -0.04   0.969    -.0941432    .0904479
          8  |  -.0114244   .0555381    -0.21   0.837    -.1203471    .0974984
          9  |  -.0483107   .0484906    -1.00   0.319    -.1434117    .0467903
         10  |   -.120291   .0464932    -2.59   0.010    -.2114746   -.0291074
         11  |    .000867   .0484975     0.02   0.986    -.0942476    .0959816
         12  |  -.0700141   .0473036    -1.48   0.139    -.1627871    .0227589
         13  |  -.1131267   .0509275    -2.22   0.026    -.2130071   -.0132464
         14  |  -.0047554   .0504119    -0.09   0.925    -.1036246    .0941138
         15  |  -.0517907   .0446452    -1.16   0.246      -.13935    .0357687
         16  |  -.1273004   .0564317    -2.26   0.024    -.2379757   -.0166251
         17  |  -.0382508   .0515111    -0.74   0.458    -.1392757    .0627741
         18  |   -.112196   .0492399    -2.28   0.023    -.2087666   -.0156253
             |
       _cons |    .207861   .0318867     6.52   0.000      .145324     .270398
------------------------------------------------------------------------------

      Source |       SS           df       MS      Number of obs   =     1,900
-------------+----------------------------------   F(18, 1881)     =      1.71
       Model |  6.49105826        18  .360614348   Prob > F        =    0.0314
    Residual |   396.45631     1,881  .210768905   R-squared       =    0.0161
-------------+----------------------------------   Adj R-squared   =    0.0067
       Total |  402.947368     1,899  .212189241   Root MSE        =     .4591

------------------------------------------------------------------------------
    dfi_well |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |   .0124636    .021118     0.59   0.555    -.0289537    .0538808
             |
     stratum |
          2  |   .0040145   .0530137     0.08   0.940    -.0999573    .1079864
          3  |  -.0533655   .0597392    -0.89   0.372    -.1705275    .0637965
          4  |   .0507884   .0571209     0.89   0.374    -.0612387    .1628154
          5  |   -.008852   .0577046    -0.15   0.878    -.1220239    .1043198
          6  |  -.0737583   .0577281    -1.28   0.202    -.1869762    .0394596
          7  |  -.0367145   .0571065    -0.64   0.520    -.1487134    .0752843
          8  |  -.0123886   .0673944    -0.18   0.854    -.1445642     .119787
          9  |  -.0468413   .0588423    -0.80   0.426    -.1622444    .0685619
         10  |   .1372885   .0564185     2.43   0.015      .026639     .247938
         11  |   .0018117   .0588508     0.03   0.975     -.113608    .1172314
         12  |   .0577661   .0574019     1.01   0.314    -.0548121    .1703442
         13  |  -.0473942   .0617995    -0.77   0.443    -.1685971    .0738086
         14  |  -.0125166   .0611739    -0.20   0.838    -.1324923    .1074592
         15  |   .0166925   .0541761     0.31   0.758    -.0895589     .122944
         16  |   .0015371   .0684787     0.02   0.982    -.1327652    .1358393
         17  |  -.1573788   .0625077    -2.52   0.012    -.2799704   -.0347871
         18  |  -.0130278   .0597517    -0.22   0.827    -.1302143    .1041587
             |
       _cons |   .3053154   .0386939     7.89   0.000      .229428    .3812028
------------------------------------------------------------------------------

      Source |       SS           df       MS      Number of obs   =     1,900
-------------+----------------------------------   F(18, 1881)     =      3.19
       Model |  6.40656898        18  .355920499   Prob > F        =    0.0000
    Residual |  209.961326     1,881  .111622183   R-squared       =    0.0296
-------------+----------------------------------   Adj R-squared   =    0.0203
       Total |  216.367895     1,899  .113937807   Root MSE        =     .3341

------------------------------------------------------------------------------
      dfi_hi |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |   .0059598   .0153683     0.39   0.698    -.0241809    .0361005
             |
     stratum |
          2  |   .0414348   .0385798     1.07   0.283    -.0342289    .1170986
          3  |   .0104545   .0434742     0.24   0.810    -.0748082    .0957171
          4  |  -.0045951   .0415688    -0.11   0.912    -.0861209    .0769307
          5  |  -.0103119   .0419936    -0.25   0.806    -.0926708    .0720469
          6  |   .0077087   .0420107     0.18   0.854    -.0746838    .0901011
          7  |   .0755256   .0415583     1.82   0.069    -.0059797    .1570308
          8  |   .0716371   .0490451     1.46   0.144    -.0245515    .1678256
          9  |   .0149898   .0428215     0.35   0.726    -.0689929    .0989724
         10  |     .00869   .0410576     0.21   0.832    -.0718333    .0892133
         11  |   .0148145   .0428277     0.35   0.729    -.0691802    .0988092
         12  |   .0242369   .0417733     0.58   0.562    -.0576899    .1061637
         13  |   .0334807   .0449735     0.74   0.457    -.0547226    .1216839
         14  |   -.004428   .0445182    -0.10   0.921    -.0917383    .0828823
         15  |   .0165269   .0394257     0.42   0.675    -.0607958    .0938496
         16  |    .204301   .0498342     4.10   0.000     .1065648    .3020371
         17  |   .2163866   .0454889     4.76   0.000     .1271726    .3056006
         18  |   .1028079   .0434833     2.36   0.018     .0175274    .1880884
             |
       _cons |   .0898735   .0281588     3.19   0.001     .0346477    .1450992
------------------------------------------------------------------------------

.     suest cute well hi , rob 

Simultaneous results for cute, well, hi

                                                Number of obs     =      1,900

------------------------------------------------------------------------------
             |               Robust
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
cute_mean    |
      shifty |  -.0053751   .0173393    -0.31   0.757    -.0393595    .0286093
             |
     stratum |
          2  |   .0028262   .0467891     0.06   0.952    -.0888788    .0945311
          3  |  -.0094911       .052    -0.18   0.855    -.1114092    .0924271
          4  |  -.0102691    .049759    -0.21   0.836    -.1077949    .0872567
          5  |    .051732   .0532487     0.97   0.331    -.0526335    .1560975
          6  |   .0612022   .0536702     1.14   0.254    -.0439896    .1663939
          7  |  -.0018477   .0501529    -0.04   0.971    -.1001455    .0964502
          8  |  -.0114244   .0584881    -0.20   0.845     -.126059    .1032103
          9  |  -.0483107   .0487842    -0.99   0.322    -.1439259    .0473045
         10  |   -.120291   .0417669    -2.88   0.004    -.2021527   -.0384293
         11  |    .000867   .0518659     0.02   0.987    -.1007882    .1025223
         12  |  -.0700141   .0462406    -1.51   0.130     -.160644    .0206159
         13  |  -.1131267   .0452285    -2.50   0.012    -.2017729   -.0244806
         14  |  -.0047554   .0535624    -0.09   0.929    -.1097357    .1002249
         15  |  -.0517907    .045091    -1.15   0.251    -.1401675    .0365861
         16  |  -.1273004   .0470994    -2.70   0.007    -.2196135   -.0349873
         17  |  -.0382508   .0523722    -0.73   0.465    -.1408983    .0643967
         18  |   -.112196   .0442149    -2.54   0.011    -.1988556   -.0255364
             |
       _cons |    .207861   .0335496     6.20   0.000      .142105    .2736169
-------------+----------------------------------------------------------------
cute_lnvar   |
       _cons |  -1.943978   .0384631   -50.54   0.000    -2.019364   -1.868591
-------------+----------------------------------------------------------------
well_mean    |
      shifty |   .0124636   .0209858     0.59   0.553    -.0286679     .053595
             |
     stratum |
          2  |   .0040145   .0535922     0.07   0.940    -.1010243    .1090534
          3  |  -.0533655   .0582792    -0.92   0.360    -.1675906    .0608596
          4  |   .0507884   .0588722     0.86   0.388    -.0645991    .1661758
          5  |   -.008852   .0579012    -0.15   0.878    -.1223362    .1046321
          6  |  -.0737583   .0555893    -1.33   0.185    -.1827112    .0351947
          7  |  -.0367145   .0564566    -0.65   0.515    -.1473674    .0739383
          8  |  -.0123886   .0675031    -0.18   0.854    -.1446923    .1199151
          9  |  -.0468413   .0576668    -0.81   0.417    -.1598662    .0661836
         10  |   .1372885   .0592884     2.32   0.021     .0210854    .2534916
         11  |   .0018117   .0594587     0.03   0.976    -.1147252    .1183487
         12  |   .0577661   .0593872     0.97   0.331    -.0586307    .1741628
         13  |  -.0473942   .0605296    -0.78   0.434      -.16603    .0712415
         14  |  -.0125166   .0613861    -0.20   0.838    -.1328312     .107798
         15  |   .0166925   .0551211     0.30   0.762    -.0913429     .124728
         16  |   .0015371   .0692449     0.02   0.982    -.1341805    .1372546
         17  |  -.1573788    .054507    -2.89   0.004    -.2642105   -.0505471
         18  |  -.0130278   .0597734    -0.22   0.827    -.1301814    .1041258
             |
       _cons |   .3053154   .0391868     7.79   0.000     .2285106    .3821202
-------------+----------------------------------------------------------------
well_lnvar   |
       _cons |  -1.556993   .0197459   -78.85   0.000    -1.595694   -1.518292
-------------+----------------------------------------------------------------
hi_mean      |
      shifty |   .0059598   .0152858     0.39   0.697    -.0239998    .0359195
             |
     stratum |
          2  |   .0414348   .0365548     1.13   0.257    -.0302112    .1130808
          3  |   .0104545   .0388894     0.27   0.788    -.0657674    .0866763
          4  |  -.0045951   .0356413    -0.13   0.897    -.0744509    .0652606
          5  |  -.0103119   .0353847    -0.29   0.771    -.0796646    .0590408
          6  |   .0077087   .0373042     0.21   0.836    -.0654062    .0808235
          7  |   .0755256   .0423727     1.78   0.075    -.0075235    .1585746
          8  |   .0716371   .0510513     1.40   0.161    -.0284216    .1716957
          9  |   .0149898   .0387357     0.39   0.699    -.0609307    .0909103
         10  |     .00869   .0365401     0.24   0.812    -.0629273    .0803074
         11  |   .0148145   .0387792     0.38   0.702    -.0611913    .0908203
         12  |   .0242369   .0386088     0.63   0.530    -.0514349    .0999087
         13  |   .0334807   .0427068     0.78   0.433    -.0502231    .1171844
         14  |   -.004428   .0381002    -0.12   0.907     -.079103    .0702469
         15  |   .0165269   .0355814     0.46   0.642    -.0532113    .0862651
         16  |    .204301    .061868     3.30   0.001      .083042      .32556
         17  |   .2163866   .0557711     3.88   0.000     .1070773     .325696
         18  |   .1028079   .0467222     2.20   0.028      .011234    .1943818
             |
       _cons |   .0898735   .0248648     3.61   0.000     .0411393    .1386077
-------------+----------------------------------------------------------------
hi_lnvar     |
       _cons |  -2.192635   .0493884   -44.40   0.000    -2.289435   -2.095836
------------------------------------------------------------------------------

.     test ([cute_mean][shifty] = 0 ) ([well_mean][shifty] = 0 ) ([hi_mean][shi
> fty] = 0 )

 ( 1)  [cute_mean]shifty = 0
 ( 2)  [well_mean]shifty = 0
 ( 3)  [hi_mean]shifty = 0

           chi2(  3) =    0.66
         Prob > chi2 =    0.8818

. 
.       local fp: di %5.3f `r(p)'

. 
.     eststo clear 

.     eststo: reghdfe dfi_cute shifty , absorb(stratum)   vce(rob)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   1,   1881) =       0.10
                                                  Prob > F        =     0.7577
                                                  R-squared       =     0.0197
                                                  Adj R-squared   =     0.0103
                                                  Within R-sq.    =     0.0001
                                                  Root MSE        =     0.3783

------------------------------------------------------------------------------
             |               Robust
    dfi_cute |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.0053751   .0174221    -0.31   0.758    -.0395437    .0287935
       _cons |   .1779988   .0124514    14.30   0.000     .1535787    .2024189
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est1 stored)

.     matrix mat = r(table)

.     local p: di %5.3f mat[4,1]

.     estadd local fp = `fp'

added macro:
                 e(fp) : ".882"

. 
.     eststo: reghdfe dfi_well shifty , absorb(stratum)   vce(rob)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   1,   1881) =       0.35
                                                  Prob > F        =     0.5545
                                                  R-squared       =     0.0161
                                                  Adj R-squared   =     0.0067
                                                  Within R-sq.    =     0.0002
                                                  Root MSE        =     0.4591

------------------------------------------------------------------------------
             |               Robust
    dfi_well |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |   .0124636    .021086     0.59   0.555    -.0288909     .053818
       _cons |   .2989199   .0149465    20.00   0.000     .2696065    .3282332
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est2 stored)

.     matrix mat = r(table)

.     local p: di %5.3f mat[4,1]

.     estadd local fp = "" 

added macro:
                 e(fp) : ""

. 
.     eststo: reghdfe dfi_hi shifty , absorb(stratum)   vce(rob)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   1,   1881) =       0.15
                                                  Prob > F        =     0.6980
                                                  R-squared       =     0.0296
                                                  Adj R-squared   =     0.0203
                                                  Within R-sq.    =     0.0001
                                                  Root MSE        =     0.3341

------------------------------------------------------------------------------
             |               Robust
      dfi_hi |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |   .0059598   .0153588     0.39   0.698    -.0241622    .0360818
       _cons |   .1280194   .0107561    11.90   0.000     .1069242    .1491146
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est3 stored)

.     matrix mat = r(table)

.     local p: di %5.3f mat[4,1]

.     estadd local fp = "" 

added macro:
                 e(fp) : ""

. 
.     eststo: reghdfe dfi_death shifty , absorb(stratum)   vce(rob)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   1,   1881) =       0.34
                                                  Prob > F        =     0.5611
                                                  R-squared       =     0.0089
                                                  Adj R-squared   =    -0.0006
                                                  Within R-sq.    =     0.0002
                                                  Root MSE        =     0.4877

------------------------------------------------------------------------------
             |               Robust
   dfi_death |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.0130483   .0224468    -0.58   0.561    -.0570715     .030975
       _cons |   .3950619   .0160454    24.62   0.000     .3635933    .4265306
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est4 stored)

.     matrix mat = r(table)

.     local p = round(mat[4,1],.001)

.     estadd local fp = "" 

added macro:
                 e(fp) : ""

. 
.     eststo: reghdfe risky shifty , absorb(stratum)   vce(rob)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   1,   1881) =       0.19
                                                  Prob > F        =     0.6655
                                                  R-squared       =     0.0120
                                                  Adj R-squared   =     0.0025
                                                  Within R-sq.    =     0.0001
                                                  Root MSE        =     0.4163

------------------------------------------------------------------------------
             |               Robust
       risky |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |   -.008319   .0192362    -0.43   0.665    -.0460456    .0294075
       _cons |   .2279182   .0137338    16.60   0.000     .2009831    .2548532
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est5 stored)

.     matrix mat = r(table)

.     local p: di %5.3f mat[4,1]

.     estadd local fp = "" 

added macro:
                 e(fp) : ""

. 
.         esttab using out/exp_2_dfishifty.tex, replace se label drop(_cons) st
> ar(* 0.1 ** 0.05 *** 0.01) ///
>         mlabel("Article: cute animals" "Article: wellness" "Article: health i
> nsurance" "Article: death counts" "Risky gamble" ) ///
>         scalars("fp \textit{p}-value: joint test (articles)")  
(note: file out/exp_2_dfishifty.tex not found)
(output written to out/exp_2_dfishifty.tex)

.     
.         * Panel C: WTP
.         cap gen wtp_index_ns = wtp_index - 4*wtp_sunscreen // subtract off de
> mand for sunscreen from demand for each additional outcome 

.         cap gen ln_wtp_ns = ln(wtp_index_ns + 1)

. 
. eststo clear

. /* wtp */ 
.     foreach outcome in index n95 purell toilet coffee sunscreen {       
  2.       eststo: reghdfe ln_wtp_`outcome' shifty , absorb(stratum)   vce(rob)
  3.       matrix mat = r(table)
  4.       local p: di %5.3f mat[4,1]  
  5.     }
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   1,   1881) =       0.04
                                                  Prob > F        =     0.8457
                                                  R-squared       =     0.0361
                                                  Adj R-squared   =     0.0269
                                                  Within R-sq.    =     0.0000
                                                  Root MSE        =     1.4683

------------------------------------------------------------------------------
             |               Robust
ln_wtp_index |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.0131592    .067622    -0.19   0.846    -.1457813    .1194629
       _cons |   3.180566   .0479074    66.39   0.000     3.086609    3.274523
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est1 stored)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   1,   1881) =       0.69
                                                  Prob > F        =     0.4080
                                                  R-squared       =     0.0326
                                                  Adj R-squared   =     0.0234
                                                  Within R-sq.    =     0.0004
                                                  Root MSE        =     1.1868

------------------------------------------------------------------------------
             |               Robust
  ln_wtp_n95 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.0452417   .0546623    -0.83   0.408    -.1524468    .0619634
       _cons |   1.916641   .0384409    49.86   0.000     1.841249    1.992032
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est2 stored)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   1,   1881) =       0.31
                                                  Prob > F        =     0.5766
                                                  R-squared       =     0.0343
                                                  Adj R-squared   =     0.0250
                                                  Within R-sq.    =     0.0002
                                                  Root MSE        =     1.1647

------------------------------------------------------------------------------
             |               Robust
ln_wtp_pur~l |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |    .029907   .0535483     0.56   0.577    -.0751133    .1349273
       _cons |   1.941839   .0381656    50.88   0.000     1.866987     2.01669
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est3 stored)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   1,   1881) =       0.04
                                                  Prob > F        =     0.8507
                                                  R-squared       =     0.0385
                                                  Adj R-squared   =     0.0293
                                                  Within R-sq.    =     0.0000
                                                  Root MSE        =     1.1614

------------------------------------------------------------------------------
             |               Robust
ln_wtp_toi~t |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.0100689   .0534773    -0.19   0.851      -.11495    .0948121
       _cons |   1.951763   .0375687    51.95   0.000     1.878083    2.025444
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est4 stored)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   1,   1881) =       1.43
                                                  Prob > F        =     0.2320
                                                  R-squared       =     0.0289
                                                  Adj R-squared   =     0.0197
                                                  Within R-sq.    =     0.0008
                                                  Root MSE        =     1.2037

------------------------------------------------------------------------------
             |               Robust
ln_wtp_cof~e |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.0661958    .055366    -1.20   0.232     -.174781    .0423894
       _cons |   1.556203   .0395348    39.36   0.000     1.478666     1.63374
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est5 stored)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   1,   1881) =       1.24
                                                  Prob > F        =     0.2665
                                                  R-squared       =     0.0561
                                                  Adj R-squared   =     0.0471
                                                  Within R-sq.    =     0.0007
                                                  Root MSE        =     1.1164

------------------------------------------------------------------------------
             |               Robust
ln_wtp_sun~n |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.0570182   .0512971    -1.11   0.266    -.1576235    .0435871
       _cons |   1.219051   .0364727    33.42   0.000      1.14752    1.290582
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est6 stored)

.    
.         esttab using out/exp_2_wtpshifty.tex, replace se label drop(_cons) st
> ar(* 0.1 ** 0.05 *** 0.01) ///
>         mlabel("Index (excl. sunscreen)"  "N95" "Purell" "Toilet Paper" "Coff
> ee" "Sunscreen")         ///
> sfmt(%5.3f) 
(note: file out/exp_2_wtpshifty.tex not found)
(output written to out/exp_2_wtpshifty.tex)

. 
. 
. 
end of do-file

. 
. /* Appendix: heterogeneity by statement */
. do code/heterogeneity_by_statement.do

. /*****************************************************/
. /* /\* This dofile builds the info vs. shifty graphs *\/ */
. /*****************************************************/
. if "`c(username)'" == "pierre-lucvautrey" {
.   do ~/Documents/Github/COVID/SetGlobals.do
. }

. else{
.   do ../SetGlobals.do

. version 13

. * set the number of ri replications
. global reps 1000

. 
. /* Sets stata globals */
. global raw = "../data"

. global int = "../data"

. 
. if "`c(username)'" == "charlierafkin" {
.   global raw = "~/Dropbox (MIT)/COVID/data/raw_decrypted/"
.   global int = "~/Dropbox (MIT)/COVID/data/intermediate/"
. }

. if "`c(username)'" == "pierre-lucvautrey" {
.   global raw = "~/Dropbox (MIT)/COVID/data/raw_decrypted/"
.   global int = "~/Dropbox (MIT)/COVID/data/intermediate/"
. }

. 
. global navy `" "51 122 183" "'

. global green `" "92 184 92" "'

. global ltblue `" "91 192 222" "'

. global red `" "217 83 79" "'

. global orange `" "240 173 78" "'

. 
. qui {

. 
. if "`c(username)'" == "pierre-lucvautrey" {
.   do ~/documents/github/COVID/programs.do
. }

. else{
.   do ../programs.do

. /*
> 
> Convert eps to pdf in mac Stata
> Author: CR
> Date: April 2018
> 
> */
. 
. 
. capture pr drop conversion

. capture pr define conversion

. 
. capture pr drop grout

. capture pr define grout

. 
. /******************************************/
. /* /\***** deflate cpi, base year *****\/ */
. /******************************************/
. capture pr drop get_cpi_deflator

. capture pr define get_cpi_deflator

. 
. 
. 
. 
. 
. 
. 
. /* other graphing/output programs that we want */
. 
. /****************************************************************************
> *********/
. /* program store_est_tpl : store b, se, p-values in format suitable for table
> _to_tpl */
. /****************************************************************************
> *********/
. cap prog drop store_est_tpl

. prog def store_est_tpl
  1. {
  2.   syntax using/,  coef(string) name(string) [format(string) beta se p n r2
>  all]
  3. 
.   /* turn on all flags if `all' is specified */
.   if !mi("`all'") {
  4.     local beta beta
  5.     local se se
  6.     local p p
  7.     local n n
  8.     local r2 r2
  9.   }
 10. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
 11. 
.   /* manage beta */
.   if !mi("`beta'") {
 12. 
.     /* store beta in the desired format */
.     local b3:  di `format' _b["`coef'"]
 13.     test `coef' = 0
 14.     local pvalue = `r(p)'
 15.     /* write p value (only makes sense if beta also specified) */
.     if !mi("`p'") {
 16.       insert_into_file using `using', key("`name'_p") value(" `pvalue'") f
> ormat("%5.2f")
 17.     }
 18. 
.     /* write beta to file */
.     insert_into_file using `using', key("`name'_beta") value(" `b3'") format(
> "`format'")
 19. 
.     /* count stars on the p and create starbeta */
.     count_stars, p(`pvalue')
 20.     insert_into_file using `using', key("`name'_starbeta") value(" `b3'`r(
> stars)'") format("`format'")
 21.   }
 22. 
.   /* manage se */
.   if !mi("`se'") {
 23.     local se3:  di `format' _se["`coef'"]
 24.     insert_into_file using `using', key("`name'_se") value(" `se3'")
 25.   }
 26. 
.   /* manage n */
.   if !mi("`n'") {
 27.     insert_into_file using `using', key("`name'_n") value(" `e(N)'") forma
> t("%1.0f")
 28.   }
 29. 
.   /* manage r2 */
.   if !mi("`r2'") {
 30.     insert_into_file using `using', key("`name'_r2") value(" `e(r2)'") for
> mat("%5.2f")
 31.   }
 32. }
 33. end

. /* *********** END program store_est_tpl ************************************
> ***** */
. 
. /****************************************************************************
> *********/
. /* program store_val_tpl : store value to a file with string and format      
>         */
. /****************************************************************************
> *********/
. cap prog drop store_val_tpl

. prog def store_val_tpl
  1. {
  2.   syntax using/,  Name(string) Value(string) [Format(string)]
  3. 
.   di `""store_val_tpl, name value format" is deprecated -- please use "insert
> _into_file, key value format" instead"'
  4. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
  5. 
.   /* get value in appropriate format (unless it's already a string) */
.   if !mi(real("`value'")) {
  6.     local v : di `format' `value'
  7.   }
  8.   else {
  9.     local v `value'
 10.   }
 11. 
.   /* write line to file */
.   append_to_file using `using', s("`name',`v'")
 12. }
 13. end

. /* *********** END program store_val_tpl ************************************
> ***** */
. 
. /****************************************************************************
> ***********************/
. /* program table_from_tpl : Create a table from a stored estimates file and a
>  .tex table template  */
. /****************************************************************************
> ***********************/
. cap prog drop table_from_tpl

. prog def table_from_tpl
  1. {
  2.   syntax, Template(string) Replacement(string) Output(string) [Verbose add
> stars dropstars]
  3. 
.   /* set up verbose flag */
.   if !mi("`verbose'") {
  4.       local v "-v"
  5.   }
  6.   else {
  7.       local v
  8.   }
  9. 
. 
.   /* if python path is not set, use current folder */
.   if mi("$PYTHONPATH") {
 10. 
.       /* set path to current folder */
.       local path .
 11.   }
 12.   else {
 13.       local path $PYTHONPATH
 14.   }
 15. 
.   /* check python file existence */
.   cap confirm file `path'/table_from_tpl.py
 16.   if _rc {
 17.       display as error "ERROR: table_from_tpl.py not found. Put in current
>  folder or folder defined by global \$PYTHONPATH"
 18.       error -1
 19.   }
 20. 
.   /* deal with addstars/dropstars parameters */
.   if "`addstars'" == "addstars" {
 21.     local star_param "--add-stars"
 22.   }
 23.   if "`dropstars'" == "dropstars" {
 24.     local star_param "--drop-stars"
 25.   }
 26. 
.   local pycommand `path'/table_from_tpl.py -t `template' -r `replacement' -o 
> `output' `v' `star_param'
 27.   if !mi("`verbose'") {
 28.       di `"Running `pycommand' "'
 29.   }
 30. 
.   shell python `pycommand'
 31.   cap confirm file `output'
 32.   if !_rc {
 33.     display "Created `output'."
 34.   }
 35.   else {
 36.     display "Could not create `output'."
 37.     error 1
 38.   }
 39. 
.   /* clean up the temporary file if star/nostar specified */
.   if !mi("`stars'") {
 40.     !rm $tmp/tpl_sed_tmp.tex
 41.   }
 42. }
 43. end

. /* *********** END program table_from_tpl ***********************************
> ****** */
. 
. /****************************************************************************
> ******/
. /* program append_to_file : Append a passed in string to a file              
>      */
. /****************************************************************************
> ******/
. cap prog drop append_to_file

. prog def append_to_file
  1. {
  2.   syntax using/, String(string)
  3. 
.   cap file close fh
  4.   file open fh using `using', write append
  5.   file write fh  `"`string'"'  _n
  6.   file close fh
  7. }
  8. end

. /* *********** END program append_to_file ***********************************
> ****** */
. 
. /****************************************************************************
> ******/
. /* program insert_into_file : Insert a key-value pair into a file            
>      */
. /*
> Assume "using" csv file take a key, value format, e.g.:
> 
> est1,3.544
> est2,3.234***
> ...
> 
> "est1" is the key. "3.544" is the value.
> 
> Example:
> 
> insert_into_file using $tmp/estimates.csv, key(est1) value(3.54493) format(%5
> .2f)
> 
> - if "est1" is not already in estimates file, it will be appended
> - if "est1" is already in estimates file, its value will be replaced with the
>  passed in parameter
> - estimates file will be created if it does not already exist
> 
> */
. 
. /****************************************************************************
> *******/
. cap prog drop insert_into_file

. prog def insert_into_file
  1. {
  2.   syntax using/, Key(string) Value(string) [Format(string) verbose]
  3. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
  4. 
.   /* get value in correct format (unless it's a string) */
.   if !mi(real("`value'")) {
  5.     local value : di `format' `value'
  6.   }
  7.   else {
  8.     local value `value'
  9.   }
 10. 
.   /* confirm file handles are closed */
.   cap file close fout
 11.   cap file close fin
 12. 
.   /* create a temporary file for writing */
.   tempfile tempfile
 13.   qui file open fout using `tempfile', write replace
 14. 
.   /* if input file doesn't exist, create it and display a notification */
.   cap confirm file `using'
 15.   if _rc {
 16.     if !mi("`verbose'") {
 17.       di "Creating new file `using'..."
 18.     }
 19.   }
 20. 
.   /* else, open the input file and read the first line */
.   else {
 21.     file open fin using `using', read
 22. 
.     /* read the first line */
.     file read fin line
 23.   }
 24. 
.   /* store a flag indicating whether we found the line or not */
.   local found 0
 25. 
.   /* loop over all lines of the file */
.   while r(eof) == 0 {
 26. 
.     /* check if line matches the current key */
.     if regexm("`line'", "^`key',") {
 27. 
.       /* if verbose, show what we're replacing  */
.       if !mi("`verbose'") {
 28.         di `"Replacing "`line'" with "`key',`value'"..."'
 29.       }
 30.       local found 1
 31. 
.       /* replace the line with key,value */
.       local line `key',`value'
 32.     }
 33. 
.     /* write the line to the output file */
.     file write fout "`line'" _n
 34. 
.     /* read the next line */
.     file read fin line
 35.   }
 36. 
.   /* if we didn't find this key, append it to the end */
.   if `found' == 0 {
 37.     file write fout "`key',`value'" _n
 38.   }
 39. 
.   /* close input and output files */
.   cap file close fin
 40.   file close fout
 41. 
.   /* copy the temporary file to the `using` filename */
.   copy `tempfile' `using', replace
 42. }
 43. end

. /* *********** END program insert_into_file *********************************
> ******** */
. 
. /****************************************************************************
> ******/
. /* program count_stars : return a string with the right number of stars      
>      */
. /****************************************************************************
> ******/
. cap prog drop count_stars

. prog def count_stars, rclass
  1. {
  2.   syntax, p(real)
  3.   local star = ""
  4.   if `p' <= 0.1  local star = "*"
  5.   if `p' <= 0.05 local star = "**"
  6.   if `p' <= 0.01 local star = "***"
  7.   return local stars = "`star'"
  8. }
  9. end

. /* *********** END program count_stars **************************************
> *** */
. 
. 
end of do-file
. }

. global PYTHONPATH = "code"

. 
end of do-file
. }

. clear 

. version 13

. 
. /****************************/
. /* 1. get update magnitudes */
. /****************************/
. use "$int/public_data" , clear 

. keep if !mi(shifty)
(0 observations deleted)

. destring tmt_order_id , replace 
tmt_order_id: all characters numeric; replaced as byte

. 
. /*************************************************************/
. /* /\* This dofile generates heterogeneity by statement for the Inconsistent 
> experiment  *\/ */
. /*************************************************************/
. gen shifty_1 = shifty * (tmt_order_id == 1 )

. gen shifty_2 = shifty * (tmt_order_id == 2 ) 

. gen steady_1 = (shifty==0) * (tmt_order_id == 1 ) 

. gen steady_2 = (shifty==0) * (tmt_order_id == 2 )

. 
. la var shifty_1 "Inconsistent: Distancing"

. la var shifty_2 "Inconsistent: Flu"

. la var steady_1 "Consistent: Distancing"

. la var steady_2 "Consistent: Flu"

. 
. eststo clear

. 
. /* changing x treatment 1 and 2 */ 
. eststo: reghdfe update_mag_deaths shifty_1 shifty_2, absorb(stratum) vce(rob)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   2,   1880) =       2.41
                                                  Prob > F        =     0.0904
                                                  R-squared       =     0.0376
                                                  Adj R-squared   =     0.0278
                                                  Within R-sq.    =     0.0025
                                                  Root MSE        =     5.4190

------------------------------------------------------------------------------
             |               Robust
update_mag~s |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
    shifty_1 |   -.364128    .305414    -1.19   0.233     -.963114    .2348581
    shifty_2 |  -.6443906   .3006014    -2.14   0.032    -1.233938   -.0548432
       _cons |   4.841666   .1795483    26.97   0.000     4.489531    5.193801
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est1 stored)

. test _b[shifty_1] = _b[shifty_2]

 ( 1)  shifty_1 - shifty_2 = 0

       F(  1,  1880) =    0.66
            Prob > F =    0.4167

. local p: di %5.3f `r(p)'

. estadd local wald= `p' 

added macro:
               e(wald) : ".417"

. 
. /* steady x treatment 1 and 2 */ 
. eststo: reghdfe update_mag_deaths steady_1 steady_2, absorb(stratum) vce(rob)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   2,   1880) =       3.85
                                                  Prob > F        =     0.0214
                                                  R-squared       =     0.0392
                                                  Adj R-squared   =     0.0295
                                                  Within R-sq.    =     0.0042
                                                  Root MSE        =     5.4144

------------------------------------------------------------------------------
             |               Robust
update_mag~s |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
    steady_1 |   .8578039   .3114347     2.75   0.006     .2470099    1.468598
    steady_2 |   .1631731   .3028141     0.54   0.590    -.4307139      .75706
       _cons |    4.33606    .172495    25.14   0.000     3.997759    4.674362
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est2 stored)

. test _b[steady_1] = _b[steady_2]

 ( 1)  steady_1 - steady_2 = 0

       F(  1,  1880) =    3.73
            Prob > F =    0.0537

. local p: di %5.3f `r(p)'

. estadd local wald = `p' 

added macro:
               e(wald) : ".054"

. 
. /* changing x treatment 1 and 2 */ 
. eststo: reghdfe update_covid shifty_1 shifty_2, absorb(stratum) vce(rob)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   2,   1880) =       2.24
                                                  Prob > F        =     0.1066
                                                  R-squared       =     0.0331
                                                  Adj R-squared   =     0.0233
                                                  Within R-sq.    =     0.0023
                                                  Root MSE        =     0.4892

------------------------------------------------------------------------------
             |               Robust
update_covid |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
    shifty_1 |  -.0226084   .0277717    -0.81   0.416    -.0770749    .0318582
    shifty_2 |  -.0573748   .0271212    -2.12   0.035    -.1105655   -.0041841
       _cons |    .448857   .0161261    27.83   0.000       .41723     .480484
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est3 stored)

. test _b[shifty_1] = _b[shifty_2]

 ( 1)  shifty_1 - shifty_2 = 0

       F(  1,  1880) =    1.23
            Prob > F =    0.2676

. local p: di %5.3f `r(p)'

. estadd local wald = `p' 

added macro:
               e(wald) : ".268"

. 
. /* steady x treatment 1 and 2 */ 
. eststo: reghdfe update_covid steady_1 steady_2, absorb(stratum) vce(rob)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   2,   1880) =       2.83
                                                  Prob > F        =     0.0595
                                                  R-squared       =     0.0337
                                                  Adj R-squared   =     0.0240
                                                  Within R-sq.    =     0.0030
                                                  Root MSE        =     0.4890

------------------------------------------------------------------------------
             |               Robust
update_covid |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
    steady_1 |    .065829   .0278098     2.37   0.018     .0112878    .1203703
    steady_2 |   .0151985   .0275733     0.55   0.582     -.038879     .069276
       _cons |   .4086999   .0156867    26.05   0.000     .3779347     .439465
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est4 stored)

. test _b[steady_1] = _b[steady_2]

 ( 1)  steady_1 - steady_2 = 0

       F(  1,  1880) =    2.47
            Prob > F =    0.1164

. local p: di %5.3f `r(p)'

. estadd local wald = `p' 

added macro:
               e(wald) : ".116"

. 
. esttab using out/changing_het.tex, replace se label drop(_cons) star(* 0.1 **
>  0.05 *** 0.01) ///
>     mlabel("\shortstack{Update magnitude: \\ logs}" ///
>     "\shortstack{Update magnitude: \\ logs}" ///
>   "Propensity to update" ///
>   "Propensity to update" ///
>     ) scalars("wald \textit{p}-value: test that Flu = Distancing")
(note: file out/changing_het.tex not found)
(output written to out/changing_het.tex)

. 
. 
end of do-file

. 
. /* Appendix: inverse hyperbolic sine */
. do code/inv_sinh.do

. /****************************************************************************
> **********/
. /* Generates a treatment effect for inverse hyperbolic sine transform of main
>  effect  */
. /****************************************************************************
> **********/
. if "`c(username)'" == "pierre-lucvautrey" {
.   do ~/documents/github/covid/SetGlobals.do
. }

. else{
.   do ../SetGlobals.do

. version 13

. * set the number of ri replications
. global reps 1000

. 
. /* Sets stata globals */
. global raw = "../data"

. global int = "../data"

. 
. if "`c(username)'" == "charlierafkin" {
.   global raw = "~/Dropbox (MIT)/COVID/data/raw_decrypted/"
.   global int = "~/Dropbox (MIT)/COVID/data/intermediate/"
. }

. if "`c(username)'" == "pierre-lucvautrey" {
.   global raw = "~/Dropbox (MIT)/COVID/data/raw_decrypted/"
.   global int = "~/Dropbox (MIT)/COVID/data/intermediate/"
. }

. 
. global navy `" "51 122 183" "'

. global green `" "92 184 92" "'

. global ltblue `" "91 192 222" "'

. global red `" "217 83 79" "'

. global orange `" "240 173 78" "'

. 
. qui {

. 
. if "`c(username)'" == "pierre-lucvautrey" {
.   do ~/documents/github/COVID/programs.do
. }

. else{
.   do ../programs.do

. /*
> 
> Convert eps to pdf in mac Stata
> Author: CR
> Date: April 2018
> 
> */
. 
. 
. capture pr drop conversion

. capture pr define conversion

. 
. capture pr drop grout

. capture pr define grout

. 
. /******************************************/
. /* /\***** deflate cpi, base year *****\/ */
. /******************************************/
. capture pr drop get_cpi_deflator

. capture pr define get_cpi_deflator

. 
. 
. 
. 
. 
. 
. 
. /* other graphing/output programs that we want */
. 
. /****************************************************************************
> *********/
. /* program store_est_tpl : store b, se, p-values in format suitable for table
> _to_tpl */
. /****************************************************************************
> *********/
. cap prog drop store_est_tpl

. prog def store_est_tpl
  1. {
  2.   syntax using/,  coef(string) name(string) [format(string) beta se p n r2
>  all]
  3. 
.   /* turn on all flags if `all' is specified */
.   if !mi("`all'") {
  4.     local beta beta
  5.     local se se
  6.     local p p
  7.     local n n
  8.     local r2 r2
  9.   }
 10. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
 11. 
.   /* manage beta */
.   if !mi("`beta'") {
 12. 
.     /* store beta in the desired format */
.     local b3:  di `format' _b["`coef'"]
 13.     test `coef' = 0
 14.     local pvalue = `r(p)'
 15.     /* write p value (only makes sense if beta also specified) */
.     if !mi("`p'") {
 16.       insert_into_file using `using', key("`name'_p") value(" `pvalue'") f
> ormat("%5.2f")
 17.     }
 18. 
.     /* write beta to file */
.     insert_into_file using `using', key("`name'_beta") value(" `b3'") format(
> "`format'")
 19. 
.     /* count stars on the p and create starbeta */
.     count_stars, p(`pvalue')
 20.     insert_into_file using `using', key("`name'_starbeta") value(" `b3'`r(
> stars)'") format("`format'")
 21.   }
 22. 
.   /* manage se */
.   if !mi("`se'") {
 23.     local se3:  di `format' _se["`coef'"]
 24.     insert_into_file using `using', key("`name'_se") value(" `se3'")
 25.   }
 26. 
.   /* manage n */
.   if !mi("`n'") {
 27.     insert_into_file using `using', key("`name'_n") value(" `e(N)'") forma
> t("%1.0f")
 28.   }
 29. 
.   /* manage r2 */
.   if !mi("`r2'") {
 30.     insert_into_file using `using', key("`name'_r2") value(" `e(r2)'") for
> mat("%5.2f")
 31.   }
 32. }
 33. end

. /* *********** END program store_est_tpl ************************************
> ***** */
. 
. /****************************************************************************
> *********/
. /* program store_val_tpl : store value to a file with string and format      
>         */
. /****************************************************************************
> *********/
. cap prog drop store_val_tpl

. prog def store_val_tpl
  1. {
  2.   syntax using/,  Name(string) Value(string) [Format(string)]
  3. 
.   di `""store_val_tpl, name value format" is deprecated -- please use "insert
> _into_file, key value format" instead"'
  4. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
  5. 
.   /* get value in appropriate format (unless it's already a string) */
.   if !mi(real("`value'")) {
  6.     local v : di `format' `value'
  7.   }
  8.   else {
  9.     local v `value'
 10.   }
 11. 
.   /* write line to file */
.   append_to_file using `using', s("`name',`v'")
 12. }
 13. end

. /* *********** END program store_val_tpl ************************************
> ***** */
. 
. /****************************************************************************
> ***********************/
. /* program table_from_tpl : Create a table from a stored estimates file and a
>  .tex table template  */
. /****************************************************************************
> ***********************/
. cap prog drop table_from_tpl

. prog def table_from_tpl
  1. {
  2.   syntax, Template(string) Replacement(string) Output(string) [Verbose add
> stars dropstars]
  3. 
.   /* set up verbose flag */
.   if !mi("`verbose'") {
  4.       local v "-v"
  5.   }
  6.   else {
  7.       local v
  8.   }
  9. 
. 
.   /* if python path is not set, use current folder */
.   if mi("$PYTHONPATH") {
 10. 
.       /* set path to current folder */
.       local path .
 11.   }
 12.   else {
 13.       local path $PYTHONPATH
 14.   }
 15. 
.   /* check python file existence */
.   cap confirm file `path'/table_from_tpl.py
 16.   if _rc {
 17.       display as error "ERROR: table_from_tpl.py not found. Put in current
>  folder or folder defined by global \$PYTHONPATH"
 18.       error -1
 19.   }
 20. 
.   /* deal with addstars/dropstars parameters */
.   if "`addstars'" == "addstars" {
 21.     local star_param "--add-stars"
 22.   }
 23.   if "`dropstars'" == "dropstars" {
 24.     local star_param "--drop-stars"
 25.   }
 26. 
.   local pycommand `path'/table_from_tpl.py -t `template' -r `replacement' -o 
> `output' `v' `star_param'
 27.   if !mi("`verbose'") {
 28.       di `"Running `pycommand' "'
 29.   }
 30. 
.   shell python `pycommand'
 31.   cap confirm file `output'
 32.   if !_rc {
 33.     display "Created `output'."
 34.   }
 35.   else {
 36.     display "Could not create `output'."
 37.     error 1
 38.   }
 39. 
.   /* clean up the temporary file if star/nostar specified */
.   if !mi("`stars'") {
 40.     !rm $tmp/tpl_sed_tmp.tex
 41.   }
 42. }
 43. end

. /* *********** END program table_from_tpl ***********************************
> ****** */
. 
. /****************************************************************************
> ******/
. /* program append_to_file : Append a passed in string to a file              
>      */
. /****************************************************************************
> ******/
. cap prog drop append_to_file

. prog def append_to_file
  1. {
  2.   syntax using/, String(string)
  3. 
.   cap file close fh
  4.   file open fh using `using', write append
  5.   file write fh  `"`string'"'  _n
  6.   file close fh
  7. }
  8. end

. /* *********** END program append_to_file ***********************************
> ****** */
. 
. /****************************************************************************
> ******/
. /* program insert_into_file : Insert a key-value pair into a file            
>      */
. /*
> Assume "using" csv file take a key, value format, e.g.:
> 
> est1,3.544
> est2,3.234***
> ...
> 
> "est1" is the key. "3.544" is the value.
> 
> Example:
> 
> insert_into_file using $tmp/estimates.csv, key(est1) value(3.54493) format(%5
> .2f)
> 
> - if "est1" is not already in estimates file, it will be appended
> - if "est1" is already in estimates file, its value will be replaced with the
>  passed in parameter
> - estimates file will be created if it does not already exist
> 
> */
. 
. /****************************************************************************
> *******/
. cap prog drop insert_into_file

. prog def insert_into_file
  1. {
  2.   syntax using/, Key(string) Value(string) [Format(string) verbose]
  3. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
  4. 
.   /* get value in correct format (unless it's a string) */
.   if !mi(real("`value'")) {
  5.     local value : di `format' `value'
  6.   }
  7.   else {
  8.     local value `value'
  9.   }
 10. 
.   /* confirm file handles are closed */
.   cap file close fout
 11.   cap file close fin
 12. 
.   /* create a temporary file for writing */
.   tempfile tempfile
 13.   qui file open fout using `tempfile', write replace
 14. 
.   /* if input file doesn't exist, create it and display a notification */
.   cap confirm file `using'
 15.   if _rc {
 16.     if !mi("`verbose'") {
 17.       di "Creating new file `using'..."
 18.     }
 19.   }
 20. 
.   /* else, open the input file and read the first line */
.   else {
 21.     file open fin using `using', read
 22. 
.     /* read the first line */
.     file read fin line
 23.   }
 24. 
.   /* store a flag indicating whether we found the line or not */
.   local found 0
 25. 
.   /* loop over all lines of the file */
.   while r(eof) == 0 {
 26. 
.     /* check if line matches the current key */
.     if regexm("`line'", "^`key',") {
 27. 
.       /* if verbose, show what we're replacing  */
.       if !mi("`verbose'") {
 28.         di `"Replacing "`line'" with "`key',`value'"..."'
 29.       }
 30.       local found 1
 31. 
.       /* replace the line with key,value */
.       local line `key',`value'
 32.     }
 33. 
.     /* write the line to the output file */
.     file write fout "`line'" _n
 34. 
.     /* read the next line */
.     file read fin line
 35.   }
 36. 
.   /* if we didn't find this key, append it to the end */
.   if `found' == 0 {
 37.     file write fout "`key',`value'" _n
 38.   }
 39. 
.   /* close input and output files */
.   cap file close fin
 40.   file close fout
 41. 
.   /* copy the temporary file to the `using` filename */
.   copy `tempfile' `using', replace
 42. }
 43. end

. /* *********** END program insert_into_file *********************************
> ******** */
. 
. /****************************************************************************
> ******/
. /* program count_stars : return a string with the right number of stars      
>      */
. /****************************************************************************
> ******/
. cap prog drop count_stars

. prog def count_stars, rclass
  1. {
  2.   syntax, p(real)
  3.   local star = ""
  4.   if `p' <= 0.1  local star = "*"
  5.   if `p' <= 0.05 local star = "**"
  6.   if `p' <= 0.01 local star = "***"
  7.   return local stars = "`star'"
  8. }
  9. end

. /* *********** END program count_stars **************************************
> *** */
. 
. 
end of do-file
. }

. global PYTHONPATH = "code"

. 
end of do-file
. }

. clear 

. version 13

. 
. /*****************************************************/
. /* Table 1: some variation, but always conservative  */
. /*****************************************************/
. use "$int/public_data" , clear

. keep if shifty != .
(0 observations deleted)

. la var shifty "Inconsistent" 

. eststo clear

. 
. foreach c in 1 .1 .01 .001 {
  2.   cap drop update_rob
  3.   gen update_rob = ln(abs_mag_deaths + `c' )
  4. 
.     eststo: reghdfe update_rob shifty, absorb(stratum) vce(rob)
  5.     mat mat = r(table)
  6.     local p: di %5.3f mat[4,1]
  7.     estadd local pval = `p' 
  8.     estadd local constant = `c' 
  9. }
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   1,   1881) =       4.12
                                                  Prob > F        =     0.0425
                                                  R-squared       =     0.0372
                                                  Adj R-squared   =     0.0280
                                                  Within R-sq.    =     0.0022
                                                  Root MSE        =     5.4184

------------------------------------------------------------------------------
             |               Robust
  update_rob |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |   -.505591   .2490891    -2.03   0.043    -.9941109    -.017071
       _cons |    4.84168   .1794968    26.97   0.000     4.489646    5.193714
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est1 stored)

added macro:
               e(pval) : ".043"

added macro:
           e(constant) : "1"
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   1,   1881) =       4.00
                                                  Prob > F        =     0.0456
                                                  R-squared       =     0.0367
                                                  Adj R-squared   =     0.0274
                                                  Within R-sq.    =     0.0021
                                                  Root MSE        =     6.5109

------------------------------------------------------------------------------
             |               Robust
  update_rob |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.5989038   .2994292    -2.00   0.046    -1.186152   -.0116556
       _cons |   3.571235   .2155405    16.57   0.000     3.148511    3.993958
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est2 stored)

added macro:
               e(pval) : ".046"

added macro:
           e(constant) : ".1"
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   1,   1881) =       3.90
                                                  Prob > F        =     0.0485
                                                  R-squared       =     0.0362
                                                  Adj R-squared   =     0.0269
                                                  Within R-sq.    =     0.0021
                                                  Root MSE        =     7.6124

------------------------------------------------------------------------------
             |               Robust
  update_rob |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.6914814   .3501834    -1.97   0.048     -1.37827   -.0046926
       _cons |   2.301991   .2518777     9.14   0.000     1.808002     2.79598
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est3 stored)

added macro:
               e(pval) : ".048"

added macro:
           e(constant) : ".01"
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   1,   1881) =       3.82
                                                  Prob > F        =     0.0509
                                                  R-squared       =     0.0358
                                                  Adj R-squared   =     0.0266
                                                  Within R-sq.    =     0.0020
                                                  Root MSE        =     8.7203

------------------------------------------------------------------------------
             |               Robust
  update_rob |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.7839576   .4012211    -1.95   0.051    -1.570843    .0029276
       _cons |   1.032921   .2884127     3.58   0.000     .4672786    1.598563
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est4 stored)

added macro:
               e(pval) : ".051"

added macro:
           e(constant) : ".001"

. 
. esttab using out/ln_c.tex, replace se label drop(_cons) star(* 0.1 ** 0.05 **
> * 0.01) ///
>     mlabel("\shortstack{Update magnitude: \\ \$ \ln(|\text{posterior}-\text{p
> rior}|+c) \$}" ///
>     "\shortstack{Update magnitude: \\ \$ \ln(|\text{posterior}-\text{prior}|+
> c) \$}" ///
>     "\shortstack{Update magnitude: \\ \$ \ln(|\text{posterior}-\text{prior}|+
> c) \$}" ///
>     "\shortstack{Update magnitude: \\ \$ \ln(|\text{posterior}-\text{prior}|+
> c) \$}" ) ///
> scalars("pval \$p\$-value" "constant Value of constant \textit{c}" )
(note: file out/ln_c.tex not found)
(output written to out/ln_c.tex)

. 
. 
. /*******************************************************/
. /* /\* Table 2: Same effect if you look at invsinh *\/ */
. /*******************************************************/
. 
. **** inverse hyperbolic sine definition from https://en.wikipedia.org/wiki/In
> verse_hyperbolic_functions#Inverse_hyperbolic_sine ****/
. gen invsinhupdate = ln(abs_mag_deaths + sqrt(abs_mag_deaths^2 + 1))

. 
. eststo clear 

. eststo: reghdfe invsinhupdate shifty, absorb(stratum) vce(rob)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   1,   1881) =       4.09
                                                  Prob > F        =     0.0433
                                                  R-squared       =     0.0371
                                                  Adj R-squared   =     0.0278
                                                  Within R-sq.    =     0.0022
                                                  Root MSE        =     5.7466

------------------------------------------------------------------------------
             |               Robust
invsinhupd~e |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.5341944   .2642069    -2.02   0.043    -1.052364   -.0160249
       _cons |   5.151594   .1903186    27.07   0.000     4.778337    5.524852
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est1 stored)

. mat mat = r(table)

. local p: di %5.3f mat[4,1]

. estadd local pval = `p' 

added macro:
               e(pval) : ".043"

. estadd local sample = "All"

added macro:
             e(sample) : "All"

. 
. eststo: reghdfe invsinhupdate shifty if priors_below_info == 1, absorb(stratu
> m) vce(rob)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =        909
Absorbing 1 HDFE group                            F(   1,    890) =       1.15
                                                  Prob > F        =     0.2846
                                                  R-squared       =     0.0599
                                                  Adj R-squared   =     0.0409
                                                  Within R-sq.    =     0.0013
                                                  Root MSE        =     5.3332

------------------------------------------------------------------------------
             |               Robust
invsinhupd~e |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.3804485   .3553026    -1.07   0.285    -1.077777    .3168801
       _cons |   5.478168   .2535613    21.60   0.000      4.98052    5.975816
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est2 stored)

. mat mat = r(table)

. local p: di %5.3f mat[4,1]

. estadd local pval = `p' 

added macro:
               e(pval) : ".285"

. estadd local sample = "Priors below info"

added macro:
             e(sample) : "Priors below info"

. 
. eststo: reghdfe invsinhupdate shifty if priors_at_info == 1, absorb(stratum) 
> vce(rob)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =        544
Absorbing 1 HDFE group                            F(   1,    525) =       0.89
                                                  Prob > F        =     0.3464
                                                  R-squared       =     0.0535
                                                  Adj R-squared   =     0.0211
                                                  Within R-sq.    =     0.0017
                                                  Root MSE        =     5.4062

------------------------------------------------------------------------------
             |               Robust
invsinhupd~e |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |   -.448235   .4756131    -0.94   0.346    -1.382574    .4861036
       _cons |   3.983008   .3408138    11.69   0.000     3.313482    4.652534
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est3 stored)

. mat mat = r(table)

. local p: di %5.3f mat[4,1]

. estadd local pval = `p' 

added macro:
               e(pval) : ".346"

. estadd local sample = "Priors at info"

added macro:
             e(sample) : "Priors at info"

. 
. eststo: reghdfe invsinhupdate shifty if priors_above_info == 1, absorb(stratu
> m) vce(rob)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =        447
Absorbing 1 HDFE group                            F(   1,    428) =       1.93
                                                  Prob > F        =     0.1651
                                                  R-squared       =     0.0493
                                                  Adj R-squared   =     0.0093
                                                  Within R-sq.    =     0.0044
                                                  Root MSE        =     6.7308

------------------------------------------------------------------------------
             |               Robust
invsinhupd~e |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.8958035   .6442035    -1.39   0.165       -2.162    .3703928
       _cons |   5.889153   .4696099    12.54   0.000     4.966124    6.812181
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est4 stored)

. mat mat = r(table)

. local p: di %5.3f mat[4,1]

. estadd local pval = `p' 

added macro:
               e(pval) : ".165"

. estadd local sample = "Priors above info"

added macro:
             e(sample) : "Priors above info"

. 
. esttab using out/sinh.tex, replace se label drop(_cons) star(* 0.1 ** 0.05 **
> * 0.01) ///
>     mlabel("\shortstack{Update magnitude: \\ \$ \sinh^{-1}(|\text{posterior}-
> \text{prior} |) \$}" ///
>     "\shortstack{Update magnitude: \\ \$ \sinh^{-1}(|\text{posterior}-\text{p
> rior} |) \$}" /// 
>   "\shortstack{Update magnitude: \\ \$ \sinh^{-1}(|\text{posterior}-\text{pri
> or} |) \$}" /// 
>   "\shortstack{Update magnitude: \\ \$ \sinh^{-1}(|\text{posterior}-\text{pri
> or} |) \$}" /// 
>   "\shortstack{Update magnitude: \\ \$ \sinh^{-1}(|\text{posterior}-\text{pri
> or} |) \$}" ///
>     ) scalars("pval \$p\$-value" "sample Sample" )
(note: file out/sinh.tex not found)
(output written to out/sinh.tex)

. 
. 
. 
. 
. 
. 
. 
. 
. 
. 
. 
. 
. 
. 
. 
. 
. 
end of do-file

. 
. /* Appendix: update magnitude without taking logarithms */
. do code/absolute.do

. /**********************************************************/
. /* Generate effect on alternate outcome of belief update  */
. /**********************************************************/
. if "`c(username)'" == "pierre-lucvautrey" {
.   do ~/documents/github/covid/SetGlobals.do
. }

. else{
.   do ../SetGlobals.do

. version 13

. * set the number of ri replications
. global reps 1000

. 
. /* Sets stata globals */
. global raw = "../data"

. global int = "../data"

. 
. if "`c(username)'" == "charlierafkin" {
.   global raw = "~/Dropbox (MIT)/COVID/data/raw_decrypted/"
.   global int = "~/Dropbox (MIT)/COVID/data/intermediate/"
. }

. if "`c(username)'" == "pierre-lucvautrey" {
.   global raw = "~/Dropbox (MIT)/COVID/data/raw_decrypted/"
.   global int = "~/Dropbox (MIT)/COVID/data/intermediate/"
. }

. 
. global navy `" "51 122 183" "'

. global green `" "92 184 92" "'

. global ltblue `" "91 192 222" "'

. global red `" "217 83 79" "'

. global orange `" "240 173 78" "'

. 
. qui {

. 
. if "`c(username)'" == "pierre-lucvautrey" {
.   do ~/documents/github/COVID/programs.do
. }

. else{
.   do ../programs.do

. /*
> 
> Convert eps to pdf in mac Stata
> Author: CR
> Date: April 2018
> 
> */
. 
. 
. capture pr drop conversion

. capture pr define conversion

. 
. capture pr drop grout

. capture pr define grout

. 
. /******************************************/
. /* /\***** deflate cpi, base year *****\/ */
. /******************************************/
. capture pr drop get_cpi_deflator

. capture pr define get_cpi_deflator

. 
. 
. 
. 
. 
. 
. 
. /* other graphing/output programs that we want */
. 
. /****************************************************************************
> *********/
. /* program store_est_tpl : store b, se, p-values in format suitable for table
> _to_tpl */
. /****************************************************************************
> *********/
. cap prog drop store_est_tpl

. prog def store_est_tpl
  1. {
  2.   syntax using/,  coef(string) name(string) [format(string) beta se p n r2
>  all]
  3. 
.   /* turn on all flags if `all' is specified */
.   if !mi("`all'") {
  4.     local beta beta
  5.     local se se
  6.     local p p
  7.     local n n
  8.     local r2 r2
  9.   }
 10. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
 11. 
.   /* manage beta */
.   if !mi("`beta'") {
 12. 
.     /* store beta in the desired format */
.     local b3:  di `format' _b["`coef'"]
 13.     test `coef' = 0
 14.     local pvalue = `r(p)'
 15.     /* write p value (only makes sense if beta also specified) */
.     if !mi("`p'") {
 16.       insert_into_file using `using', key("`name'_p") value(" `pvalue'") f
> ormat("%5.2f")
 17.     }
 18. 
.     /* write beta to file */
.     insert_into_file using `using', key("`name'_beta") value(" `b3'") format(
> "`format'")
 19. 
.     /* count stars on the p and create starbeta */
.     count_stars, p(`pvalue')
 20.     insert_into_file using `using', key("`name'_starbeta") value(" `b3'`r(
> stars)'") format("`format'")
 21.   }
 22. 
.   /* manage se */
.   if !mi("`se'") {
 23.     local se3:  di `format' _se["`coef'"]
 24.     insert_into_file using `using', key("`name'_se") value(" `se3'")
 25.   }
 26. 
.   /* manage n */
.   if !mi("`n'") {
 27.     insert_into_file using `using', key("`name'_n") value(" `e(N)'") forma
> t("%1.0f")
 28.   }
 29. 
.   /* manage r2 */
.   if !mi("`r2'") {
 30.     insert_into_file using `using', key("`name'_r2") value(" `e(r2)'") for
> mat("%5.2f")
 31.   }
 32. }
 33. end

. /* *********** END program store_est_tpl ************************************
> ***** */
. 
. /****************************************************************************
> *********/
. /* program store_val_tpl : store value to a file with string and format      
>         */
. /****************************************************************************
> *********/
. cap prog drop store_val_tpl

. prog def store_val_tpl
  1. {
  2.   syntax using/,  Name(string) Value(string) [Format(string)]
  3. 
.   di `""store_val_tpl, name value format" is deprecated -- please use "insert
> _into_file, key value format" instead"'
  4. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
  5. 
.   /* get value in appropriate format (unless it's already a string) */
.   if !mi(real("`value'")) {
  6.     local v : di `format' `value'
  7.   }
  8.   else {
  9.     local v `value'
 10.   }
 11. 
.   /* write line to file */
.   append_to_file using `using', s("`name',`v'")
 12. }
 13. end

. /* *********** END program store_val_tpl ************************************
> ***** */
. 
. /****************************************************************************
> ***********************/
. /* program table_from_tpl : Create a table from a stored estimates file and a
>  .tex table template  */
. /****************************************************************************
> ***********************/
. cap prog drop table_from_tpl

. prog def table_from_tpl
  1. {
  2.   syntax, Template(string) Replacement(string) Output(string) [Verbose add
> stars dropstars]
  3. 
.   /* set up verbose flag */
.   if !mi("`verbose'") {
  4.       local v "-v"
  5.   }
  6.   else {
  7.       local v
  8.   }
  9. 
. 
.   /* if python path is not set, use current folder */
.   if mi("$PYTHONPATH") {
 10. 
.       /* set path to current folder */
.       local path .
 11.   }
 12.   else {
 13.       local path $PYTHONPATH
 14.   }
 15. 
.   /* check python file existence */
.   cap confirm file `path'/table_from_tpl.py
 16.   if _rc {
 17.       display as error "ERROR: table_from_tpl.py not found. Put in current
>  folder or folder defined by global \$PYTHONPATH"
 18.       error -1
 19.   }
 20. 
.   /* deal with addstars/dropstars parameters */
.   if "`addstars'" == "addstars" {
 21.     local star_param "--add-stars"
 22.   }
 23.   if "`dropstars'" == "dropstars" {
 24.     local star_param "--drop-stars"
 25.   }
 26. 
.   local pycommand `path'/table_from_tpl.py -t `template' -r `replacement' -o 
> `output' `v' `star_param'
 27.   if !mi("`verbose'") {
 28.       di `"Running `pycommand' "'
 29.   }
 30. 
.   shell python `pycommand'
 31.   cap confirm file `output'
 32.   if !_rc {
 33.     display "Created `output'."
 34.   }
 35.   else {
 36.     display "Could not create `output'."
 37.     error 1
 38.   }
 39. 
.   /* clean up the temporary file if star/nostar specified */
.   if !mi("`stars'") {
 40.     !rm $tmp/tpl_sed_tmp.tex
 41.   }
 42. }
 43. end

. /* *********** END program table_from_tpl ***********************************
> ****** */
. 
. /****************************************************************************
> ******/
. /* program append_to_file : Append a passed in string to a file              
>      */
. /****************************************************************************
> ******/
. cap prog drop append_to_file

. prog def append_to_file
  1. {
  2.   syntax using/, String(string)
  3. 
.   cap file close fh
  4.   file open fh using `using', write append
  5.   file write fh  `"`string'"'  _n
  6.   file close fh
  7. }
  8. end

. /* *********** END program append_to_file ***********************************
> ****** */
. 
. /****************************************************************************
> ******/
. /* program insert_into_file : Insert a key-value pair into a file            
>      */
. /*
> Assume "using" csv file take a key, value format, e.g.:
> 
> est1,3.544
> est2,3.234***
> ...
> 
> "est1" is the key. "3.544" is the value.
> 
> Example:
> 
> insert_into_file using $tmp/estimates.csv, key(est1) value(3.54493) format(%5
> .2f)
> 
> - if "est1" is not already in estimates file, it will be appended
> - if "est1" is already in estimates file, its value will be replaced with the
>  passed in parameter
> - estimates file will be created if it does not already exist
> 
> */
. 
. /****************************************************************************
> *******/
. cap prog drop insert_into_file

. prog def insert_into_file
  1. {
  2.   syntax using/, Key(string) Value(string) [Format(string) verbose]
  3. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
  4. 
.   /* get value in correct format (unless it's a string) */
.   if !mi(real("`value'")) {
  5.     local value : di `format' `value'
  6.   }
  7.   else {
  8.     local value `value'
  9.   }
 10. 
.   /* confirm file handles are closed */
.   cap file close fout
 11.   cap file close fin
 12. 
.   /* create a temporary file for writing */
.   tempfile tempfile
 13.   qui file open fout using `tempfile', write replace
 14. 
.   /* if input file doesn't exist, create it and display a notification */
.   cap confirm file `using'
 15.   if _rc {
 16.     if !mi("`verbose'") {
 17.       di "Creating new file `using'..."
 18.     }
 19.   }
 20. 
.   /* else, open the input file and read the first line */
.   else {
 21.     file open fin using `using', read
 22. 
.     /* read the first line */
.     file read fin line
 23.   }
 24. 
.   /* store a flag indicating whether we found the line or not */
.   local found 0
 25. 
.   /* loop over all lines of the file */
.   while r(eof) == 0 {
 26. 
.     /* check if line matches the current key */
.     if regexm("`line'", "^`key',") {
 27. 
.       /* if verbose, show what we're replacing  */
.       if !mi("`verbose'") {
 28.         di `"Replacing "`line'" with "`key',`value'"..."'
 29.       }
 30.       local found 1
 31. 
.       /* replace the line with key,value */
.       local line `key',`value'
 32.     }
 33. 
.     /* write the line to the output file */
.     file write fout "`line'" _n
 34. 
.     /* read the next line */
.     file read fin line
 35.   }
 36. 
.   /* if we didn't find this key, append it to the end */
.   if `found' == 0 {
 37.     file write fout "`key',`value'" _n
 38.   }
 39. 
.   /* close input and output files */
.   cap file close fin
 40.   file close fout
 41. 
.   /* copy the temporary file to the `using` filename */
.   copy `tempfile' `using', replace
 42. }
 43. end

. /* *********** END program insert_into_file *********************************
> ******** */
. 
. /****************************************************************************
> ******/
. /* program count_stars : return a string with the right number of stars      
>      */
. /****************************************************************************
> ******/
. cap prog drop count_stars

. prog def count_stars, rclass
  1. {
  2.   syntax, p(real)
  3.   local star = ""
  4.   if `p' <= 0.1  local star = "*"
  5.   if `p' <= 0.05 local star = "**"
  6.   if `p' <= 0.01 local star = "***"
  7.   return local stars = "`star'"
  8. }
  9. end

. /* *********** END program count_stars **************************************
> *** */
. 
. 
end of do-file
. }

. global PYTHONPATH = "code"

. 
end of do-file
. }

. clear 

. version 13

. 
. use "$int/public_data" , clear

. keep if !mi(shifty)
(0 observations deleted)

. eststo clear

. 
. la var shifty "Inconsistent"

. 
. /* column 1: absolute effect */
. eststo: reghdfe abs_mag_deaths shifty, absorb(stratum) vce(rob)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   1,   1881) =       0.07
                                                  Prob > F        =     0.7880
                                                  R-squared       =     0.0097
                                                  Adj R-squared   =     0.0002
                                                  Within R-sq.    =     0.0000
                                                  Root MSE        =  2.426e+07

------------------------------------------------------------------------------
             |               Robust
abs_mag_de~s |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |   258648.3   961855.7     0.27   0.788     -1627768     2145065
       _cons |     955560   361827.2     2.64   0.008     245935.1     1665185
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est1 stored)

. matrix mat = r(table)

. local p: di %5.3f mat[4,1]

. estadd local pval `p'

added macro:
               e(pval) : "0.788"

. 
. /* column 2: winsorize */
. sum abs_mag_deaths if shifty == 0, d

                       abs_mag_deaths
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%            0              0       Obs                 933
25%            0              0       Sum of Wgt.         933

50%            0                      Mean             902593
                        Largest       Std. Dev.      1.09e+07
75%        45000       9.95e+07
90%       190000       1.40e+08       Variance       1.18e+14
95%       400000       1.81e+08       Skewness        14.9675
99%      8250000       1.98e+08       Kurtosis       238.6126

. gen abs_mag_deaths_win_95 = min(abs(deaths_post - deaths_pre) , `r(p95)')

. gen abs_mag_deaths_win_90 = min(abs(deaths_post - deaths_pre) , `r(p90)')

. 
. eststo: reghdfe abs_mag_deaths_win_95 shifty, absorb(stratum) vce(rob)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   1,   1881) =       2.50
                                                  Prob > F        =     0.1141
                                                  R-squared       =     0.0298
                                                  Adj R-squared   =     0.0206
                                                  Within R-sq.    =     0.0013
                                                  Root MSE        = 97649.7383

------------------------------------------------------------------------------
             |               Robust
abs_mag_d~95 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -7073.332   4474.915    -1.58   0.114    -15849.65    1702.988
       _cons |    48946.4   3298.772    14.84   0.000     42476.77    55416.04
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est2 stored)

. matrix mat = r(table)

. local p: di %5.3f mat[4,1]

. estadd local note "Winsorized: 95th percentile"

added macro:
               e(note) : "Winsorized: 95th percentile"

. estadd local pval `p'

added macro:
               e(pval) : "0.114"

. 
. eststo: reghdfe abs_mag_deaths_win_90 shifty, absorb(stratum) vce(rob)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   1,   1881) =       3.83
                                                  Prob > F        =     0.0506
                                                  R-squared       =     0.0362
                                                  Adj R-squared   =     0.0270
                                                  Within R-sq.    =     0.0020
                                                  Root MSE        = 58584.4806

------------------------------------------------------------------------------
             |               Robust
abs_mag_d~90 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -5255.778   2686.444    -1.96   0.051     -10524.5    12.94597
       _cons |   35441.87   1995.871    17.76   0.000     31527.52    39356.23
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est3 stored)

. matrix mat = r(table)

. local p: di %5.3f mat[4,1]

. estadd local pval `p'

added macro:
               e(pval) : "0.051"

. estadd local note "Winsorized: 90th percentile"

added macro:
               e(note) : "Winsorized: 90th percentile"

. 
. /* column 4: drop if exceeds 1 million */
. sum deaths_pre if shifty == 0 , d

                           priors
-------------------------------------------------------------
      Percentiles      Smallest
 1%          828              0
 5%         2000              5
10%         6000             10       Obs                 933
25%        20000             10       Sum of Wgt.         933

50%       100000                      Mean           832215.8
                        Largest       Std. Dev.       9392540
75%       212000       2.22e+07
90%       600000       2.80e+07       Variance       8.82e+13
95%      1000000       2.00e+08       Skewness       20.52797
99%     1.00e+07       2.00e+08       Kurtosis       434.4648

. local pre_p95 = `r(p95)'

. local pre_p90 = `r(p90)'

. 
. sum deaths_post if shifty == 0 , d

                         posteriors
-------------------------------------------------------------
      Percentiles      Smallest
 1%          500              0
 5%         2000              0
10%         8000              0       Obs                 933
25%        35000              5       Sum of Wgt.         933

50%       110000                      Mean            1143346
                        Largest       Std. Dev.      1.14e+07
75%       234000       1.00e+08
90%       500000       1.50e+08       Variance       1.29e+14
95%      1000000       1.90e+08       Skewness       14.58262
99%     1.00e+07       2.00e+08       Kurtosis       227.4562

. local post_p95 = `r(p95)'

. local post_p90 = `r(p90)'

. 
. eststo: reghdfe abs_mag_deaths shifty if deaths_pre <= `pre_p95' & deaths_pos
> t <= `post_p95', absorb(stratum) vce(rob)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,796
Absorbing 1 HDFE group                            F(   1,   1777) =       6.99
                                                  Prob > F        =     0.0083
                                                  R-squared       =     0.0196
                                                  Adj R-squared   =     0.0097
                                                  Within R-sq.    =     0.0039
                                                  Root MSE        =  1.005e+05

------------------------------------------------------------------------------
             |               Robust
abs_mag_de~s |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -12534.12    4741.38    -2.64   0.008    -21833.39   -3234.856
       _cons |   44926.09   3808.462    11.80   0.000     37456.56    52395.63
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est4 stored)

. matrix mat = r(table)

. local p: di %5.3f mat[4,1]

. estadd local pval `p'

added macro:
               e(pval) : "0.008"

. estadd local note "Drop if $>$ 95th percentile"

added macro:
               e(note) : "Drop if $>$ 95th percentile"

. 
. eststo: reghdfe abs_mag_deaths shifty if deaths_pre <= `pre_p90' & deaths_pos
> t <= `post_p90', absorb(stratum) vce(rob)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,687
Absorbing 1 HDFE group                            F(   1,   1668) =       5.63
                                                  Prob > F        =     0.0178
                                                  R-squared       =     0.0261
                                                  Adj R-squared   =     0.0156
                                                  Within R-sq.    =     0.0034
                                                  Root MSE        = 62326.8586

------------------------------------------------------------------------------
             |               Robust
abs_mag_de~s |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -7244.153   3053.456    -2.37   0.018    -13233.16   -1255.144
       _cons |    32188.2   2397.592    13.43   0.000      27485.6    36890.81
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est5 stored)

. matrix mat = r(table)

. local p: di %5.3f mat[4,1]

. estadd local pval `p'

added macro:
               e(pval) : "0.018"

. estadd local note "Drop if $>$ 90th percentile"

added macro:
               e(note) : "Drop if $>$ 90th percentile"

. 
. esttab using out/other_outcome.tex, replace se label drop(_cons) star(* 0.1 *
> * 0.05 *** 0.01) ///
>     mlabel("\shortstack{Update magnitude: \\ $|$ posterior $-$ prior $|$}" //
> /
>     "\shortstack{Update magnitude: \\ $|$ posterior $-$ prior $|$}" ///
>     "\shortstack{Update magnitude: \\ $|$ posterior $-$ prior $|$}" ///
>     "\shortstack{Update magnitude: \\ $|$ posterior $-$ prior $|$}"    ///
>     "\shortstack{Update magnitude: \\ $|$ posterior $-$ prior $|$}"    ///   
>  
>     ) scalars("pval \$p\$-value" "note Note")
(note: file out/other_outcome.tex not found)
(output written to out/other_outcome.tex)

. 
. 
end of do-file

. 
. /* Appendix: social distancing */
. do code/social_distancing.do

. /*****************************************************/
. /* /\* This dofile builds the info vs. shifty graphs *\/ */
. /*****************************************************/
. if "`c(username)'" == "pierre-lucvautrey" {
.   do ~/Documents/Github/COVID/SetGlobals.do
. }

. else{
.   do ../SetGlobals.do

. version 13

. * set the number of ri replications
. global reps 1000

. 
. /* Sets stata globals */
. global raw = "../data"

. global int = "../data"

. 
. if "`c(username)'" == "charlierafkin" {
.   global raw = "~/Dropbox (MIT)/COVID/data/raw_decrypted/"
.   global int = "~/Dropbox (MIT)/COVID/data/intermediate/"
. }

. if "`c(username)'" == "pierre-lucvautrey" {
.   global raw = "~/Dropbox (MIT)/COVID/data/raw_decrypted/"
.   global int = "~/Dropbox (MIT)/COVID/data/intermediate/"
. }

. 
. global navy `" "51 122 183" "'

. global green `" "92 184 92" "'

. global ltblue `" "91 192 222" "'

. global red `" "217 83 79" "'

. global orange `" "240 173 78" "'

. 
. qui {

. 
. if "`c(username)'" == "pierre-lucvautrey" {
.   do ~/documents/github/COVID/programs.do
. }

. else{
.   do ../programs.do

. /*
> 
> Convert eps to pdf in mac Stata
> Author: CR
> Date: April 2018
> 
> */
. 
. 
. capture pr drop conversion

. capture pr define conversion

. 
. capture pr drop grout

. capture pr define grout

. 
. /******************************************/
. /* /\***** deflate cpi, base year *****\/ */
. /******************************************/
. capture pr drop get_cpi_deflator

. capture pr define get_cpi_deflator

. 
. 
. 
. 
. 
. 
. 
. /* other graphing/output programs that we want */
. 
. /****************************************************************************
> *********/
. /* program store_est_tpl : store b, se, p-values in format suitable for table
> _to_tpl */
. /****************************************************************************
> *********/
. cap prog drop store_est_tpl

. prog def store_est_tpl
  1. {
  2.   syntax using/,  coef(string) name(string) [format(string) beta se p n r2
>  all]
  3. 
.   /* turn on all flags if `all' is specified */
.   if !mi("`all'") {
  4.     local beta beta
  5.     local se se
  6.     local p p
  7.     local n n
  8.     local r2 r2
  9.   }
 10. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
 11. 
.   /* manage beta */
.   if !mi("`beta'") {
 12. 
.     /* store beta in the desired format */
.     local b3:  di `format' _b["`coef'"]
 13.     test `coef' = 0
 14.     local pvalue = `r(p)'
 15.     /* write p value (only makes sense if beta also specified) */
.     if !mi("`p'") {
 16.       insert_into_file using `using', key("`name'_p") value(" `pvalue'") f
> ormat("%5.2f")
 17.     }
 18. 
.     /* write beta to file */
.     insert_into_file using `using', key("`name'_beta") value(" `b3'") format(
> "`format'")
 19. 
.     /* count stars on the p and create starbeta */
.     count_stars, p(`pvalue')
 20.     insert_into_file using `using', key("`name'_starbeta") value(" `b3'`r(
> stars)'") format("`format'")
 21.   }
 22. 
.   /* manage se */
.   if !mi("`se'") {
 23.     local se3:  di `format' _se["`coef'"]
 24.     insert_into_file using `using', key("`name'_se") value(" `se3'")
 25.   }
 26. 
.   /* manage n */
.   if !mi("`n'") {
 27.     insert_into_file using `using', key("`name'_n") value(" `e(N)'") forma
> t("%1.0f")
 28.   }
 29. 
.   /* manage r2 */
.   if !mi("`r2'") {
 30.     insert_into_file using `using', key("`name'_r2") value(" `e(r2)'") for
> mat("%5.2f")
 31.   }
 32. }
 33. end

. /* *********** END program store_est_tpl ************************************
> ***** */
. 
. /****************************************************************************
> *********/
. /* program store_val_tpl : store value to a file with string and format      
>         */
. /****************************************************************************
> *********/
. cap prog drop store_val_tpl

. prog def store_val_tpl
  1. {
  2.   syntax using/,  Name(string) Value(string) [Format(string)]
  3. 
.   di `""store_val_tpl, name value format" is deprecated -- please use "insert
> _into_file, key value format" instead"'
  4. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
  5. 
.   /* get value in appropriate format (unless it's already a string) */
.   if !mi(real("`value'")) {
  6.     local v : di `format' `value'
  7.   }
  8.   else {
  9.     local v `value'
 10.   }
 11. 
.   /* write line to file */
.   append_to_file using `using', s("`name',`v'")
 12. }
 13. end

. /* *********** END program store_val_tpl ************************************
> ***** */
. 
. /****************************************************************************
> ***********************/
. /* program table_from_tpl : Create a table from a stored estimates file and a
>  .tex table template  */
. /****************************************************************************
> ***********************/
. cap prog drop table_from_tpl

. prog def table_from_tpl
  1. {
  2.   syntax, Template(string) Replacement(string) Output(string) [Verbose add
> stars dropstars]
  3. 
.   /* set up verbose flag */
.   if !mi("`verbose'") {
  4.       local v "-v"
  5.   }
  6.   else {
  7.       local v
  8.   }
  9. 
. 
.   /* if python path is not set, use current folder */
.   if mi("$PYTHONPATH") {
 10. 
.       /* set path to current folder */
.       local path .
 11.   }
 12.   else {
 13.       local path $PYTHONPATH
 14.   }
 15. 
.   /* check python file existence */
.   cap confirm file `path'/table_from_tpl.py
 16.   if _rc {
 17.       display as error "ERROR: table_from_tpl.py not found. Put in current
>  folder or folder defined by global \$PYTHONPATH"
 18.       error -1
 19.   }
 20. 
.   /* deal with addstars/dropstars parameters */
.   if "`addstars'" == "addstars" {
 21.     local star_param "--add-stars"
 22.   }
 23.   if "`dropstars'" == "dropstars" {
 24.     local star_param "--drop-stars"
 25.   }
 26. 
.   local pycommand `path'/table_from_tpl.py -t `template' -r `replacement' -o 
> `output' `v' `star_param'
 27.   if !mi("`verbose'") {
 28.       di `"Running `pycommand' "'
 29.   }
 30. 
.   shell python `pycommand'
 31.   cap confirm file `output'
 32.   if !_rc {
 33.     display "Created `output'."
 34.   }
 35.   else {
 36.     display "Could not create `output'."
 37.     error 1
 38.   }
 39. 
.   /* clean up the temporary file if star/nostar specified */
.   if !mi("`stars'") {
 40.     !rm $tmp/tpl_sed_tmp.tex
 41.   }
 42. }
 43. end

. /* *********** END program table_from_tpl ***********************************
> ****** */
. 
. /****************************************************************************
> ******/
. /* program append_to_file : Append a passed in string to a file              
>      */
. /****************************************************************************
> ******/
. cap prog drop append_to_file

. prog def append_to_file
  1. {
  2.   syntax using/, String(string)
  3. 
.   cap file close fh
  4.   file open fh using `using', write append
  5.   file write fh  `"`string'"'  _n
  6.   file close fh
  7. }
  8. end

. /* *********** END program append_to_file ***********************************
> ****** */
. 
. /****************************************************************************
> ******/
. /* program insert_into_file : Insert a key-value pair into a file            
>      */
. /*
> Assume "using" csv file take a key, value format, e.g.:
> 
> est1,3.544
> est2,3.234***
> ...
> 
> "est1" is the key. "3.544" is the value.
> 
> Example:
> 
> insert_into_file using $tmp/estimates.csv, key(est1) value(3.54493) format(%5
> .2f)
> 
> - if "est1" is not already in estimates file, it will be appended
> - if "est1" is already in estimates file, its value will be replaced with the
>  passed in parameter
> - estimates file will be created if it does not already exist
> 
> */
. 
. /****************************************************************************
> *******/
. cap prog drop insert_into_file

. prog def insert_into_file
  1. {
  2.   syntax using/, Key(string) Value(string) [Format(string) verbose]
  3. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
  4. 
.   /* get value in correct format (unless it's a string) */
.   if !mi(real("`value'")) {
  5.     local value : di `format' `value'
  6.   }
  7.   else {
  8.     local value `value'
  9.   }
 10. 
.   /* confirm file handles are closed */
.   cap file close fout
 11.   cap file close fin
 12. 
.   /* create a temporary file for writing */
.   tempfile tempfile
 13.   qui file open fout using `tempfile', write replace
 14. 
.   /* if input file doesn't exist, create it and display a notification */
.   cap confirm file `using'
 15.   if _rc {
 16.     if !mi("`verbose'") {
 17.       di "Creating new file `using'..."
 18.     }
 19.   }
 20. 
.   /* else, open the input file and read the first line */
.   else {
 21.     file open fin using `using', read
 22. 
.     /* read the first line */
.     file read fin line
 23.   }
 24. 
.   /* store a flag indicating whether we found the line or not */
.   local found 0
 25. 
.   /* loop over all lines of the file */
.   while r(eof) == 0 {
 26. 
.     /* check if line matches the current key */
.     if regexm("`line'", "^`key',") {
 27. 
.       /* if verbose, show what we're replacing  */
.       if !mi("`verbose'") {
 28.         di `"Replacing "`line'" with "`key',`value'"..."'
 29.       }
 30.       local found 1
 31. 
.       /* replace the line with key,value */
.       local line `key',`value'
 32.     }
 33. 
.     /* write the line to the output file */
.     file write fout "`line'" _n
 34. 
.     /* read the next line */
.     file read fin line
 35.   }
 36. 
.   /* if we didn't find this key, append it to the end */
.   if `found' == 0 {
 37.     file write fout "`key',`value'" _n
 38.   }
 39. 
.   /* close input and output files */
.   cap file close fin
 40.   file close fout
 41. 
.   /* copy the temporary file to the `using` filename */
.   copy `tempfile' `using', replace
 42. }
 43. end

. /* *********** END program insert_into_file *********************************
> ******** */
. 
. /****************************************************************************
> ******/
. /* program count_stars : return a string with the right number of stars      
>      */
. /****************************************************************************
> ******/
. cap prog drop count_stars

. prog def count_stars, rclass
  1. {
  2.   syntax, p(real)
  3.   local star = ""
  4.   if `p' <= 0.1  local star = "*"
  5.   if `p' <= 0.05 local star = "**"
  6.   if `p' <= 0.01 local star = "***"
  7.   return local stars = "`star'"
  8. }
  9. end

. /* *********** END program count_stars **************************************
> *** */
. 
. 
end of do-file
. }

. global PYTHONPATH = "code"

. 
end of do-file
. }

. clear 

. version 13

. 
. /*****************************************/
. /* looks at effect of social distancing  */
. /*****************************************/
. use "$int/public_data" , clear

. keep if shifty != .
(0 observations deleted)

. la var shifty "Inconsistent"

. 
. assert !mi(number_others) 

. 
. 
. /* standardize relative to control group */
. sum number_others if shifty == 0 

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
number_oth~s |        933    1.632369    2.566895          0         10

. gen social_distancing_index_std = - (number_others - `r(mean)') / (`r(sd)') 

. 
. gen will_see_others = number_others > 0 

. 
. /* data task control */
. assert !mi(index_covid) | !mi(index_metro) 

. gen data_task_covid = index_covid != . 

. 
. foreach outcome in social_distancing_index_std will_see_others {
  2.     local will_see_othersnm = "1(plans to see others)"   
  3.     local social_distancing_index_stdnm = "\shortstack{Social distancing \
> \ index (sd)}"
  4.   
.     eststo clear
  5.   
.     eststo: reghdfe `outcome' shifty  , absorb(stratum) vce(rob)
  6.     estadd local data "No"
  7.     estadd local sample "All"
  8. 
.     eststo: reghdfe `outcome' shifty data_task_covid , absorb(stratum) vce(ro
> b)
  9.     estadd local data "\$\checkmark\$"
 10.     estadd local sample "All"
 11. 
.     eststo: reghdfe `outcome' shifty data_task_covid if priors_above_info == 
> 1 , absorb(stratum) vce(rob)
 12.     estadd local data "\$\checkmark\$"
 13.     estadd local sample "Priors above info"
 14. 
.     eststo: reghdfe `outcome' shifty data_task_covid if priors_at_info == 1 ,
>  absorb(stratum) vce(rob)
 15.     estadd local data "\$\checkmark\$"
 16.     estadd local sample "Priors at info"
 17. 
.     eststo: reghdfe `outcome' shifty data_task_covid if priors_below_info == 
> 1 , absorb(stratum) vce(rob)
 18.     estadd local data "\$\checkmark\$"
 19.     estadd local sample "Priors below info"
 20.   
.     esttab using out/`outcome'_distancing.tex, ///
>         label drop(_cons data_task_covid) mlabel("``outcome'nm'" ///
>         "``outcome'nm'" ///
>         "``outcome'nm'" ///
>         "``outcome'nm'" ///
>         "``outcome'nm'" ) ///
>         scalars("data Data-task control" "sample Sample") replace se star(* 0
> .1 ** 0.05 *** 0.01)
 21. }
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   1,   1881) =       3.80
                                                  Prob > F        =     0.0513
                                                  R-squared       =     0.0932
                                                  Adj R-squared   =     0.0846
                                                  Within R-sq.    =     0.0020
                                                  Root MSE        =     0.9194

------------------------------------------------------------------------------
             |               Robust
social_dis~d |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |   .0828005   .0424575     1.95   0.051    -.0004683    .1660693
       _cons |  -.0045161   .0312706    -0.14   0.885    -.0658448    .0568125
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est1 stored)

added macro:
               e(data) : "No"

added macro:
             e(sample) : "All"
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   2,   1880) =       2.09
                                                  Prob > F        =     0.1236
                                                  R-squared       =     0.0935
                                                  Adj R-squared   =     0.0843
                                                  Within R-sq.    =     0.0023
                                                  Root MSE        =     0.9195

------------------------------------------------------------------------------
             |               Robust
social_dis~d |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |   .0824523   .0424494     1.94   0.052    -.0008005    .1657051
data_task_~d |   .0292691   .0427515     0.68   0.494    -.0545763    .1131145
       _cons |  -.0184497   .0378835    -0.49   0.626    -.0927479    .0558484
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est2 stored)

added macro:
               e(data) : "$\checkmark$"

added macro:
             e(sample) : "All"
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =        447
Absorbing 1 HDFE group                            F(   2,    427) =       0.13
                                                  Prob > F        =     0.8770
                                                  R-squared       =     0.1023
                                                  Adj R-squared   =     0.0623
                                                  Within R-sq.    =     0.0007
                                                  Root MSE        =     0.8729

------------------------------------------------------------------------------
             |               Robust
social_dis~d |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |   .0441682   .0871719     0.51   0.613    -.1271712    .2155076
data_task_~d |   .0196133   .0857624     0.23   0.819    -.1489558    .1881823
       _cons |   .0980238   .0807312     1.21   0.225    -.0606561    .2567038
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est3 stored)

added macro:
               e(data) : "$\checkmark$"

added macro:
             e(sample) : "Priors above info"
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =        544
Absorbing 1 HDFE group                            F(   2,    524) =       3.15
                                                  Prob > F        =     0.0438
                                                  R-squared       =     0.1523
                                                  Adj R-squared   =     0.1216
                                                  Within R-sq.    =     0.0107
                                                  Root MSE        =     0.8793

------------------------------------------------------------------------------
             |               Robust
social_dis~d |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |   .1104136   .0770567     1.43   0.152    -.0409644    .2617915
data_task_~d |   .1431493    .076023     1.88   0.060    -.0061979    .2924966
       _cons |  -.0115831   .0724268    -0.16   0.873    -.1538657    .1306994
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est4 stored)

added macro:
               e(data) : "$\checkmark$"

added macro:
             e(sample) : "Priors at info"
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =        909
Absorbing 1 HDFE group                            F(   2,    889) =       0.67
                                                  Prob > F        =     0.5129
                                                  R-squared       =     0.0835
                                                  Adj R-squared   =     0.0640
                                                  Within R-sq.    =     0.0015
                                                  Root MSE        =     0.9623

------------------------------------------------------------------------------
             |               Robust
social_dis~d |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |   .0683016   .0635185     1.08   0.283    -.0563621    .1929654
data_task_~d |  -.0282158   .0663577    -0.43   0.671    -.1584518    .1020201
       _cons |  -.0740041   .0546451    -1.35   0.176    -.1812525    .0332443
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est5 stored)

added macro:
               e(data) : "$\checkmark$"

added macro:
             e(sample) : "Priors below info"
(note: file out/social_distancing_index_std_distancing.tex not found)
(output written to out/social_distancing_index_std_distancing.tex)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   1,   1881) =       1.06
                                                  Prob > F        =     0.3027
                                                  R-squared       =     0.0596
                                                  Adj R-squared   =     0.0506
                                                  Within R-sq.    =     0.0006
                                                  Root MSE        =     0.4859

------------------------------------------------------------------------------
             |               Robust
will_see_o~s |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.0230495     .02236    -1.03   0.303    -.0669025    .0208034
       _cons |   .4743626   .0158804    29.87   0.000     .4432175    .5055076
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est1 stored)

added macro:
               e(data) : "No"

added macro:
             e(sample) : "All"
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   2,   1880) =       0.66
                                                  Prob > F        =     0.5145
                                                  R-squared       =     0.0598
                                                  Adj R-squared   =     0.0503
                                                  Within R-sq.    =     0.0007
                                                  Root MSE        =     0.4860

------------------------------------------------------------------------------
             |               Robust
will_see_o~s |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |   -.022912   .0223661    -1.02   0.306     -.066777     .020953
data_task_~d |  -.0115648   .0224455    -0.52   0.606    -.0555855    .0324559
       _cons |    .479868   .0192045    24.99   0.000     .4422037    .5175324
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est2 stored)

added macro:
               e(data) : "$\checkmark$"

added macro:
             e(sample) : "All"
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =        447
Absorbing 1 HDFE group                            F(   2,    427) =       0.05
                                                  Prob > F        =     0.9543
                                                  R-squared       =     0.1042
                                                  Adj R-squared   =     0.0643
                                                  Within R-sq.    =     0.0002
                                                  Root MSE        =     0.4745

------------------------------------------------------------------------------
             |               Robust
will_see_o~s |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.0043082   .0454792    -0.09   0.925    -.0936992    .0850827
data_task_~d |  -.0134034   .0459733    -0.29   0.771    -.1037656    .0769588
       _cons |   .4084599   .0379545    10.76   0.000      .333859    .4830608
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est3 stored)

added macro:
               e(data) : "$\checkmark$"

added macro:
             e(sample) : "Priors above info"
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =        544
Absorbing 1 HDFE group                            F(   2,    524) =       0.34
                                                  Prob > F        =     0.7133
                                                  R-squared       =     0.0851
                                                  Adj R-squared   =     0.0519
                                                  Within R-sq.    =     0.0013
                                                  Root MSE        =     0.4790

------------------------------------------------------------------------------
             |               Robust
will_see_o~s |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.0010193   .0416008    -0.02   0.980    -.0827442    .0807055
data_task_~d |   -.033996   .0413574    -0.82   0.411    -.1152426    .0472507
       _cons |   .4252965   .0364535    11.67   0.000     .3536835    .4969096
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est4 stored)

added macro:
               e(data) : "$\checkmark$"

added macro:
             e(sample) : "Priors at info"
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =        909
Absorbing 1 HDFE group                            F(   2,    889) =       0.95
                                                  Prob > F        =     0.3879
                                                  R-squared       =     0.0535
                                                  Adj R-squared   =     0.0333
                                                  Within R-sq.    =     0.0021
                                                  Root MSE        =     0.4912

------------------------------------------------------------------------------
             |               Robust
will_see_o~s |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |    -.04499   .0326849    -1.38   0.169    -.1091386    .0191585
data_task_~d |   .0005231   .0330872     0.02   0.987    -.0644151    .0654613
       _cons |   .5480599   .0278129    19.71   0.000     .4934732    .6026465
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est5 stored)

added macro:
               e(data) : "$\checkmark$"

added macro:
             e(sample) : "Priors below info"
(note: file out/will_see_others_distancing.tex not found)
(output written to out/will_see_others_distancing.tex)

. 
. la var gov_index_post_std "Government credibility index" 

. 
. eststo clear

. eststo: ivreghdfe will_see_others (gov_index_post_std = shifty) gov_index_pre
> _std data_task_covid, absorb(stratum) rob
(MWFE estimator converged in 1 iterations)

IV (2SLS) estimation
--------------------

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity

                                                      Number of obs =     1900
                                                      F(  3,  1879) =     0.79
                                                      Prob > F      =   0.4999
Total (centered) SS     =  444.4350913                Centered R2   =  -0.1828
Total (uncentered) SS   =  444.4350913                Uncentered R2 =  -0.1828
Residual SS             =  525.6704681                Root MSE      =    .5289

------------------------------------------------------------------------------
             |               Robust
will_see_o~s |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
gov_in~t_std |   .6076903   .6485117     0.94   0.349    -.6641886    1.879569
gov_in~e_std |  -.5024248   .5076195    -0.99   0.322    -1.497982    .4931324
data_task_~d |  -.0149181    .024761    -0.60   0.547    -.0634802    .0336439
------------------------------------------------------------------------------
Underidentification test (Kleibergen-Paap rk LM statistic):              5.831
                                                   Chi-sq(1) P-val =    0.0157
------------------------------------------------------------------------------
Weak identification test (Cragg-Donald Wald F statistic):                5.790
                         (Kleibergen-Paap rk Wald F statistic):          5.785
Stock-Yogo weak ID test critical values: 10% maximal IV size             16.38
                                         15% maximal IV size              8.96
                                         20% maximal IV size              6.66
                                         25% maximal IV size              5.53
Source: Stock-Yogo (2005).  Reproduced by permission.
NB: Critical values are for Cragg-Donald F statistic and i.i.d. errors.
------------------------------------------------------------------------------
Hansen J statistic (overidentification test of all instruments):         0.000
                                                 (equation exactly identified)
------------------------------------------------------------------------------
Instrumented:         gov_index_post_std
Included instruments: gov_index_pre_std data_task_covid
Excluded instruments: shifty
Partialled-out:       _cons
                      nb: total SS, model F and R2s are after partialling-out;
                          any small-sample adjustments include partialled-out
                          variables in regressor count K
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est1 stored)

. estadd local data "\$\checkmark\$"

added macro:
               e(data) : "$\checkmark$"

. estadd local sample "All"

added macro:
             e(sample) : "All"

. 
. eststo: ivreghdfe social_distancing_index_std (gov_index_post_std = shifty) g
> ov_index_pre_std data_task_covid, absorb(stratum) rob
(MWFE estimator converged in 1 iterations)

IV (2SLS) estimation
--------------------

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity

                                                      Number of obs =     1900
                                                      F(  3,  1879) =     1.53
                                                      Prob > F      =   0.2047
Total (centered) SS     =  1593.104441                Centered R2   =  -0.6348
Total (uncentered) SS   =  1593.104441                Uncentered R2 =  -0.6348
Residual SS             =  2604.422248                Root MSE      =    1.177

------------------------------------------------------------------------------
             |               Robust
social_dis~d |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
gov_in~t_std |  -2.188672   1.448218    -1.51   0.131    -5.028956    .6516126
gov_in~e_std |   1.789552   1.134851     1.58   0.115    -.4361496    4.015253
data_task_~d |   .0415866   .0556668     0.75   0.455    -.0675886    .1507618
------------------------------------------------------------------------------
Underidentification test (Kleibergen-Paap rk LM statistic):              5.831
                                                   Chi-sq(1) P-val =    0.0157
------------------------------------------------------------------------------
Weak identification test (Cragg-Donald Wald F statistic):                5.790
                         (Kleibergen-Paap rk Wald F statistic):          5.785
Stock-Yogo weak ID test critical values: 10% maximal IV size             16.38
                                         15% maximal IV size              8.96
                                         20% maximal IV size              6.66
                                         25% maximal IV size              5.53
Source: Stock-Yogo (2005).  Reproduced by permission.
NB: Critical values are for Cragg-Donald F statistic and i.i.d. errors.
------------------------------------------------------------------------------
Hansen J statistic (overidentification test of all instruments):         0.000
                                                 (equation exactly identified)
------------------------------------------------------------------------------
Instrumented:         gov_index_post_std
Included instruments: gov_index_pre_std data_task_covid
Excluded instruments: shifty
Partialled-out:       _cons
                      nb: total SS, model F and R2s are after partialling-out;
                          any small-sample adjustments include partialled-out
                          variables in regressor count K
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est2 stored)

. estadd local data "\$\checkmark\$"

added macro:
               e(data) : "$\checkmark$"

. estadd local sample "All"

added macro:
             e(sample) : "All"

. 
. esttab using out/iv_distancing.tex, ///
>     label drop(gov_index_pre_std data_task_covid) mlabel("1(plans to see othe
> rs)"  ///
>     "\shortstack{Social distancing \\ index (sd)}" ) scalars("data Data-task 
> control") replace se star(* 0.1 ** 0.05 *** 0.01)
(note: file out/iv_distancing.tex not found)
(output written to out/iv_distancing.tex)

. 
. 
. 
. 
end of do-file

. 
. /* Appendix: power figures */
. do code/power.do

. /****************************************************************************
> ************/
. /* This dofile creates a continuuous version for our main outcomes, per refer
> ee request */
. /****************************************************************************
> ************/
. if "`c(username)'" == "pierre-lucvautrey" {
.   do ~/documents/github/covid/SetGlobals.do
. }

. else{
.   do ../SetGlobals.do

. version 13

. * set the number of ri replications
. global reps 1000

. 
. /* Sets stata globals */
. global raw = "../data"

. global int = "../data"

. 
. if "`c(username)'" == "charlierafkin" {
.   global raw = "~/Dropbox (MIT)/COVID/data/raw_decrypted/"
.   global int = "~/Dropbox (MIT)/COVID/data/intermediate/"
. }

. if "`c(username)'" == "pierre-lucvautrey" {
.   global raw = "~/Dropbox (MIT)/COVID/data/raw_decrypted/"
.   global int = "~/Dropbox (MIT)/COVID/data/intermediate/"
. }

. 
. global navy `" "51 122 183" "'

. global green `" "92 184 92" "'

. global ltblue `" "91 192 222" "'

. global red `" "217 83 79" "'

. global orange `" "240 173 78" "'

. 
. qui {

. 
. if "`c(username)'" == "pierre-lucvautrey" {
.   do ~/documents/github/COVID/programs.do
. }

. else{
.   do ../programs.do

. /*
> 
> Convert eps to pdf in mac Stata
> Author: CR
> Date: April 2018
> 
> */
. 
. 
. capture pr drop conversion

. capture pr define conversion

. 
. capture pr drop grout

. capture pr define grout

. 
. /******************************************/
. /* /\***** deflate cpi, base year *****\/ */
. /******************************************/
. capture pr drop get_cpi_deflator

. capture pr define get_cpi_deflator

. 
. 
. 
. 
. 
. 
. 
. /* other graphing/output programs that we want */
. 
. /****************************************************************************
> *********/
. /* program store_est_tpl : store b, se, p-values in format suitable for table
> _to_tpl */
. /****************************************************************************
> *********/
. cap prog drop store_est_tpl

. prog def store_est_tpl
  1. {
  2.   syntax using/,  coef(string) name(string) [format(string) beta se p n r2
>  all]
  3. 
.   /* turn on all flags if `all' is specified */
.   if !mi("`all'") {
  4.     local beta beta
  5.     local se se
  6.     local p p
  7.     local n n
  8.     local r2 r2
  9.   }
 10. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
 11. 
.   /* manage beta */
.   if !mi("`beta'") {
 12. 
.     /* store beta in the desired format */
.     local b3:  di `format' _b["`coef'"]
 13.     test `coef' = 0
 14.     local pvalue = `r(p)'
 15.     /* write p value (only makes sense if beta also specified) */
.     if !mi("`p'") {
 16.       insert_into_file using `using', key("`name'_p") value(" `pvalue'") f
> ormat("%5.2f")
 17.     }
 18. 
.     /* write beta to file */
.     insert_into_file using `using', key("`name'_beta") value(" `b3'") format(
> "`format'")
 19. 
.     /* count stars on the p and create starbeta */
.     count_stars, p(`pvalue')
 20.     insert_into_file using `using', key("`name'_starbeta") value(" `b3'`r(
> stars)'") format("`format'")
 21.   }
 22. 
.   /* manage se */
.   if !mi("`se'") {
 23.     local se3:  di `format' _se["`coef'"]
 24.     insert_into_file using `using', key("`name'_se") value(" `se3'")
 25.   }
 26. 
.   /* manage n */
.   if !mi("`n'") {
 27.     insert_into_file using `using', key("`name'_n") value(" `e(N)'") forma
> t("%1.0f")
 28.   }
 29. 
.   /* manage r2 */
.   if !mi("`r2'") {
 30.     insert_into_file using `using', key("`name'_r2") value(" `e(r2)'") for
> mat("%5.2f")
 31.   }
 32. }
 33. end

. /* *********** END program store_est_tpl ************************************
> ***** */
. 
. /****************************************************************************
> *********/
. /* program store_val_tpl : store value to a file with string and format      
>         */
. /****************************************************************************
> *********/
. cap prog drop store_val_tpl

. prog def store_val_tpl
  1. {
  2.   syntax using/,  Name(string) Value(string) [Format(string)]
  3. 
.   di `""store_val_tpl, name value format" is deprecated -- please use "insert
> _into_file, key value format" instead"'
  4. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
  5. 
.   /* get value in appropriate format (unless it's already a string) */
.   if !mi(real("`value'")) {
  6.     local v : di `format' `value'
  7.   }
  8.   else {
  9.     local v `value'
 10.   }
 11. 
.   /* write line to file */
.   append_to_file using `using', s("`name',`v'")
 12. }
 13. end

. /* *********** END program store_val_tpl ************************************
> ***** */
. 
. /****************************************************************************
> ***********************/
. /* program table_from_tpl : Create a table from a stored estimates file and a
>  .tex table template  */
. /****************************************************************************
> ***********************/
. cap prog drop table_from_tpl

. prog def table_from_tpl
  1. {
  2.   syntax, Template(string) Replacement(string) Output(string) [Verbose add
> stars dropstars]
  3. 
.   /* set up verbose flag */
.   if !mi("`verbose'") {
  4.       local v "-v"
  5.   }
  6.   else {
  7.       local v
  8.   }
  9. 
. 
.   /* if python path is not set, use current folder */
.   if mi("$PYTHONPATH") {
 10. 
.       /* set path to current folder */
.       local path .
 11.   }
 12.   else {
 13.       local path $PYTHONPATH
 14.   }
 15. 
.   /* check python file existence */
.   cap confirm file `path'/table_from_tpl.py
 16.   if _rc {
 17.       display as error "ERROR: table_from_tpl.py not found. Put in current
>  folder or folder defined by global \$PYTHONPATH"
 18.       error -1
 19.   }
 20. 
.   /* deal with addstars/dropstars parameters */
.   if "`addstars'" == "addstars" {
 21.     local star_param "--add-stars"
 22.   }
 23.   if "`dropstars'" == "dropstars" {
 24.     local star_param "--drop-stars"
 25.   }
 26. 
.   local pycommand `path'/table_from_tpl.py -t `template' -r `replacement' -o 
> `output' `v' `star_param'
 27.   if !mi("`verbose'") {
 28.       di `"Running `pycommand' "'
 29.   }
 30. 
.   shell python `pycommand'
 31.   cap confirm file `output'
 32.   if !_rc {
 33.     display "Created `output'."
 34.   }
 35.   else {
 36.     display "Could not create `output'."
 37.     error 1
 38.   }
 39. 
.   /* clean up the temporary file if star/nostar specified */
.   if !mi("`stars'") {
 40.     !rm $tmp/tpl_sed_tmp.tex
 41.   }
 42. }
 43. end

. /* *********** END program table_from_tpl ***********************************
> ****** */
. 
. /****************************************************************************
> ******/
. /* program append_to_file : Append a passed in string to a file              
>      */
. /****************************************************************************
> ******/
. cap prog drop append_to_file

. prog def append_to_file
  1. {
  2.   syntax using/, String(string)
  3. 
.   cap file close fh
  4.   file open fh using `using', write append
  5.   file write fh  `"`string'"'  _n
  6.   file close fh
  7. }
  8. end

. /* *********** END program append_to_file ***********************************
> ****** */
. 
. /****************************************************************************
> ******/
. /* program insert_into_file : Insert a key-value pair into a file            
>      */
. /*
> Assume "using" csv file take a key, value format, e.g.:
> 
> est1,3.544
> est2,3.234***
> ...
> 
> "est1" is the key. "3.544" is the value.
> 
> Example:
> 
> insert_into_file using $tmp/estimates.csv, key(est1) value(3.54493) format(%5
> .2f)
> 
> - if "est1" is not already in estimates file, it will be appended
> - if "est1" is already in estimates file, its value will be replaced with the
>  passed in parameter
> - estimates file will be created if it does not already exist
> 
> */
. 
. /****************************************************************************
> *******/
. cap prog drop insert_into_file

. prog def insert_into_file
  1. {
  2.   syntax using/, Key(string) Value(string) [Format(string) verbose]
  3. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
  4. 
.   /* get value in correct format (unless it's a string) */
.   if !mi(real("`value'")) {
  5.     local value : di `format' `value'
  6.   }
  7.   else {
  8.     local value `value'
  9.   }
 10. 
.   /* confirm file handles are closed */
.   cap file close fout
 11.   cap file close fin
 12. 
.   /* create a temporary file for writing */
.   tempfile tempfile
 13.   qui file open fout using `tempfile', write replace
 14. 
.   /* if input file doesn't exist, create it and display a notification */
.   cap confirm file `using'
 15.   if _rc {
 16.     if !mi("`verbose'") {
 17.       di "Creating new file `using'..."
 18.     }
 19.   }
 20. 
.   /* else, open the input file and read the first line */
.   else {
 21.     file open fin using `using', read
 22. 
.     /* read the first line */
.     file read fin line
 23.   }
 24. 
.   /* store a flag indicating whether we found the line or not */
.   local found 0
 25. 
.   /* loop over all lines of the file */
.   while r(eof) == 0 {
 26. 
.     /* check if line matches the current key */
.     if regexm("`line'", "^`key',") {
 27. 
.       /* if verbose, show what we're replacing  */
.       if !mi("`verbose'") {
 28.         di `"Replacing "`line'" with "`key',`value'"..."'
 29.       }
 30.       local found 1
 31. 
.       /* replace the line with key,value */
.       local line `key',`value'
 32.     }
 33. 
.     /* write the line to the output file */
.     file write fout "`line'" _n
 34. 
.     /* read the next line */
.     file read fin line
 35.   }
 36. 
.   /* if we didn't find this key, append it to the end */
.   if `found' == 0 {
 37.     file write fout "`key',`value'" _n
 38.   }
 39. 
.   /* close input and output files */
.   cap file close fin
 40.   file close fout
 41. 
.   /* copy the temporary file to the `using` filename */
.   copy `tempfile' `using', replace
 42. }
 43. end

. /* *********** END program insert_into_file *********************************
> ******** */
. 
. /****************************************************************************
> ******/
. /* program count_stars : return a string with the right number of stars      
>      */
. /****************************************************************************
> ******/
. cap prog drop count_stars

. prog def count_stars, rclass
  1. {
  2.   syntax, p(real)
  3.   local star = ""
  4.   if `p' <= 0.1  local star = "*"
  5.   if `p' <= 0.05 local star = "**"
  6.   if `p' <= 0.01 local star = "***"
  7.   return local stars = "`star'"
  8. }
  9. end

. /* *********** END program count_stars **************************************
> *** */
. 
. 
end of do-file
. }

. global PYTHONPATH = "code"

. 
end of do-file
. }

. clear 

. version 13

.  
. use "$int/public_data" , clear

. destring stratum, replace
stratum: all characters numeric; replaced as byte

. 
. /**************************/
. /* Panel A: main outcomes */
. /**************************/
. eststo clear

. 
. gen interaction = ln_deaths_pre * (shifty == 1)

. la var interaction "ln(deaths) \$ \times \$ Inconsistent"

. la var shifty "Inconsistent"

. 
. eststo: reghdfe update_covid interaction shifty ln_deaths_pre, absorb(stratum
> ) vce(rob)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   3,   1879) =       5.63
                                                  Prob > F        =     0.0008
                                                  R-squared       =     0.0402
                                                  Adj R-squared   =     0.0300
                                                  Within R-sq.    =     0.0097
                                                  Root MSE        =     0.4875

------------------------------------------------------------------------------
             |               Robust
update_covid |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
 interaction |  -.0119766    .011785    -1.02   0.310    -.0350896    .0111364
      shifty |   .0945784   .1340355     0.71   0.481    -.1682957    .3574525
ln_deaths_~e |  -.0146202   .0085205    -1.72   0.086    -.0313309    .0020905
       _cons |   .6115335   .0965175     6.34   0.000     .4222408    .8008263
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est1 stored)

. matrix mat = r(table)

. estadd local sample "All"

added macro:
             e(sample) : "All"

. local p  : di %5.3f mat[4,1]

. estadd scalar p_value = `p' 

added scalar:
            e(p_value) =  .31

. 
. eststo: reghdfe update_mag_deaths interaction shifty ln_deaths_pre , absorb(s
> tratum) vce(rob)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   3,   1879) =       1.79
                                                  Prob > F        =     0.1465
                                                  R-squared       =     0.0384
                                                  Adj R-squared   =     0.0282
                                                  Within R-sq.    =     0.0034
                                                  Root MSE        =     5.4179

------------------------------------------------------------------------------
             |               Robust
update_mag~s |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
 interaction |  -.1159881    .140178    -0.83   0.408     -.390909    .1589329
      shifty |   .7839929   1.538882     0.51   0.610    -2.234105    3.802091
ln_deaths_~e |   .1345437   .1000089     1.35   0.179    -.0615965    .3306838
       _cons |   3.344188   1.090147     3.07   0.002     1.206163    5.482214
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est2 stored)

. matrix mat = r(table)

. estadd local sample "All"

added macro:
             e(sample) : "All"

. local p  : di %5.3f mat[4,1]

. estadd scalar p_value = `p' 

added scalar:
            e(p_value) =  .408

. 
. eststo: reghdfe gov_index_post_std  interaction shifty gov_index_pre_std ln_d
> eaths_pre, absorb(stratum) vce(rob)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   4,   1878) =     609.44
                                                  Prob > F        =     0.0000
                                                  R-squared       =     0.6307
                                                  Adj R-squared   =     0.6266
                                                  Within R-sq.    =     0.5665
                                                  Root MSE        =     0.3390

------------------------------------------------------------------------------
             |               Robust
gov_in~t_std |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
 interaction |  -.0005541   .0084648    -0.07   0.948    -.0171554    .0160473
      shifty |     -.0309   .0959545    -0.32   0.747    -.2190886    .1572887
gov_in~e_std |   .7811469   .0159932    48.84   0.000     .7497805    .8125132
ln_deaths_~e |  -.0068809   .0061233    -1.12   0.261      -.01889    .0051282
       _cons |   .0774389   .0695657     1.11   0.266    -.0589952    .2138731
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est3 stored)

. matrix mat = r(table)

. estadd local sample "All"

added macro:
             e(sample) : "All"

. local p  : di %5.3f mat[4,1]

. estadd scalar p_value = `p' 

added scalar:
            e(p_value) =  .948

. 
. /**** only below certain level ****/
. eststo: reghdfe update_covid interaction shifty ln_deaths_pre if deaths_pre <
>  1000000, absorb(stratum) vce(rob)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,762
Absorbing 1 HDFE group                            F(   3,   1741) =       8.15
                                                  Prob > F        =     0.0000
                                                  R-squared       =     0.0463
                                                  Adj R-squared   =     0.0354
                                                  Within R-sq.    =     0.0160
                                                  Root MSE        =     0.4857

------------------------------------------------------------------------------
             |               Robust
update_covid |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
 interaction |  -.0165581     .01423    -1.16   0.245    -.0444677    .0113516
      shifty |   .1398428   .1578209     0.89   0.376    -.1696957    .4493813
ln_deaths_~e |  -.0230422   .0102529    -2.25   0.025    -.0431516   -.0029329
       _cons |   .6961213   .1133348     6.14   0.000     .4738346    .9184079
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est4 stored)

. matrix mat = r(table)

. estadd local sample "Restricted"

added macro:
             e(sample) : "Restricted"

. local p  : di %5.3f mat[4,1]

. estadd scalar p_value = `p' 

added scalar:
            e(p_value) =  .245

. 
. eststo: reghdfe update_mag_deaths interaction shifty ln_deaths_pre if deaths_
> pre < 1000000 , absorb(stratum) vce(rob)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,762
Absorbing 1 HDFE group                            F(   3,   1741) =       2.45
                                                  Prob > F        =     0.0616
                                                  R-squared       =     0.0380
                                                  Adj R-squared   =     0.0270
                                                  Within R-sq.    =     0.0046
                                                  Root MSE        =     5.2107

------------------------------------------------------------------------------
             |               Robust
update_mag~s |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
 interaction |   -.138532   .1485306    -0.93   0.351    -.4298492    .1527852
      shifty |   .9848507   1.618139     0.61   0.543     -2.18885    4.158551
ln_deaths_~e |  -.0422863   .1030793    -0.41   0.682    -.2444585    .1598859
       _cons |   5.133675    1.11688     4.60   0.000     2.943107    7.324243
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est5 stored)

. matrix mat = r(table)

. estadd local sample "Restricted"

added macro:
             e(sample) : "Restricted"

. local p  : di %5.3f mat[4,1]

. estadd scalar p_value = `p' 

added scalar:
            e(p_value) =  .351

. 
. eststo: reghdfe gov_index_post_std  interaction shifty gov_index_pre_std ln_d
> eaths_pre if deaths_pre < 1000000, absorb(stratum) vce(rob)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,762
Absorbing 1 HDFE group                            F(   4,   1740) =     586.28
                                                  Prob > F        =     0.0000
                                                  R-squared       =     0.6420
                                                  Adj R-squared   =     0.6376
                                                  Within R-sq.    =     0.5764
                                                  Root MSE        =     0.3331

------------------------------------------------------------------------------
             |               Robust
gov_in~t_std |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
 interaction |  -.0112822   .0095686    -1.18   0.239    -.0300493    .0074849
      shifty |   .0748729   .1066454     0.70   0.483    -.1342937    .2840394
gov_in~e_std |   .7852279   .0163763    47.95   0.000     .7531086    .8173473
ln_deaths_~e |   .0011193    .006973     0.16   0.872    -.0125571    .0147957
       _cons |  -.0004006   .0777879    -0.01   0.996    -.1529682    .1521669
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est6 stored)

. matrix mat = r(table)

. estadd local sample "Restricted"

added macro:
             e(sample) : "Restricted"

. local p  : di %5.3f mat[4,1]

. estadd scalar p_value = `p' 

added scalar:
            e(p_value) =  .239

. 
. 
. 
. esttab using out/power_cts.tex, replace se label drop( ln_deaths_pre gov_inde
> x_pre_std _cons) star(* 0.1 ** 0.05 *** 0.01) ///
>     mlabel("\shortstack{Update propensity: \\ \$ 1(\text{post.} \neq \text{pr
> ior}) \$}" ///
>     "\shortstack{Update mag.: \\ \$ \ln(|\text{post.}-\text{prior}|+1) \$}" /
> //
>     "\shortstack{Govt. credibility \\ index}" ///
>     "\shortstack{Update propensity: \\ \$ 1(\text{post.} \neq \text{prior}) \
> $}" ///
>     "\shortstack{Update mag.: \\ \$ \ln(|\text{post.}-\text{prior}|+1) \$}" /
> //
>     "\shortstack{Govt. credibility \\ index}") sfmt( 0 2  ) ///
>     stats(N p_value sample  ,     ///
>     label( "Observations" "\$ p \$-value of interaction" "Sample" ) ///
>  )  
(note: file out/power_cts.tex not found)
(output written to out/power_cts.tex)

. 
. 
. 
. 
. /*******************************************************************/
. /* Panel B: main outcomes, excluding over 1 million deaths in pre  */
. /*******************************************************************/
. 
end of do-file

. 
. /* Data appendix tables */
. do code/data_appendix.do

. /****************************************************************************
> **/
. /* This dofile creates versions of the main check  in the data appendix where
>  */
. /* we winsorize deaths updating at several different places                  
>  */
. /*****************************************************/
. if "`c(username)'" == "pierre-lucvautrey" {
.   do ~/Documents/Github/COVID/SetGlobals.do
. }

. else{
.   do ../SetGlobals.do

. version 13

. * set the number of ri replications
. global reps 1000

. 
. /* Sets stata globals */
. global raw = "../data"

. global int = "../data"

. 
. if "`c(username)'" == "charlierafkin" {
.   global raw = "~/Dropbox (MIT)/COVID/data/raw_decrypted/"
.   global int = "~/Dropbox (MIT)/COVID/data/intermediate/"
. }

. if "`c(username)'" == "pierre-lucvautrey" {
.   global raw = "~/Dropbox (MIT)/COVID/data/raw_decrypted/"
.   global int = "~/Dropbox (MIT)/COVID/data/intermediate/"
. }

. 
. global navy `" "51 122 183" "'

. global green `" "92 184 92" "'

. global ltblue `" "91 192 222" "'

. global red `" "217 83 79" "'

. global orange `" "240 173 78" "'

. 
. qui {

. 
. if "`c(username)'" == "pierre-lucvautrey" {
.   do ~/documents/github/COVID/programs.do
. }

. else{
.   do ../programs.do

. /*
> 
> Convert eps to pdf in mac Stata
> Author: CR
> Date: April 2018
> 
> */
. 
. 
. capture pr drop conversion

. capture pr define conversion

. 
. capture pr drop grout

. capture pr define grout

. 
. /******************************************/
. /* /\***** deflate cpi, base year *****\/ */
. /******************************************/
. capture pr drop get_cpi_deflator

. capture pr define get_cpi_deflator

. 
. 
. 
. 
. 
. 
. 
. /* other graphing/output programs that we want */
. 
. /****************************************************************************
> *********/
. /* program store_est_tpl : store b, se, p-values in format suitable for table
> _to_tpl */
. /****************************************************************************
> *********/
. cap prog drop store_est_tpl

. prog def store_est_tpl
  1. {
  2.   syntax using/,  coef(string) name(string) [format(string) beta se p n r2
>  all]
  3. 
.   /* turn on all flags if `all' is specified */
.   if !mi("`all'") {
  4.     local beta beta
  5.     local se se
  6.     local p p
  7.     local n n
  8.     local r2 r2
  9.   }
 10. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
 11. 
.   /* manage beta */
.   if !mi("`beta'") {
 12. 
.     /* store beta in the desired format */
.     local b3:  di `format' _b["`coef'"]
 13.     test `coef' = 0
 14.     local pvalue = `r(p)'
 15.     /* write p value (only makes sense if beta also specified) */
.     if !mi("`p'") {
 16.       insert_into_file using `using', key("`name'_p") value(" `pvalue'") f
> ormat("%5.2f")
 17.     }
 18. 
.     /* write beta to file */
.     insert_into_file using `using', key("`name'_beta") value(" `b3'") format(
> "`format'")
 19. 
.     /* count stars on the p and create starbeta */
.     count_stars, p(`pvalue')
 20.     insert_into_file using `using', key("`name'_starbeta") value(" `b3'`r(
> stars)'") format("`format'")
 21.   }
 22. 
.   /* manage se */
.   if !mi("`se'") {
 23.     local se3:  di `format' _se["`coef'"]
 24.     insert_into_file using `using', key("`name'_se") value(" `se3'")
 25.   }
 26. 
.   /* manage n */
.   if !mi("`n'") {
 27.     insert_into_file using `using', key("`name'_n") value(" `e(N)'") forma
> t("%1.0f")
 28.   }
 29. 
.   /* manage r2 */
.   if !mi("`r2'") {
 30.     insert_into_file using `using', key("`name'_r2") value(" `e(r2)'") for
> mat("%5.2f")
 31.   }
 32. }
 33. end

. /* *********** END program store_est_tpl ************************************
> ***** */
. 
. /****************************************************************************
> *********/
. /* program store_val_tpl : store value to a file with string and format      
>         */
. /****************************************************************************
> *********/
. cap prog drop store_val_tpl

. prog def store_val_tpl
  1. {
  2.   syntax using/,  Name(string) Value(string) [Format(string)]
  3. 
.   di `""store_val_tpl, name value format" is deprecated -- please use "insert
> _into_file, key value format" instead"'
  4. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
  5. 
.   /* get value in appropriate format (unless it's already a string) */
.   if !mi(real("`value'")) {
  6.     local v : di `format' `value'
  7.   }
  8.   else {
  9.     local v `value'
 10.   }
 11. 
.   /* write line to file */
.   append_to_file using `using', s("`name',`v'")
 12. }
 13. end

. /* *********** END program store_val_tpl ************************************
> ***** */
. 
. /****************************************************************************
> ***********************/
. /* program table_from_tpl : Create a table from a stored estimates file and a
>  .tex table template  */
. /****************************************************************************
> ***********************/
. cap prog drop table_from_tpl

. prog def table_from_tpl
  1. {
  2.   syntax, Template(string) Replacement(string) Output(string) [Verbose add
> stars dropstars]
  3. 
.   /* set up verbose flag */
.   if !mi("`verbose'") {
  4.       local v "-v"
  5.   }
  6.   else {
  7.       local v
  8.   }
  9. 
. 
.   /* if python path is not set, use current folder */
.   if mi("$PYTHONPATH") {
 10. 
.       /* set path to current folder */
.       local path .
 11.   }
 12.   else {
 13.       local path $PYTHONPATH
 14.   }
 15. 
.   /* check python file existence */
.   cap confirm file `path'/table_from_tpl.py
 16.   if _rc {
 17.       display as error "ERROR: table_from_tpl.py not found. Put in current
>  folder or folder defined by global \$PYTHONPATH"
 18.       error -1
 19.   }
 20. 
.   /* deal with addstars/dropstars parameters */
.   if "`addstars'" == "addstars" {
 21.     local star_param "--add-stars"
 22.   }
 23.   if "`dropstars'" == "dropstars" {
 24.     local star_param "--drop-stars"
 25.   }
 26. 
.   local pycommand `path'/table_from_tpl.py -t `template' -r `replacement' -o 
> `output' `v' `star_param'
 27.   if !mi("`verbose'") {
 28.       di `"Running `pycommand' "'
 29.   }
 30. 
.   shell python `pycommand'
 31.   cap confirm file `output'
 32.   if !_rc {
 33.     display "Created `output'."
 34.   }
 35.   else {
 36.     display "Could not create `output'."
 37.     error 1
 38.   }
 39. 
.   /* clean up the temporary file if star/nostar specified */
.   if !mi("`stars'") {
 40.     !rm $tmp/tpl_sed_tmp.tex
 41.   }
 42. }
 43. end

. /* *********** END program table_from_tpl ***********************************
> ****** */
. 
. /****************************************************************************
> ******/
. /* program append_to_file : Append a passed in string to a file              
>      */
. /****************************************************************************
> ******/
. cap prog drop append_to_file

. prog def append_to_file
  1. {
  2.   syntax using/, String(string)
  3. 
.   cap file close fh
  4.   file open fh using `using', write append
  5.   file write fh  `"`string'"'  _n
  6.   file close fh
  7. }
  8. end

. /* *********** END program append_to_file ***********************************
> ****** */
. 
. /****************************************************************************
> ******/
. /* program insert_into_file : Insert a key-value pair into a file            
>      */
. /*
> Assume "using" csv file take a key, value format, e.g.:
> 
> est1,3.544
> est2,3.234***
> ...
> 
> "est1" is the key. "3.544" is the value.
> 
> Example:
> 
> insert_into_file using $tmp/estimates.csv, key(est1) value(3.54493) format(%5
> .2f)
> 
> - if "est1" is not already in estimates file, it will be appended
> - if "est1" is already in estimates file, its value will be replaced with the
>  passed in parameter
> - estimates file will be created if it does not already exist
> 
> */
. 
. /****************************************************************************
> *******/
. cap prog drop insert_into_file

. prog def insert_into_file
  1. {
  2.   syntax using/, Key(string) Value(string) [Format(string) verbose]
  3. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
  4. 
.   /* get value in correct format (unless it's a string) */
.   if !mi(real("`value'")) {
  5.     local value : di `format' `value'
  6.   }
  7.   else {
  8.     local value `value'
  9.   }
 10. 
.   /* confirm file handles are closed */
.   cap file close fout
 11.   cap file close fin
 12. 
.   /* create a temporary file for writing */
.   tempfile tempfile
 13.   qui file open fout using `tempfile', write replace
 14. 
.   /* if input file doesn't exist, create it and display a notification */
.   cap confirm file `using'
 15.   if _rc {
 16.     if !mi("`verbose'") {
 17.       di "Creating new file `using'..."
 18.     }
 19.   }
 20. 
.   /* else, open the input file and read the first line */
.   else {
 21.     file open fin using `using', read
 22. 
.     /* read the first line */
.     file read fin line
 23.   }
 24. 
.   /* store a flag indicating whether we found the line or not */
.   local found 0
 25. 
.   /* loop over all lines of the file */
.   while r(eof) == 0 {
 26. 
.     /* check if line matches the current key */
.     if regexm("`line'", "^`key',") {
 27. 
.       /* if verbose, show what we're replacing  */
.       if !mi("`verbose'") {
 28.         di `"Replacing "`line'" with "`key',`value'"..."'
 29.       }
 30.       local found 1
 31. 
.       /* replace the line with key,value */
.       local line `key',`value'
 32.     }
 33. 
.     /* write the line to the output file */
.     file write fout "`line'" _n
 34. 
.     /* read the next line */
.     file read fin line
 35.   }
 36. 
.   /* if we didn't find this key, append it to the end */
.   if `found' == 0 {
 37.     file write fout "`key',`value'" _n
 38.   }
 39. 
.   /* close input and output files */
.   cap file close fin
 40.   file close fout
 41. 
.   /* copy the temporary file to the `using` filename */
.   copy `tempfile' `using', replace
 42. }
 43. end

. /* *********** END program insert_into_file *********************************
> ******** */
. 
. /****************************************************************************
> ******/
. /* program count_stars : return a string with the right number of stars      
>      */
. /****************************************************************************
> ******/
. cap prog drop count_stars

. prog def count_stars, rclass
  1. {
  2.   syntax, p(real)
  3.   local star = ""
  4.   if `p' <= 0.1  local star = "*"
  5.   if `p' <= 0.05 local star = "**"
  6.   if `p' <= 0.01 local star = "***"
  7.   return local stars = "`star'"
  8. }
  9. end

. /* *********** END program count_stars **************************************
> *** */
. 
. 
end of do-file
. }

. global PYTHONPATH = "code"

. 
end of do-file
. }

. clear 

. version 13

. 
. use "$int/public_data" , clear 

. keep if !mi(shifty)
(0 observations deleted)

. destring stratum, replace
stratum: all characters numeric; replaced as byte

. la var shifty "Inconsistent" 

. /****************************************************************************
> /
. /* /\* generate various winsorizations: at p99 and p95 of control group *\/ *
> /
. /****************************************************************************
> /
. sum abs_mag_deaths if shifty == 0 , d

                       abs_mag_deaths
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%            0              0       Obs                 933
25%            0              0       Sum of Wgt.         933

50%            0                      Mean             902593
                        Largest       Std. Dev.      1.09e+07
75%        45000       9.95e+07
90%       190000       1.40e+08       Variance       1.18e+14
95%       400000       1.81e+08       Skewness        14.9675
99%      8250000       1.98e+08       Kurtosis       238.6126

. 
. eststo clear 

. foreach wins in 99 95 90 {
  2. 
.   sum abs_mag_deaths, d 
  3.   /* obtain the absolute outcome */ 
.   gen abs_mag_deaths_win_`wins' = min(abs_mag_deaths,`r(p`wins')')
  4. 
.   /* generate ln winsorize versions */
.   gen update_mag_deaths_win_`wins' = ln(abs_mag_deaths_win_`wins'+1) 
  5. 
.   eststo: reghdfe update_mag_deaths_win_`wins' shifty , absorb(stratum) vce(r
> )
  6.   mat matrix = r(table)
  7.   local pval: di %5.3f matrix[4,1]
  8.   estadd local pval `pval'
  9.   estadd local winsor `wins'   
 10. }

                       abs_mag_deaths
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%            0              0       Obs               1,900
25%            0              0       Sum of Wgt.       1,900

50%            0                      Mean            1087198
                        Largest       Std. Dev.      2.43e+07
75%        37000       1.40e+08
90%       150000       1.81e+08       Variance       5.88e+14
95%       397000       1.98e+08       Skewness       37.46056
99%      4692000       1.00e+09       Kurtosis       1519.581
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   1,   1881) =       4.02
                                                  Prob > F        =     0.0452
                                                  R-squared       =     0.0373
                                                  Adj R-squared   =     0.0281
                                                  Within R-sq.    =     0.0021
                                                  Root MSE        =     5.3777

------------------------------------------------------------------------------
             |               Robust
update_ma~99 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |   -.495733   .2473629    -2.00   0.045    -.9808675   -.0105985
       _cons |   4.818304   .1779246    27.08   0.000     4.469354    5.167254
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est1 stored)

added macro:
               e(pval) : "0.045"

added macro:
             e(winsor) : "99"

                       abs_mag_deaths
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%            0              0       Obs               1,900
25%            0              0       Sum of Wgt.       1,900

50%            0                      Mean            1087198
                        Largest       Std. Dev.      2.43e+07
75%        37000       1.40e+08
90%       150000       1.81e+08       Variance       5.88e+14
95%       397000       1.98e+08       Skewness       37.46056
99%      4692000       1.00e+09       Kurtosis       1519.581
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   1,   1881) =       4.15
                                                  Prob > F        =     0.0418
                                                  R-squared       =     0.0372
                                                  Adj R-squared   =     0.0280
                                                  Within R-sq.    =     0.0022
                                                  Root MSE        =     5.2850

------------------------------------------------------------------------------
             |               Robust
update_ma~95 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.4952556   .2431322    -2.04   0.042    -.9720928   -.0184185
       _cons |   4.762956   .1749661    27.22   0.000     4.419808    5.106104
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est2 stored)

added macro:
               e(pval) : "0.042"

added macro:
             e(winsor) : "95"

                       abs_mag_deaths
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%            0              0       Obs               1,900
25%            0              0       Sum of Wgt.       1,900

50%            0                      Mean            1087198
                        Largest       Std. Dev.      2.43e+07
75%        37000       1.40e+08
90%       150000       1.81e+08       Variance       5.88e+14
95%       397000       1.98e+08       Skewness       37.46056
99%      4692000       1.00e+09       Kurtosis       1519.581
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   1,   1881) =       4.08
                                                  Prob > F        =     0.0435
                                                  R-squared       =     0.0367
                                                  Adj R-squared   =     0.0275
                                                  Within R-sq.    =     0.0022
                                                  Root MSE        =     5.1879

------------------------------------------------------------------------------
             |               Robust
update_ma~90 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.4821682   .2386925    -2.02   0.044    -.9502982   -.0140383
       _cons |   4.688973   .1716365    27.32   0.000     4.352355    5.025591
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est3 stored)

added macro:
               e(pval) : "0.044"

added macro:
             e(winsor) : "90"

. 
. esttab using out/winsorize.tex, replace se label drop(_cons) star(* 0.1 ** 0.
> 05 *** 0.01) ///
>     mlabel("\shortstack{Update magnitude: \\ \$ \ln(|\text{posterior}-\text{p
> rior} | + 1) \$}" ///
>     "\shortstack{Update magnitude: \\ \$ \ln(|\text{posterior}-\text{prior} |
>  + 1) \$}" ///
> "\shortstack{Update magnitude: \\ \$ \ln(|\text{posterior}-\text{prior} | + 1
> ) \$}" ///    
>     ) scalars("pval \$p\$-value" "winsor Percentile for winsorization"  )
(note: file out/winsorize.tex not found)
(output written to out/winsorize.tex)

. 
. /*********************/
. /* attention checks  */
. /*********************/
. use "$int/public_data" , clear

. eststo clear 

. keep if !mi(shifty)
(0 observations deleted)

. destring stratum, replace
stratum: all characters numeric; replaced as byte

. la var shifty "Inconsistent"

. 
. /*** keep only people who pass BOTH attention checks ***/
. gen fails_7 = real(q112_16) != 7

. gen fails_puce = regexm(lower(q196),"puce") != 1

. assert (fails_7 == 0 | fails_puce == 0)

. keep if !fails_7 & !fails_puce
(198 observations deleted)

. 
. /********************************************************************/
. /* /\* This dofile compiles numbers in the text to add manually *\/ */
. /********************************************************************/
. cap pr drop writelatex

. pr define writelatex
  1. syntax, number(string) name(string) [digits(real 0)] 
  2. 
.     file write fh "\newcommand{\" 
  3.     file write fh "`name'" 
  4.     file write fh "}{"
  5.     file write fh %5.`digits'fc (`number') "}" _n
  6. 
. end 

. cap file close fh 

. file open fh using out/attention_estimates.tex , write replace
(note: file out/attention_estimates.tex not found)

. 
. /**** update magnitude ***/
. eststo: reghdfe update_mag_deaths shifty , absorb(stratum) vce(r)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,702
Absorbing 1 HDFE group                            F(   1,   1683) =       5.07
                                                  Prob > F        =     0.0245
                                                  R-squared       =     0.0420
                                                  Adj R-squared   =     0.0318
                                                  Within R-sq.    =     0.0030
                                                  Root MSE        =     5.4135

------------------------------------------------------------------------------
             |               Robust
update_mag~s |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.5917109   .2629014    -2.25   0.025    -1.107359   -.0760628
       _cons |   4.923771   .1897961    25.94   0.000      4.55151    5.296033
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est1 stored)

. matrix mat = r(table)

. local p: di %5.3f mat[4,1]

. 
. writelatex, number(_b[shifty]) digits(3) name(attentionupdatemagdeathsbeta)

. writelatex, number(_se[shifty]) digits(3) name(attentionupdatemagdeathsse)

. writelatex, number(`p') digits(3) name(attentionupdatemagdeathsp)

. 
. estadd local pval = `p'

added macro:
               e(pval) : ".025"

. 
. /*** update propensity ***/
. eststo: reghdfe update_covid shifty , absorb(stratum) vce(r)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,702
Absorbing 1 HDFE group                            F(   1,   1683) =       3.89
                                                  Prob > F        =     0.0486
                                                  R-squared       =     0.0348
                                                  Adj R-squared   =     0.0245
                                                  Within R-sq.    =     0.0023
                                                  Root MSE        =     0.4892

------------------------------------------------------------------------------
             |               Robust
update_covid |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.0469636   .0238016    -1.97   0.049    -.0936474   -.0002797
       _cons |   .4545655   .0170258    26.70   0.000     .4211716    .4879594
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est2 stored)

. matrix mat = r(table)

. local p: di %5.3f mat[4,1]

. local est = _b[shifty] * 100

. local se = _se[shifty] * 100

. 
. writelatex, number(`est') digits(1) name(attentionupdatecovidbeta)

. writelatex, number(`se') digits(1) name(attentionupdatecovidse)

. writelatex, number(`p') digits(3) name(attentionupdatecovidp)

. 
. estadd local pval = `p'

added macro:
               e(pval) : ".049"

. 
. 
. /*** gov index ***/
. eststo: reghdfe gov_index_post_std shifty gov_index_pre_std , absorb(stratum)
>  vce(r)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,702
Absorbing 1 HDFE group                            F(   2,   1682) =    1107.35
                                                  Prob > F        =     0.0000
                                                  R-squared       =     0.6406
                                                  Adj R-squared   =     0.6365
                                                  Within R-sq.    =     0.5726
                                                  Root MSE        =     0.3404

------------------------------------------------------------------------------
             |               Robust
gov_in~t_std |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.0303447    .016547    -1.83   0.067    -.0627995    .0021101
gov_in~e_std |   .7876378   .0167761    46.95   0.000     .7547335    .8205421
       _cons |   .0026632   .0117894     0.23   0.821    -.0204602    .0257866
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est3 stored)

. matrix mat = r(table)

. local p: di %5.3f mat[4,1]

. estadd local pval = `p'

added macro:
               e(pval) : ".067"

. 
. cap file close fh 

. 
. esttab using out/drop_attention_cx.tex, replace se label drop(_cons gov_index
> _pre_std) star(* 0.1 ** 0.05 *** 0.01) ///
>     mlabel("\shortstack{Update magnitude: \\ \$ \ln(|\text{posterior}-\text{p
> rior} | + 1) \$}" ///
>     "\shortstack{Update propensity: \\ 1(chooses to update)}" ///
> "\shortstack{Government \\ credibility index}" ///    
>     ) scalars("pval \$p\$-value" )
(note: file out/drop_attention_cx.tex not found)
(output written to out/drop_attention_cx.tex)

. 
. 
end of do-file

. 
. /* Appendix: heterogeneity by support for trump */
. do code/heterogeneity_by_party.do

. /*****************************************************/
. /* /\* This dofile builds the info vs. shifty graphs *\/ */
. /*****************************************************/
. if "`c(username)'" == "pierre-lucvautrey" {
.   do ~/Documents/Github/COVID/SetGlobals.do
. }

. else{
.   do ../SetGlobals.do

. version 13

. * set the number of ri replications
. global reps 1000

. 
. /* Sets stata globals */
. global raw = "../data"

. global int = "../data"

. 
. if "`c(username)'" == "charlierafkin" {
.   global raw = "~/Dropbox (MIT)/COVID/data/raw_decrypted/"
.   global int = "~/Dropbox (MIT)/COVID/data/intermediate/"
. }

. if "`c(username)'" == "pierre-lucvautrey" {
.   global raw = "~/Dropbox (MIT)/COVID/data/raw_decrypted/"
.   global int = "~/Dropbox (MIT)/COVID/data/intermediate/"
. }

. 
. global navy `" "51 122 183" "'

. global green `" "92 184 92" "'

. global ltblue `" "91 192 222" "'

. global red `" "217 83 79" "'

. global orange `" "240 173 78" "'

. 
. qui {

. 
. if "`c(username)'" == "pierre-lucvautrey" {
.   do ~/documents/github/COVID/programs.do
. }

. else{
.   do ../programs.do

. /*
> 
> Convert eps to pdf in mac Stata
> Author: CR
> Date: April 2018
> 
> */
. 
. 
. capture pr drop conversion

. capture pr define conversion

. 
. capture pr drop grout

. capture pr define grout

. 
. /******************************************/
. /* /\***** deflate cpi, base year *****\/ */
. /******************************************/
. capture pr drop get_cpi_deflator

. capture pr define get_cpi_deflator

. 
. 
. 
. 
. 
. 
. 
. /* other graphing/output programs that we want */
. 
. /****************************************************************************
> *********/
. /* program store_est_tpl : store b, se, p-values in format suitable for table
> _to_tpl */
. /****************************************************************************
> *********/
. cap prog drop store_est_tpl

. prog def store_est_tpl
  1. {
  2.   syntax using/,  coef(string) name(string) [format(string) beta se p n r2
>  all]
  3. 
.   /* turn on all flags if `all' is specified */
.   if !mi("`all'") {
  4.     local beta beta
  5.     local se se
  6.     local p p
  7.     local n n
  8.     local r2 r2
  9.   }
 10. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
 11. 
.   /* manage beta */
.   if !mi("`beta'") {
 12. 
.     /* store beta in the desired format */
.     local b3:  di `format' _b["`coef'"]
 13.     test `coef' = 0
 14.     local pvalue = `r(p)'
 15.     /* write p value (only makes sense if beta also specified) */
.     if !mi("`p'") {
 16.       insert_into_file using `using', key("`name'_p") value(" `pvalue'") f
> ormat("%5.2f")
 17.     }
 18. 
.     /* write beta to file */
.     insert_into_file using `using', key("`name'_beta") value(" `b3'") format(
> "`format'")
 19. 
.     /* count stars on the p and create starbeta */
.     count_stars, p(`pvalue')
 20.     insert_into_file using `using', key("`name'_starbeta") value(" `b3'`r(
> stars)'") format("`format'")
 21.   }
 22. 
.   /* manage se */
.   if !mi("`se'") {
 23.     local se3:  di `format' _se["`coef'"]
 24.     insert_into_file using `using', key("`name'_se") value(" `se3'")
 25.   }
 26. 
.   /* manage n */
.   if !mi("`n'") {
 27.     insert_into_file using `using', key("`name'_n") value(" `e(N)'") forma
> t("%1.0f")
 28.   }
 29. 
.   /* manage r2 */
.   if !mi("`r2'") {
 30.     insert_into_file using `using', key("`name'_r2") value(" `e(r2)'") for
> mat("%5.2f")
 31.   }
 32. }
 33. end

. /* *********** END program store_est_tpl ************************************
> ***** */
. 
. /****************************************************************************
> *********/
. /* program store_val_tpl : store value to a file with string and format      
>         */
. /****************************************************************************
> *********/
. cap prog drop store_val_tpl

. prog def store_val_tpl
  1. {
  2.   syntax using/,  Name(string) Value(string) [Format(string)]
  3. 
.   di `""store_val_tpl, name value format" is deprecated -- please use "insert
> _into_file, key value format" instead"'
  4. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
  5. 
.   /* get value in appropriate format (unless it's already a string) */
.   if !mi(real("`value'")) {
  6.     local v : di `format' `value'
  7.   }
  8.   else {
  9.     local v `value'
 10.   }
 11. 
.   /* write line to file */
.   append_to_file using `using', s("`name',`v'")
 12. }
 13. end

. /* *********** END program store_val_tpl ************************************
> ***** */
. 
. /****************************************************************************
> ***********************/
. /* program table_from_tpl : Create a table from a stored estimates file and a
>  .tex table template  */
. /****************************************************************************
> ***********************/
. cap prog drop table_from_tpl

. prog def table_from_tpl
  1. {
  2.   syntax, Template(string) Replacement(string) Output(string) [Verbose add
> stars dropstars]
  3. 
.   /* set up verbose flag */
.   if !mi("`verbose'") {
  4.       local v "-v"
  5.   }
  6.   else {
  7.       local v
  8.   }
  9. 
. 
.   /* if python path is not set, use current folder */
.   if mi("$PYTHONPATH") {
 10. 
.       /* set path to current folder */
.       local path .
 11.   }
 12.   else {
 13.       local path $PYTHONPATH
 14.   }
 15. 
.   /* check python file existence */
.   cap confirm file `path'/table_from_tpl.py
 16.   if _rc {
 17.       display as error "ERROR: table_from_tpl.py not found. Put in current
>  folder or folder defined by global \$PYTHONPATH"
 18.       error -1
 19.   }
 20. 
.   /* deal with addstars/dropstars parameters */
.   if "`addstars'" == "addstars" {
 21.     local star_param "--add-stars"
 22.   }
 23.   if "`dropstars'" == "dropstars" {
 24.     local star_param "--drop-stars"
 25.   }
 26. 
.   local pycommand `path'/table_from_tpl.py -t `template' -r `replacement' -o 
> `output' `v' `star_param'
 27.   if !mi("`verbose'") {
 28.       di `"Running `pycommand' "'
 29.   }
 30. 
.   shell python `pycommand'
 31.   cap confirm file `output'
 32.   if !_rc {
 33.     display "Created `output'."
 34.   }
 35.   else {
 36.     display "Could not create `output'."
 37.     error 1
 38.   }
 39. 
.   /* clean up the temporary file if star/nostar specified */
.   if !mi("`stars'") {
 40.     !rm $tmp/tpl_sed_tmp.tex
 41.   }
 42. }
 43. end

. /* *********** END program table_from_tpl ***********************************
> ****** */
. 
. /****************************************************************************
> ******/
. /* program append_to_file : Append a passed in string to a file              
>      */
. /****************************************************************************
> ******/
. cap prog drop append_to_file

. prog def append_to_file
  1. {
  2.   syntax using/, String(string)
  3. 
.   cap file close fh
  4.   file open fh using `using', write append
  5.   file write fh  `"`string'"'  _n
  6.   file close fh
  7. }
  8. end

. /* *********** END program append_to_file ***********************************
> ****** */
. 
. /****************************************************************************
> ******/
. /* program insert_into_file : Insert a key-value pair into a file            
>      */
. /*
> Assume "using" csv file take a key, value format, e.g.:
> 
> est1,3.544
> est2,3.234***
> ...
> 
> "est1" is the key. "3.544" is the value.
> 
> Example:
> 
> insert_into_file using $tmp/estimates.csv, key(est1) value(3.54493) format(%5
> .2f)
> 
> - if "est1" is not already in estimates file, it will be appended
> - if "est1" is already in estimates file, its value will be replaced with the
>  passed in parameter
> - estimates file will be created if it does not already exist
> 
> */
. 
. /****************************************************************************
> *******/
. cap prog drop insert_into_file

. prog def insert_into_file
  1. {
  2.   syntax using/, Key(string) Value(string) [Format(string) verbose]
  3. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
  4. 
.   /* get value in correct format (unless it's a string) */
.   if !mi(real("`value'")) {
  5.     local value : di `format' `value'
  6.   }
  7.   else {
  8.     local value `value'
  9.   }
 10. 
.   /* confirm file handles are closed */
.   cap file close fout
 11.   cap file close fin
 12. 
.   /* create a temporary file for writing */
.   tempfile tempfile
 13.   qui file open fout using `tempfile', write replace
 14. 
.   /* if input file doesn't exist, create it and display a notification */
.   cap confirm file `using'
 15.   if _rc {
 16.     if !mi("`verbose'") {
 17.       di "Creating new file `using'..."
 18.     }
 19.   }
 20. 
.   /* else, open the input file and read the first line */
.   else {
 21.     file open fin using `using', read
 22. 
.     /* read the first line */
.     file read fin line
 23.   }
 24. 
.   /* store a flag indicating whether we found the line or not */
.   local found 0
 25. 
.   /* loop over all lines of the file */
.   while r(eof) == 0 {
 26. 
.     /* check if line matches the current key */
.     if regexm("`line'", "^`key',") {
 27. 
.       /* if verbose, show what we're replacing  */
.       if !mi("`verbose'") {
 28.         di `"Replacing "`line'" with "`key',`value'"..."'
 29.       }
 30.       local found 1
 31. 
.       /* replace the line with key,value */
.       local line `key',`value'
 32.     }
 33. 
.     /* write the line to the output file */
.     file write fout "`line'" _n
 34. 
.     /* read the next line */
.     file read fin line
 35.   }
 36. 
.   /* if we didn't find this key, append it to the end */
.   if `found' == 0 {
 37.     file write fout "`key',`value'" _n
 38.   }
 39. 
.   /* close input and output files */
.   cap file close fin
 40.   file close fout
 41. 
.   /* copy the temporary file to the `using` filename */
.   copy `tempfile' `using', replace
 42. }
 43. end

. /* *********** END program insert_into_file *********************************
> ******** */
. 
. /****************************************************************************
> ******/
. /* program count_stars : return a string with the right number of stars      
>      */
. /****************************************************************************
> ******/
. cap prog drop count_stars

. prog def count_stars, rclass
  1. {
  2.   syntax, p(real)
  3.   local star = ""
  4.   if `p' <= 0.1  local star = "*"
  5.   if `p' <= 0.05 local star = "**"
  6.   if `p' <= 0.01 local star = "***"
  7.   return local stars = "`star'"
  8. }
  9. end

. /* *********** END program count_stars **************************************
> *** */
. 
. 
end of do-file
. }

. global PYTHONPATH = "code"

. 
end of do-file
. }

. clear 

. version 13

. 
. /****************************/
. /* 1. get update magnitudes */
. /****************************/
. use "$int/public_data" , clear 

. keep if !mi(shifty)
(0 observations deleted)

. label var shifty "Inconsistent" 

. /************************************************/
. /* /\* effect on update magnitude by party  *\/ */
. /************************************************/
. eststo clear

. 
. foreach outcome in update_mag_deaths update_covid  { 
  2.   foreach party in 2 1 0 {
  3.     local nm0 "Oppose Trump"
  4.     local nm1 "Undecided"
  5.     local nm2 "Support Trump"
  6. 
. 
. /**** test of treatment effect heterogeneity ****/ 
.     destring stratum, replace 
  7.     qui reg `outcome' shifty i.stratum if party == 2 // Note that suest wo
> nt accept non-robust SEs for the preliminary
  8.     estimates store `outcome'_rep
  9. 
.     qui reg `outcome' shifty i.stratum if party != 2 // Note that suest wont 
> accept non-robust SEs for the preliminary
 10.     estimates store `outcome'_not_rep
 11. 
.     qui suest `outcome'_rep `outcome'_not_rep, rob // Now you fit the simulta
> neous robust SEs
 12.     test [`outcome'_rep_mean][shifty] = [`outcome'_not_rep_mean][shifty]
 13.     local p: di %5.3f `r(p)' 
 14.     
.     qui eststo: reghdfe `outcome' shifty if party == `party', absorb(stratum)
>  vce(rob)
 15.     estadd local sample "`nm`party''"
 16.     di "p is `p'"
 17.     if (`party' == 2) estadd local pval = `p'
 18.     if (`party' != 2) estadd local pval ""
 19. 
.     sum gov_index_pre_std if party == `party'
 20.     local mp: di %5.3f `r(mean)'
 21.     estadd local meanbyparty `mp' 
 22.   }
 23. }
stratum: all characters numeric; replaced as byte

 ( 1)  [update_mag_deaths_rep_mean]shifty -
       [update_mag_deaths_not_rep_mean]shifty = 0

           chi2(  1) =    3.52
         Prob > chi2 =    0.0605

added macro:
             e(sample) : "Support Trump"
p is 0.060

added macro:
               e(pval) : ".06"

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
gov_in~e_std |        659    .3311368    .5214075  -1.036466   1.420691

added macro:
        e(meanbyparty) : "0.331"
stratum already numeric; no replace

 ( 1)  [update_mag_deaths_rep_mean]shifty -
       [update_mag_deaths_not_rep_mean]shifty = 0

           chi2(  1) =    3.52
         Prob > chi2 =    0.0605

added macro:
             e(sample) : "Undecided"
p is 0.060

added macro:
               e(pval) : ""

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
gov_in~e_std |        381   -.0124203    .4079965  -1.071705   1.237816

added macro:
        e(meanbyparty) : "-0.012"
stratum already numeric; no replace

 ( 1)  [update_mag_deaths_rep_mean]shifty -
       [update_mag_deaths_not_rep_mean]shifty = 0

           chi2(  1) =    3.52
         Prob > chi2 =    0.0605

added macro:
             e(sample) : "Oppose Trump"
p is 0.060

added macro:
               e(pval) : ""

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
gov_in~e_std |        860   -.2366601    .4646814  -1.950838   1.339449

added macro:
        e(meanbyparty) : "-0.237"
stratum already numeric; no replace

 ( 1)  [update_covid_rep_mean]shifty - [update_covid_not_rep_mean]shifty = 0

           chi2(  1) =    4.42
         Prob > chi2 =    0.0355

added macro:
             e(sample) : "Support Trump"
p is 0.036

added macro:
               e(pval) : ".036"

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
gov_in~e_std |        659    .3311368    .5214075  -1.036466   1.420691

added macro:
        e(meanbyparty) : "0.331"
stratum already numeric; no replace

 ( 1)  [update_covid_rep_mean]shifty - [update_covid_not_rep_mean]shifty = 0

           chi2(  1) =    4.42
         Prob > chi2 =    0.0355

added macro:
             e(sample) : "Undecided"
p is 0.036

added macro:
               e(pval) : ""

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
gov_in~e_std |        381   -.0124203    .4079965  -1.071705   1.237816

added macro:
        e(meanbyparty) : "-0.012"
stratum already numeric; no replace

 ( 1)  [update_covid_rep_mean]shifty - [update_covid_not_rep_mean]shifty = 0

           chi2(  1) =    4.42
         Prob > chi2 =    0.0355

added macro:
             e(sample) : "Oppose Trump"
p is 0.036

added macro:
               e(pval) : ""

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
gov_in~e_std |        860   -.2366601    .4646814  -1.950838   1.339449

added macro:
        e(meanbyparty) : "-0.237"

. 
. esttab using out/partisanship.tex, replace se label drop(_cons) star(* 0.1 **
>  0.05 *** 0.01) ///
>     mlabel("\shortstack{Update \\ magnitude}" ///
>     "\shortstack{Update \\ magnitude}" ///
>     "\shortstack{Update \\ magnitude}" ///    
>   "\shortstack{Update \\ propensity}" ///
>     "\shortstack{Update \\ propensity}" ///
>   "\shortstack{Update \\ propensity}" ///    
>     ) scalars("sample Sample" "meanbyparty Mean prior government credibility"
>  /// 
>     "note \ul{\textit{p}-value from:}" ///
>     "pval Support Trump = Not Support Trump" )
(note: file out/partisanship.tex not found)
(output written to out/partisanship.tex)

. 
. /**********************************************************/
. /* heterogeneity by whether attitudes are extreme or not  */
. /**********************************************************/
. eststo clear 

. sum gov_index_pre_std ,d

       faith in government index (standardized, prior)
-------------------------------------------------------------
      Percentiles      Smallest
 1%    -1.071705      -1.950838
 5%    -.8518823      -1.778159
10%    -.6531107      -1.599185       Obs               1,900
25%    -.3328501      -1.268327       Sum of Wgt.       1,900

50%    -.0651701                      Mean           .0052418
                        Largest       Std. Dev.      .5372191
75%     .3515564       1.420691
90%     .7320871       1.420691       Variance       .2886043
95%       .98976       1.420691       Skewness       .2952264
99%      1.34413       1.420691       Kurtosis       2.948737

. gen extreme_attitudes = gov_index_pre_std >= `r(p75)' | gov_index_pre_std <= 
> `r(p25)'

. 
. foreach outcome in update_mag_deaths update_covid  { 
  2.   foreach extreme in 1 0  {
  3.     local nm0 "Not Extreme"
  4.     local nm1 "Extreme"
  5.    
.     /**** test of treatment effect heterogeneity ****/ 
.     destring stratum, replace 
  6.     qui reg `outcome' shifty i.stratum if extreme_attitudes == 1 // Note t
> hat suest wont accept non-robust SEs for the preliminary
  7.     estimates store `outcome'_ext
  8. 
.     qui reg `outcome' shifty i.stratum if extreme_attitudes != 1 // Note that
>  suest wont accept non-robust SEs for the preliminary
  9.     estimates store `outcome'_not_ext
 10. 
.     qui suest `outcome'_ext `outcome'_not_ext, rob // Now you fit the simulta
> neous robust SEs
 11.     test [`outcome'_ext_mean][shifty] = [`outcome'_not_ext_mean][shifty]
 12.     local p: di %5.3f `r(p)' 
 13. 
.     qui eststo: reghdfe `outcome' shifty if extreme_attitudes == `extreme', a
> bsorb(stratum) vce(rob)
 14.     estadd local samp = "`nm`extreme''"
 15.     if (`extreme' == 1) estadd local pv = `p'
 16.     if (`extreme' != 1) estadd local pv ""
 17.     
.   }
 18. }
stratum already numeric; no replace

 ( 1)  [update_mag_deaths_ext_mean]shifty -
       [update_mag_deaths_not_ext_mean]shifty = 0

           chi2(  1) =    0.46
         Prob > chi2 =    0.4994

added macro:
               e(samp) : "Extreme"

added macro:
                 e(pv) : ".499"
stratum already numeric; no replace

 ( 1)  [update_mag_deaths_ext_mean]shifty -
       [update_mag_deaths_not_ext_mean]shifty = 0

           chi2(  1) =    0.46
         Prob > chi2 =    0.4994

added macro:
               e(samp) : "Not Extreme"

added macro:
                 e(pv) : ""
stratum already numeric; no replace

 ( 1)  [update_covid_ext_mean]shifty - [update_covid_not_ext_mean]shifty = 0

           chi2(  1) =    0.92
         Prob > chi2 =    0.3365

added macro:
               e(samp) : "Extreme"

added macro:
                 e(pv) : ".337"
stratum already numeric; no replace

 ( 1)  [update_covid_ext_mean]shifty - [update_covid_not_ext_mean]shifty = 0

           chi2(  1) =    0.92
         Prob > chi2 =    0.3365

added macro:
               e(samp) : "Not Extreme"

added macro:
                 e(pv) : ""

. 
. esttab using out/extreme.tex, replace se label drop(_cons) star(* 0.1 ** 0.05
>  *** 0.01) ///
>     mlabel("\shortstack{Update \\ magnitude}" ///
>     "\shortstack{Update \\ magnitude}" ///
>   "\shortstack{Update \\ propensity}" ///
>   "\shortstack{Update \\ propensity}" ///
>     ) scalars("samp Sample" ///
>         "note \ul{\textit{p}-value from:}" ///
>     "pv Extreme = Not Extreme" ///
>     )
(note: file out/extreme.tex not found)
(output written to out/extreme.tex)

. 
. 
. 
. 
. 
end of do-file

. 
. /* numbers in the text that autopopulate */
. do code/numbers_in_text.do

. /*****************************************************/
. /* /\* This dofile builds the info vs. shifty graphs *\/ */
. /*****************************************************/
. if "`c(username)'" == "pierre-lucvautrey" {
.   do ~/Documents/Github/COVID/SetGlobals.do
. }

. else{
.   do ../SetGlobals.do

. version 13

. * set the number of ri replications
. global reps 1000

. 
. /* Sets stata globals */
. global raw = "../data"

. global int = "../data"

. 
. if "`c(username)'" == "charlierafkin" {
.   global raw = "~/Dropbox (MIT)/COVID/data/raw_decrypted/"
.   global int = "~/Dropbox (MIT)/COVID/data/intermediate/"
. }

. if "`c(username)'" == "pierre-lucvautrey" {
.   global raw = "~/Dropbox (MIT)/COVID/data/raw_decrypted/"
.   global int = "~/Dropbox (MIT)/COVID/data/intermediate/"
. }

. 
. global navy `" "51 122 183" "'

. global green `" "92 184 92" "'

. global ltblue `" "91 192 222" "'

. global red `" "217 83 79" "'

. global orange `" "240 173 78" "'

. 
. qui {

. 
. if "`c(username)'" == "pierre-lucvautrey" {
.   do ~/documents/github/COVID/programs.do
. }

. else{
.   do ../programs.do

. /*
> 
> Convert eps to pdf in mac Stata
> Author: CR
> Date: April 2018
> 
> */
. 
. 
. capture pr drop conversion

. capture pr define conversion

. 
. capture pr drop grout

. capture pr define grout

. 
. /******************************************/
. /* /\***** deflate cpi, base year *****\/ */
. /******************************************/
. capture pr drop get_cpi_deflator

. capture pr define get_cpi_deflator

. 
. 
. 
. 
. 
. 
. 
. /* other graphing/output programs that we want */
. 
. /****************************************************************************
> *********/
. /* program store_est_tpl : store b, se, p-values in format suitable for table
> _to_tpl */
. /****************************************************************************
> *********/
. cap prog drop store_est_tpl

. prog def store_est_tpl
  1. {
  2.   syntax using/,  coef(string) name(string) [format(string) beta se p n r2
>  all]
  3. 
.   /* turn on all flags if `all' is specified */
.   if !mi("`all'") {
  4.     local beta beta
  5.     local se se
  6.     local p p
  7.     local n n
  8.     local r2 r2
  9.   }
 10. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
 11. 
.   /* manage beta */
.   if !mi("`beta'") {
 12. 
.     /* store beta in the desired format */
.     local b3:  di `format' _b["`coef'"]
 13.     test `coef' = 0
 14.     local pvalue = `r(p)'
 15.     /* write p value (only makes sense if beta also specified) */
.     if !mi("`p'") {
 16.       insert_into_file using `using', key("`name'_p") value(" `pvalue'") f
> ormat("%5.2f")
 17.     }
 18. 
.     /* write beta to file */
.     insert_into_file using `using', key("`name'_beta") value(" `b3'") format(
> "`format'")
 19. 
.     /* count stars on the p and create starbeta */
.     count_stars, p(`pvalue')
 20.     insert_into_file using `using', key("`name'_starbeta") value(" `b3'`r(
> stars)'") format("`format'")
 21.   }
 22. 
.   /* manage se */
.   if !mi("`se'") {
 23.     local se3:  di `format' _se["`coef'"]
 24.     insert_into_file using `using', key("`name'_se") value(" `se3'")
 25.   }
 26. 
.   /* manage n */
.   if !mi("`n'") {
 27.     insert_into_file using `using', key("`name'_n") value(" `e(N)'") forma
> t("%1.0f")
 28.   }
 29. 
.   /* manage r2 */
.   if !mi("`r2'") {
 30.     insert_into_file using `using', key("`name'_r2") value(" `e(r2)'") for
> mat("%5.2f")
 31.   }
 32. }
 33. end

. /* *********** END program store_est_tpl ************************************
> ***** */
. 
. /****************************************************************************
> *********/
. /* program store_val_tpl : store value to a file with string and format      
>         */
. /****************************************************************************
> *********/
. cap prog drop store_val_tpl

. prog def store_val_tpl
  1. {
  2.   syntax using/,  Name(string) Value(string) [Format(string)]
  3. 
.   di `""store_val_tpl, name value format" is deprecated -- please use "insert
> _into_file, key value format" instead"'
  4. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
  5. 
.   /* get value in appropriate format (unless it's already a string) */
.   if !mi(real("`value'")) {
  6.     local v : di `format' `value'
  7.   }
  8.   else {
  9.     local v `value'
 10.   }
 11. 
.   /* write line to file */
.   append_to_file using `using', s("`name',`v'")
 12. }
 13. end

. /* *********** END program store_val_tpl ************************************
> ***** */
. 
. /****************************************************************************
> ***********************/
. /* program table_from_tpl : Create a table from a stored estimates file and a
>  .tex table template  */
. /****************************************************************************
> ***********************/
. cap prog drop table_from_tpl

. prog def table_from_tpl
  1. {
  2.   syntax, Template(string) Replacement(string) Output(string) [Verbose add
> stars dropstars]
  3. 
.   /* set up verbose flag */
.   if !mi("`verbose'") {
  4.       local v "-v"
  5.   }
  6.   else {
  7.       local v
  8.   }
  9. 
. 
.   /* if python path is not set, use current folder */
.   if mi("$PYTHONPATH") {
 10. 
.       /* set path to current folder */
.       local path .
 11.   }
 12.   else {
 13.       local path $PYTHONPATH
 14.   }
 15. 
.   /* check python file existence */
.   cap confirm file `path'/table_from_tpl.py
 16.   if _rc {
 17.       display as error "ERROR: table_from_tpl.py not found. Put in current
>  folder or folder defined by global \$PYTHONPATH"
 18.       error -1
 19.   }
 20. 
.   /* deal with addstars/dropstars parameters */
.   if "`addstars'" == "addstars" {
 21.     local star_param "--add-stars"
 22.   }
 23.   if "`dropstars'" == "dropstars" {
 24.     local star_param "--drop-stars"
 25.   }
 26. 
.   local pycommand `path'/table_from_tpl.py -t `template' -r `replacement' -o 
> `output' `v' `star_param'
 27.   if !mi("`verbose'") {
 28.       di `"Running `pycommand' "'
 29.   }
 30. 
.   shell python `pycommand'
 31.   cap confirm file `output'
 32.   if !_rc {
 33.     display "Created `output'."
 34.   }
 35.   else {
 36.     display "Could not create `output'."
 37.     error 1
 38.   }
 39. 
.   /* clean up the temporary file if star/nostar specified */
.   if !mi("`stars'") {
 40.     !rm $tmp/tpl_sed_tmp.tex
 41.   }
 42. }
 43. end

. /* *********** END program table_from_tpl ***********************************
> ****** */
. 
. /****************************************************************************
> ******/
. /* program append_to_file : Append a passed in string to a file              
>      */
. /****************************************************************************
> ******/
. cap prog drop append_to_file

. prog def append_to_file
  1. {
  2.   syntax using/, String(string)
  3. 
.   cap file close fh
  4.   file open fh using `using', write append
  5.   file write fh  `"`string'"'  _n
  6.   file close fh
  7. }
  8. end

. /* *********** END program append_to_file ***********************************
> ****** */
. 
. /****************************************************************************
> ******/
. /* program insert_into_file : Insert a key-value pair into a file            
>      */
. /*
> Assume "using" csv file take a key, value format, e.g.:
> 
> est1,3.544
> est2,3.234***
> ...
> 
> "est1" is the key. "3.544" is the value.
> 
> Example:
> 
> insert_into_file using $tmp/estimates.csv, key(est1) value(3.54493) format(%5
> .2f)
> 
> - if "est1" is not already in estimates file, it will be appended
> - if "est1" is already in estimates file, its value will be replaced with the
>  passed in parameter
> - estimates file will be created if it does not already exist
> 
> */
. 
. /****************************************************************************
> *******/
. cap prog drop insert_into_file

. prog def insert_into_file
  1. {
  2.   syntax using/, Key(string) Value(string) [Format(string) verbose]
  3. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
  4. 
.   /* get value in correct format (unless it's a string) */
.   if !mi(real("`value'")) {
  5.     local value : di `format' `value'
  6.   }
  7.   else {
  8.     local value `value'
  9.   }
 10. 
.   /* confirm file handles are closed */
.   cap file close fout
 11.   cap file close fin
 12. 
.   /* create a temporary file for writing */
.   tempfile tempfile
 13.   qui file open fout using `tempfile', write replace
 14. 
.   /* if input file doesn't exist, create it and display a notification */
.   cap confirm file `using'
 15.   if _rc {
 16.     if !mi("`verbose'") {
 17.       di "Creating new file `using'..."
 18.     }
 19.   }
 20. 
.   /* else, open the input file and read the first line */
.   else {
 21.     file open fin using `using', read
 22. 
.     /* read the first line */
.     file read fin line
 23.   }
 24. 
.   /* store a flag indicating whether we found the line or not */
.   local found 0
 25. 
.   /* loop over all lines of the file */
.   while r(eof) == 0 {
 26. 
.     /* check if line matches the current key */
.     if regexm("`line'", "^`key',") {
 27. 
.       /* if verbose, show what we're replacing  */
.       if !mi("`verbose'") {
 28.         di `"Replacing "`line'" with "`key',`value'"..."'
 29.       }
 30.       local found 1
 31. 
.       /* replace the line with key,value */
.       local line `key',`value'
 32.     }
 33. 
.     /* write the line to the output file */
.     file write fout "`line'" _n
 34. 
.     /* read the next line */
.     file read fin line
 35.   }
 36. 
.   /* if we didn't find this key, append it to the end */
.   if `found' == 0 {
 37.     file write fout "`key',`value'" _n
 38.   }
 39. 
.   /* close input and output files */
.   cap file close fin
 40.   file close fout
 41. 
.   /* copy the temporary file to the `using` filename */
.   copy `tempfile' `using', replace
 42. }
 43. end

. /* *********** END program insert_into_file *********************************
> ******** */
. 
. /****************************************************************************
> ******/
. /* program count_stars : return a string with the right number of stars      
>      */
. /****************************************************************************
> ******/
. cap prog drop count_stars

. prog def count_stars, rclass
  1. {
  2.   syntax, p(real)
  3.   local star = ""
  4.   if `p' <= 0.1  local star = "*"
  5.   if `p' <= 0.05 local star = "**"
  6.   if `p' <= 0.01 local star = "***"
  7.   return local stars = "`star'"
  8. }
  9. end

. /* *********** END program count_stars **************************************
> *** */
. 
. 
end of do-file
. }

. global PYTHONPATH = "code"

. 
end of do-file
. }

. clear 

. version 13

. 
. /********************************************************************/
. /* /\* This dofile compiles numbers in the text to add manually *\/ */
. /********************************************************************/
. cap pr drop writelatex

. pr define writelatex
  1. syntax, number(string) name(string) [digits(real 0)] 
  2. 
.     file write fh "\newcommand{\" 
  3.     file write fh "`name'" 
  4.     file write fh "}{"
  5.     file write fh %5.`digits'fc (`number') "}" _n
  6. 
. end 

. cap file close fh 

. file open fh using out/additional_estimates.tex , write replace
(note: file out/additional_estimates.tex not found)

. 
. /********************************/
. /* /\* 1: effect of shifty *\/  */
. /********************************/
. use "$int/public_data" , clear 

. keep if !mi(shifty) 
(0 observations deleted)

. 
. /*** total N ***/
. reghdfe update_mag_deaths shifty, absorb(stratum) vce(rob)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   1,   1881) =       4.12
                                                  Prob > F        =     0.0425
                                                  R-squared       =     0.0372
                                                  Adj R-squared   =     0.0280
                                                  Within R-sq.    =     0.0022
                                                  Root MSE        =     5.4184

------------------------------------------------------------------------------
             |               Robust
update_mag~s |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |   -.505591   .2490891    -2.03   0.043    -.9941109    -.017071
       _cons |    4.84168   .1794968    26.97   0.000     4.489646    5.193714
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+

. local number = e(N)

. writelatex, digits(0) number(`number') name(numberofparticipants)

. 
. local mainlog = _b[shifty]

. writelatex, digits(3) number(`mainlog') name(mainlog) 

. 
. local mainlog = abs(_b[shifty]*100)

. writelatex, digits(1) number(`mainlog') name(mainpctpp) 

. 
. local mainconversion = exp(_b[shifty])-1

. writelatex, digits(3) number(`mainconversion') name(mainconversion) 

. 
. local mainconversionpct = abs(100*(exp(_b[shifty])-1))

. writelatex, digits(1) number(`mainconversionpct') name(mainconversionpct) 

. 
. nlcom exp(_b[shifty])-1

       _nl_1:  exp(_b[shifty])-1

------------------------------------------------------------------------------
update_mag~s |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |   -.396851   .1502378    -2.64   0.008    -.6913117   -.1023903
------------------------------------------------------------------------------

. matrix var = r(V)

. local mainconversionpctse = sqrt(var[1,1])*100

. writelatex, digits(1) number(`mainconversionpctse') name(mainconversionpctse)
>  

. 
. /*** number in each group ***/
. count if shifty == 0
  933

. local number = `r(N)'

. writelatex, digits(0) number(`number') name(numberofcontrol) 

. 
. count if shifty == 1
  967

. local number = `r(N)'

. writelatex, digits(0) number(`number') name(numberoftreat) 

. 
. /*** main estimate in numbers that are useful ***/ 
. reghdfe update_covid shifty, absorb(stratum) vce(rob)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   1,   1881) =       3.18
                                                  Prob > F        =     0.0748
                                                  R-squared       =     0.0325
                                                  Adj R-squared   =     0.0232
                                                  Within R-sq.    =     0.0017
                                                  Root MSE        =     0.4892

------------------------------------------------------------------------------
             |               Robust
update_covid |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.0401568   .0225287    -1.78   0.075    -.0843407    .0040271
       _cons |   .4488587   .0161213    27.84   0.000     .4172413    .4804762
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+

. local mainpp = abs(_b[shifty]*100)

. writelatex, digits(1) number(`mainpp') name(mainfracpp) 

. local mainppse = abs(_se[shifty]*100)

. writelatex, digits(1) number(`mainppse') name(mainfracppse) 

. 
. /*** get estimate in terms of control group ***/ 
. sum update_covid if shifty == 0

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
update_covid |        933    .4501608    .4977767          0          1

. local mean = abs(_b[shifty] * 100 / `r(mean)') 

. writelatex, digits(1) number(`mean') name(updaterelativecontrol) 

. 
. /***************************************/
. /* /\*** effect for 3-day sample ***\/ */
. /***************************************/
. use "$int/public_data" , clear

. reghdfe update_covid shifty, absorb(stratum) vce(rob)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   1,   1881) =       3.18
                                                  Prob > F        =     0.0748
                                                  R-squared       =     0.0325
                                                  Adj R-squared   =     0.0232
                                                  Within R-sq.    =     0.0017
                                                  Root MSE        =     0.4892

------------------------------------------------------------------------------
             |               Robust
update_covid |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.0401568   .0225287    -1.78   0.075    -.0843407    .0040271
       _cons |   .4488587   .0161213    27.84   0.000     .4172413    .4804762
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+

. local number_2 = `e(N)' 

. 
. use "$int/public_data_3days" , clear

. reghdfe update_covid shifty, absorb(stratum) vce(rob)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,918
Absorbing 1 HDFE group                            F(   1,   1899) =       3.86
                                                  Prob > F        =     0.0496
                                                  R-squared       =     0.0327
                                                  Adj R-squared   =     0.0236
                                                  Within R-sq.    =     0.0020
                                                  Root MSE        =     0.4893

------------------------------------------------------------------------------
             |               Robust
update_covid |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.0440687   .0224261    -1.97   0.050     -.088051   -.0000863
       _cons |   .4520391   .0160535    28.16   0.000     .4205548    .4835234
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+

. local number_3 = `e(N)' 

. local diff = `number_3' - `number_2' 

. writelatex, digits(0) number(`diff') name(extradays) 

. 
. keep if !mi(shifty) 
(0 observations deleted)

. reghdfe update_covid shifty, absorb(stratum) vce(rob)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,918
Absorbing 1 HDFE group                            F(   1,   1899) =       3.86
                                                  Prob > F        =     0.0496
                                                  R-squared       =     0.0327
                                                  Adj R-squared   =     0.0236
                                                  Within R-sq.    =     0.0020
                                                  Root MSE        =     0.4893

------------------------------------------------------------------------------
             |               Robust
update_covid |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.0440687   .0224261    -1.97   0.050     -.088051   -.0000863
       _cons |   .4520391   .0160535    28.16   0.000     .4205548    .4835234
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+

. matrix mat = r(table)

. local b = abs(_b[shifty]*100)

. writelatex, digits(1) number(`b') name(mainthreeday) 

. 
. local se = _se[shifty]*100

. writelatex, digits(1) number(`se') name(mainthreedayse) 

. 
. local p = mat[4,1]

. writelatex, digits(3) number(`p') name(mainthreedayp) 

. 
. sum update_covid if shifty == 0

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
update_covid |        942    .4532909    .4980779          0          1

. local mean = abs(_b[shifty] * 100 / `r(mean)')

. writelatex, digits(1) number(`mean') name(updaterelativecontrolthreeday) 

. 
. /* get effect on update magnitudes */ 
. reghdfe update_mag_deaths shifty, absorb(stratum) vce(rob)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,918
Absorbing 1 HDFE group                            F(   1,   1899) =       4.87
                                                  Prob > F        =     0.0275
                                                  R-squared       =     0.0374
                                                  Adj R-squared   =     0.0283
                                                  Within R-sq.    =     0.0026
                                                  Root MSE        =     5.4190

------------------------------------------------------------------------------
             |               Robust
update_mag~s |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |   -.547027   .2479278    -2.21   0.027    -1.033266   -.0607875
       _cons |    4.87455    .178708    27.28   0.000     4.524066    5.225035
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+

. local b = abs(_b[shifty] * 100)

. local se = _se[shifty] * 100

. matrix mat = r(table)

. local p = mat[4,1]

. 
. writelatex, digits(1) number(`b') name(magthreeday) 

. writelatex, digits(1) number(`se') name(magthreedayse) 

. writelatex, digits(3) number(`p') name(magthreedayp) 

. 
. /****************************************/
. /* /\*** benchmark of main effect ***\/ */
. /****************************************/
. use "$int/public_data" , clear

. 
. /**** fraction with knowledge ***/ 
. gen above_median_knowledge = dont_know_pre <= 4

. sum above_median_knowledge, d

                   above_median_knowledge
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%            0              0       Obs               1,900
25%            0              0       Sum of Wgt.       1,900

50%            1                      Mean                .51
                        Largest       Std. Dev.      .5000316
75%            1              1
90%            1              1       Variance       .2500316
95%            1              1       Skewness       -.040008
99%            1              1       Kurtosis       1.001601

. local frac = `r(mean)' * 100

. writelatex, digits(1) number(`frac') name(fracknowledge)

. 
. sum dont_know_pre, d

                        dont_know_pre
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%            1              0       Obs               1,900
25%            2              0       Sum of Wgt.       1,900

50%            4                      Mean           4.531053
                        Largest       Std. Dev.      2.872686
75%            7             10
90%            8             10       Variance       8.252326
95%           10             10       Skewness       .1861909
99%           10             10       Kurtosis       2.048765

. writelatex, digits(1) number(`r(sd)') name(sdnews)

. 
. 
. reg update_mag_deaths above_median_knowledge, robust

Linear regression                               Number of obs     =      1,900
                                                F(1, 1898)        =       3.68
                                                Prob > F          =     0.0551
                                                R-squared         =     0.0019
                                                Root MSE          =     5.4921

------------------------------------------------------------------------------
             |               Robust
update_mag~s |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
above_medi~e |  -.4838876   .2521352    -1.92   0.055    -.9783789    .0106037
       _cons |   4.831143   .1815986    26.60   0.000      4.47499    5.187297
------------------------------------------------------------------------------

. local b = abs(_b[above_median_knowledge]*100)

. writelatex, digits(1) number(`b') name(knowledgebenchmarkbeta)

. 
. local se = _se[above_median_knowledge]*100

. writelatex, digits(1) number(`se') name(knowledgebenchmarkse) 

. 
. reghdfe update_mag_deaths shifty , absorb(stratum) vce(rob)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   1,   1881) =       4.12
                                                  Prob > F        =     0.0425
                                                  R-squared       =     0.0372
                                                  Adj R-squared   =     0.0280
                                                  Within R-sq.    =     0.0022
                                                  Root MSE        =     5.4184

------------------------------------------------------------------------------
             |               Robust
update_mag~s |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |   -.505591   .2490891    -2.03   0.043    -.9941109    -.017071
       _cons |    4.84168   .1794968    26.97   0.000     4.489646    5.193714
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+

. 
. local benchmark = abs(_b[shifty] * 100 / `b')

. writelatex, digits(1) number(`benchmark') name(benchmark) 

. 
. /* benchmark in terms of propensity */ 
. reg update_covid above_median_knowledge, robust

Linear regression                               Number of obs     =      1,900
                                                F(1, 1898)        =       3.49
                                                Prob > F          =     0.0619
                                                R-squared         =     0.0018
                                                Root MSE          =     .49466

------------------------------------------------------------------------------
             |               Robust
update_covid |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
above_medi~e |   -.042417   .0227065    -1.87   0.062    -.0869493    .0021154
       _cons |   .4500537   .0163135    27.59   0.000     .4180595    .4820479
------------------------------------------------------------------------------

. 
. local b = abs(_b[above_median_knowledge]*100)

. writelatex, digits(1) number(`b') name(knowledgebenchmarkppbeta)

. 
. local se = _se[above_median_knowledge]*100

. writelatex, digits(1) number(`se') name(knowledgebenchmarkppse) 

. 
. reghdfe update_covid shifty, absorb(stratum) vce(rob)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   1,   1881) =       3.18
                                                  Prob > F        =     0.0748
                                                  R-squared       =     0.0325
                                                  Adj R-squared   =     0.0232
                                                  Within R-sq.    =     0.0017
                                                  Root MSE        =     0.4892

------------------------------------------------------------------------------
             |               Robust
update_covid |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.0401568   .0225287    -1.78   0.075    -.0843407    .0040271
       _cons |   .4488587   .0161213    27.84   0.000     .4172413    .4804762
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+

. local benchmarkpp = abs(_b[shifty] * 100 / `b')

. writelatex, digits(1) number(`benchmarkpp') name(benchmarkpp)

. 
. /*********************/
. /* INTENSIVE MARGIN  */
. /*********************/
. reghdfe update_mag_deaths shifty if update_covid == 1, absorb(stratum) vce(ro
> b)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =        814
Absorbing 1 HDFE group                            F(   1,    795) =       1.06
                                                  Prob > F        =     0.3024
                                                  R-squared       =     0.0388
                                                  Adj R-squared   =     0.0171
                                                  Within R-sq.    =     0.0013
                                                  Root MSE        =     2.2230

------------------------------------------------------------------------------
             |               Robust
update_mag~s |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.1596465   .1547012    -1.03   0.302    -.4633177    .1440247
       _cons |   10.77787   .1058352   101.84   0.000     10.57012    10.98562
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+

. local b = abs(_b[shifty]*100)

. local se = abs(_se[shifty]*100)

. matrix mat = r(table)

. local p = mat[4,1]

. writelatex, digits(1) number(`b') name(intensivelogb)

. writelatex, digits(1) number(`se') name(intensivelogse)

. writelatex, digits(3) number(`p') name(intensivelogp)

. 
. /*********************/
. /* DIFF: OPT AND PESS  */
. /*********************/
. destring stratum, replace 
stratum: all characters numeric; replaced as byte

. foreach outcome in update_mag_deaths update_covid {
  2.   local update_mag_deathsnm updatemagdeaths
  3.   local update_covidnm updatecovid
  4.   
.     qui reg `outcome' shifty i.stratum if priors_below_info == 1
  5.     estimates store `outcome'_below
  6. 
.     qui reg `outcome' shifty i.stratum if priors_above_info == 1
  7.     estimates store `outcome'_above
  8.   
.     qui suest `outcome'_below `outcome'_above, rob
  9.     test [`outcome'_below_mean][shifty] = [`outcome'_above_mean][shifty]
 10.     writelatex, digits(3) number(`r(p)') name(``outcome'nm'pessoptp)
 11. 
. }

 ( 1)  [update_mag_deaths_below_mean]shifty -
       [update_mag_deaths_above_mean]shifty = 0

           chi2(  1) =    0.50
         Prob > chi2 =    0.4783

 ( 1)  [update_covid_below_mean]shifty - [update_covid_above_mean]shifty = 0

           chi2(  1) =    0.91
         Prob > chi2 =    0.3414

. 
. /****************************************/
. /* Prediction 4 - heterogeneity by gov  */
. /****************************************/
. qui reg gov_index_post_std shifty gov_index_pre_std i.stratum if priors_below
> _info == 1 

. estimates store gov_below

. 
. qui reg gov_index_post_std shifty gov_index_pre_std i.stratum if priors_below
> _info == 0

. estimates store gov_above

. 
. suest gov_below gov_above, rob

Simultaneous results for gov_below, gov_above

                                                Number of obs     =      1,900

------------------------------------------------------------------------------
             |               Robust
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
gov_below_~n |
      shifty |  -.0219778   .0222153    -0.99   0.323     -.065519    .0215633
gov_in~e_std |   .7656512   .0237085    32.29   0.000     .7191834    .8121191
             |
     stratum |
          2  |  -.0163508   .0535125    -0.31   0.760    -.1212333    .0885317
          3  |   .0703008   .0520717     1.35   0.177    -.0317579    .1723595
          4  |   .0676203   .0648079     1.04   0.297    -.0594008    .1946414
          5  |   .0176987   .0574772     0.31   0.758    -.0949545    .1303519
          6  |   .1258356   .0681579     1.85   0.065    -.0077514    .2594226
          7  |   .0246568   .0784609     0.31   0.753    -.1291236    .1784373
          8  |   .1004001   .0722962     1.39   0.165    -.0412979    .2420981
          9  |   .1430552   .0620865     2.30   0.021     .0213679    .2647425
         10  |   .0560558   .0631365     0.89   0.375    -.0676895    .1798012
         11  |   .0132498   .0533624     0.25   0.804    -.0913385    .1178382
         12  |   .0052285    .058026     0.09   0.928    -.1085004    .1189574
         13  |  -.0502777   .0785872    -0.64   0.522    -.2043058    .1037503
         14  |   .0377346   .0537727     0.70   0.483     -.067658    .1431271
         15  |   .0642366    .056544     1.14   0.256    -.0465876    .1750608
         16  |  -.0125067   .0928678    -0.13   0.893    -.1945243    .1695109
         17  |   .0010914   .0651622     0.02   0.987    -.1266241     .128807
         18  |   .1398158   .0623251     2.24   0.025     .0176607    .2619708
             |
       _cons |   -.032464   .0416536    -0.78   0.436    -.1141036    .0491756
-------------+----------------------------------------------------------------
gov_below_~r |
       _cons |  -2.169011   .0596522   -36.36   0.000    -2.285927   -2.052095
-------------+----------------------------------------------------------------
gov_above_~n |
      shifty |  -.0506402   .0217119    -2.33   0.020    -.0931947   -.0080857
gov_in~e_std |     .79293   .0215576    36.78   0.000     .7506778    .8351821
             |
     stratum |
          2  |   .0359421   .0498696     0.72   0.471    -.0618006    .1336848
          3  |   .0854862   .0665001     1.29   0.199    -.0448517    .2158241
          4  |   .1091714   .0577301     1.89   0.059    -.0039775    .2223203
          5  |   .0303617    .052389     0.58   0.562    -.0723189    .1330422
          6  |   .1696932     .06085     2.79   0.005     .0504295    .2889569
          7  |    .020654   .0561309     0.37   0.713    -.0893606    .1306686
          8  |   .1436837   .0675196     2.13   0.033     .0113478    .2760196
          9  |   .1840241   .0576164     3.19   0.001     .0710981    .2969502
         10  |  -.0006457   .0641296    -0.01   0.992    -.1263375    .1250461
         11  |   .0172587   .0660367     0.26   0.794    -.1121709    .1466883
         12  |   .0125557   .0599436     0.21   0.834    -.1049315    .1300429
         13  |  -.0503232   .0573239    -0.88   0.380     -.162676    .0620296
         14  |   .0008802   .0559325     0.02   0.987    -.1087455    .1105059
         15  |   .0977603   .0502038     1.95   0.052    -.0006374     .196158
         16  |  -.0072645   .0643698    -0.11   0.910    -.1334269    .1188979
         17  |   .1456726   .0510133     2.86   0.004     .0456884    .2456569
         18  |   .0017018   .0541001     0.03   0.975    -.1043324     .107736
             |
       _cons |  -.0632771    .036721    -1.72   0.085    -.1352489    .0086947
-------------+----------------------------------------------------------------
gov_above_~r |
       _cons |  -2.154252   .0593868   -36.27   0.000    -2.270648   -2.037856
------------------------------------------------------------------------------

. nlcom [gov_below_mean][shifty] - [gov_above_mean][shifty]

       _nl_1:  [gov_below_mean][shifty] - [gov_above_mean][shifty]

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _nl_1 |   .0286624   .0310632     0.92   0.356    -.0322205    .0895452
------------------------------------------------------------------------------

. mat b = r(b)

. local b = b[1,1]

. mat var = r(V)

. local se = sqrt(var[1,1])

. 
. writelatex, digits(3) number(`b') name(abovemedgovbeta)

. writelatex, digits(3) number(`se') name(abovemedgovse)

. 
. /****************************************************************************
> ******/
. /* data appendix: fraction of participants with posteriors or priors are too 
> low  */
. /****************************************************************************
> ******/
. count if deaths_post == deaths_pre & regexm(q121,"best guess") != 1
  56

. local percent = `r(N)'/_N * 100 

. writelatex, digits(1) number(`percent') name(percentdatabestguess) 

. 
. /*********************************************/
. /* Referee ask: propensity to vote for trump */
. /*********************************************/
. use "$int/public_data" , clear

. reg gov_index_pre_std vote_trump_pre_std, robust

Linear regression                               Number of obs     =      1,900
                                                F(1, 1898)        =     523.11
                                                Prob > F          =     0.0000
                                                R-squared         =     0.2325
                                                Root MSE          =     .47075

------------------------------------------------------------------------------
             |               Robust
gov_in~e_std |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
vote_t~e_std |   .2586747   .0113099    22.87   0.000     .2364936    .2808558
       _cons |   .0044932   .0107971     0.42   0.677    -.0166822    .0256687
------------------------------------------------------------------------------

. local b = _b[vote_trump_pre_std]

. writelatex, digits(3) number(`b') name(votetrumpgovtrust) 

. 
. local se = _se[vote_trump_pre_std]

. writelatex, digits(3) number(`se') name(votetrumpgovtrustse) 

. 
. reghdfe gov_index_post_std shifty gov_index_pre, absorb(stratum)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   2,   1880) =    1224.36
                                                  Prob > F        =     0.0000
                                                  R-squared       =     0.6300
                                                  Adj R-squared   =     0.6263
                                                  Within R-sq.    =     0.5657
                                                  Root MSE        =     0.3391

------------------------------------------------------------------------------
gov_in~t_std |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |  -.0374789   .0156006    -2.40   0.016    -.0680752   -.0068826
gov_in~e_std |   .7819681   .0158183    49.43   0.000     .7509449    .8129913
       _cons |    .000864   .0111167     0.08   0.938    -.0209384    .0226663
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+

. local pct = abs(_b[shifty] / `b'  * 100)

. di `pct'
14.488801

. writelatex, digits(0) number(`pct') name(votetrumpgovtrustpct) 

. 
. 
. cap file close fh 

. 
. 
end of do-file

. 
. /* small additional numbers to manually check */
. do code/check_before_submit.do

. /****************************************************************/
. /* /\**** contains statements that do not autopopulate *****\/  */
. /****************************************************************/
. if "`c(username)'" == "pierre-lucvautrey" {
.   do ~/Documents/Github/COVID/SetGlobals.do
. }

. else{
.   do ../SetGlobals.do

. version 13

. * set the number of ri replications
. global reps 1000

. 
. /* Sets stata globals */
. global raw = "../data"

. global int = "../data"

. 
. if "`c(username)'" == "charlierafkin" {
.   global raw = "~/Dropbox (MIT)/COVID/data/raw_decrypted/"
.   global int = "~/Dropbox (MIT)/COVID/data/intermediate/"
. }

. if "`c(username)'" == "pierre-lucvautrey" {
.   global raw = "~/Dropbox (MIT)/COVID/data/raw_decrypted/"
.   global int = "~/Dropbox (MIT)/COVID/data/intermediate/"
. }

. 
. global navy `" "51 122 183" "'

. global green `" "92 184 92" "'

. global ltblue `" "91 192 222" "'

. global red `" "217 83 79" "'

. global orange `" "240 173 78" "'

. 
. qui {

. 
. if "`c(username)'" == "pierre-lucvautrey" {
.   do ~/documents/github/COVID/programs.do
. }

. else{
.   do ../programs.do

. /*
> 
> Convert eps to pdf in mac Stata
> Author: CR
> Date: April 2018
> 
> */
. 
. 
. capture pr drop conversion

. capture pr define conversion

. 
. capture pr drop grout

. capture pr define grout

. 
. /******************************************/
. /* /\***** deflate cpi, base year *****\/ */
. /******************************************/
. capture pr drop get_cpi_deflator

. capture pr define get_cpi_deflator

. 
. 
. 
. 
. 
. 
. 
. /* other graphing/output programs that we want */
. 
. /****************************************************************************
> *********/
. /* program store_est_tpl : store b, se, p-values in format suitable for table
> _to_tpl */
. /****************************************************************************
> *********/
. cap prog drop store_est_tpl

. prog def store_est_tpl
  1. {
  2.   syntax using/,  coef(string) name(string) [format(string) beta se p n r2
>  all]
  3. 
.   /* turn on all flags if `all' is specified */
.   if !mi("`all'") {
  4.     local beta beta
  5.     local se se
  6.     local p p
  7.     local n n
  8.     local r2 r2
  9.   }
 10. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
 11. 
.   /* manage beta */
.   if !mi("`beta'") {
 12. 
.     /* store beta in the desired format */
.     local b3:  di `format' _b["`coef'"]
 13.     test `coef' = 0
 14.     local pvalue = `r(p)'
 15.     /* write p value (only makes sense if beta also specified) */
.     if !mi("`p'") {
 16.       insert_into_file using `using', key("`name'_p") value(" `pvalue'") f
> ormat("%5.2f")
 17.     }
 18. 
.     /* write beta to file */
.     insert_into_file using `using', key("`name'_beta") value(" `b3'") format(
> "`format'")
 19. 
.     /* count stars on the p and create starbeta */
.     count_stars, p(`pvalue')
 20.     insert_into_file using `using', key("`name'_starbeta") value(" `b3'`r(
> stars)'") format("`format'")
 21.   }
 22. 
.   /* manage se */
.   if !mi("`se'") {
 23.     local se3:  di `format' _se["`coef'"]
 24.     insert_into_file using `using', key("`name'_se") value(" `se3'")
 25.   }
 26. 
.   /* manage n */
.   if !mi("`n'") {
 27.     insert_into_file using `using', key("`name'_n") value(" `e(N)'") forma
> t("%1.0f")
 28.   }
 29. 
.   /* manage r2 */
.   if !mi("`r2'") {
 30.     insert_into_file using `using', key("`name'_r2") value(" `e(r2)'") for
> mat("%5.2f")
 31.   }
 32. }
 33. end

. /* *********** END program store_est_tpl ************************************
> ***** */
. 
. /****************************************************************************
> *********/
. /* program store_val_tpl : store value to a file with string and format      
>         */
. /****************************************************************************
> *********/
. cap prog drop store_val_tpl

. prog def store_val_tpl
  1. {
  2.   syntax using/,  Name(string) Value(string) [Format(string)]
  3. 
.   di `""store_val_tpl, name value format" is deprecated -- please use "insert
> _into_file, key value format" instead"'
  4. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
  5. 
.   /* get value in appropriate format (unless it's already a string) */
.   if !mi(real("`value'")) {
  6.     local v : di `format' `value'
  7.   }
  8.   else {
  9.     local v `value'
 10.   }
 11. 
.   /* write line to file */
.   append_to_file using `using', s("`name',`v'")
 12. }
 13. end

. /* *********** END program store_val_tpl ************************************
> ***** */
. 
. /****************************************************************************
> ***********************/
. /* program table_from_tpl : Create a table from a stored estimates file and a
>  .tex table template  */
. /****************************************************************************
> ***********************/
. cap prog drop table_from_tpl

. prog def table_from_tpl
  1. {
  2.   syntax, Template(string) Replacement(string) Output(string) [Verbose add
> stars dropstars]
  3. 
.   /* set up verbose flag */
.   if !mi("`verbose'") {
  4.       local v "-v"
  5.   }
  6.   else {
  7.       local v
  8.   }
  9. 
. 
.   /* if python path is not set, use current folder */
.   if mi("$PYTHONPATH") {
 10. 
.       /* set path to current folder */
.       local path .
 11.   }
 12.   else {
 13.       local path $PYTHONPATH
 14.   }
 15. 
.   /* check python file existence */
.   cap confirm file `path'/table_from_tpl.py
 16.   if _rc {
 17.       display as error "ERROR: table_from_tpl.py not found. Put in current
>  folder or folder defined by global \$PYTHONPATH"
 18.       error -1
 19.   }
 20. 
.   /* deal with addstars/dropstars parameters */
.   if "`addstars'" == "addstars" {
 21.     local star_param "--add-stars"
 22.   }
 23.   if "`dropstars'" == "dropstars" {
 24.     local star_param "--drop-stars"
 25.   }
 26. 
.   local pycommand `path'/table_from_tpl.py -t `template' -r `replacement' -o 
> `output' `v' `star_param'
 27.   if !mi("`verbose'") {
 28.       di `"Running `pycommand' "'
 29.   }
 30. 
.   shell python `pycommand'
 31.   cap confirm file `output'
 32.   if !_rc {
 33.     display "Created `output'."
 34.   }
 35.   else {
 36.     display "Could not create `output'."
 37.     error 1
 38.   }
 39. 
.   /* clean up the temporary file if star/nostar specified */
.   if !mi("`stars'") {
 40.     !rm $tmp/tpl_sed_tmp.tex
 41.   }
 42. }
 43. end

. /* *********** END program table_from_tpl ***********************************
> ****** */
. 
. /****************************************************************************
> ******/
. /* program append_to_file : Append a passed in string to a file              
>      */
. /****************************************************************************
> ******/
. cap prog drop append_to_file

. prog def append_to_file
  1. {
  2.   syntax using/, String(string)
  3. 
.   cap file close fh
  4.   file open fh using `using', write append
  5.   file write fh  `"`string'"'  _n
  6.   file close fh
  7. }
  8. end

. /* *********** END program append_to_file ***********************************
> ****** */
. 
. /****************************************************************************
> ******/
. /* program insert_into_file : Insert a key-value pair into a file            
>      */
. /*
> Assume "using" csv file take a key, value format, e.g.:
> 
> est1,3.544
> est2,3.234***
> ...
> 
> "est1" is the key. "3.544" is the value.
> 
> Example:
> 
> insert_into_file using $tmp/estimates.csv, key(est1) value(3.54493) format(%5
> .2f)
> 
> - if "est1" is not already in estimates file, it will be appended
> - if "est1" is already in estimates file, its value will be replaced with the
>  passed in parameter
> - estimates file will be created if it does not already exist
> 
> */
. 
. /****************************************************************************
> *******/
. cap prog drop insert_into_file

. prog def insert_into_file
  1. {
  2.   syntax using/, Key(string) Value(string) [Format(string) verbose]
  3. 
.   /* set default format if not specified */
.   if mi("`format'") local format "%6.3f"
  4. 
.   /* get value in correct format (unless it's a string) */
.   if !mi(real("`value'")) {
  5.     local value : di `format' `value'
  6.   }
  7.   else {
  8.     local value `value'
  9.   }
 10. 
.   /* confirm file handles are closed */
.   cap file close fout
 11.   cap file close fin
 12. 
.   /* create a temporary file for writing */
.   tempfile tempfile
 13.   qui file open fout using `tempfile', write replace
 14. 
.   /* if input file doesn't exist, create it and display a notification */
.   cap confirm file `using'
 15.   if _rc {
 16.     if !mi("`verbose'") {
 17.       di "Creating new file `using'..."
 18.     }
 19.   }
 20. 
.   /* else, open the input file and read the first line */
.   else {
 21.     file open fin using `using', read
 22. 
.     /* read the first line */
.     file read fin line
 23.   }
 24. 
.   /* store a flag indicating whether we found the line or not */
.   local found 0
 25. 
.   /* loop over all lines of the file */
.   while r(eof) == 0 {
 26. 
.     /* check if line matches the current key */
.     if regexm("`line'", "^`key',") {
 27. 
.       /* if verbose, show what we're replacing  */
.       if !mi("`verbose'") {
 28.         di `"Replacing "`line'" with "`key',`value'"..."'
 29.       }
 30.       local found 1
 31. 
.       /* replace the line with key,value */
.       local line `key',`value'
 32.     }
 33. 
.     /* write the line to the output file */
.     file write fout "`line'" _n
 34. 
.     /* read the next line */
.     file read fin line
 35.   }
 36. 
.   /* if we didn't find this key, append it to the end */
.   if `found' == 0 {
 37.     file write fout "`key',`value'" _n
 38.   }
 39. 
.   /* close input and output files */
.   cap file close fin
 40.   file close fout
 41. 
.   /* copy the temporary file to the `using` filename */
.   copy `tempfile' `using', replace
 42. }
 43. end

. /* *********** END program insert_into_file *********************************
> ******** */
. 
. /****************************************************************************
> ******/
. /* program count_stars : return a string with the right number of stars      
>      */
. /****************************************************************************
> ******/
. cap prog drop count_stars

. prog def count_stars, rclass
  1. {
  2.   syntax, p(real)
  3.   local star = ""
  4.   if `p' <= 0.1  local star = "*"
  5.   if `p' <= 0.05 local star = "**"
  6.   if `p' <= 0.01 local star = "***"
  7.   return local stars = "`star'"
  8. }
  9. end

. /* *********** END program count_stars **************************************
> *** */
. 
. 
end of do-file
. }

. global PYTHONPATH = "code"

. 
end of do-file
. }

. clear

. version 13

. 
. /****** OTHER NUMBERS THAT DO NOT AUTOPOPULATE *****/
. /* robustness: changse in beliefs */
. use "$int/public_data" , clear

. count if abs_mag > 1000000
  41

. di `r(N)'/_N
.02157895

. 
. sum update_covid

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
update_covid |      1,900    .4284211    .4949802          0          1

. di 1-`r(mean)'
.57157895

. 
. gen data_task_covid = index_covid != .

. 
. /* standardize relative to control group */
. sum number_others if shifty == 0

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
number_oth~s |        933    1.632369    2.566895          0         10

. gen social_distancing_index_std = - (number_others - `r(mean)') / (`r(sd)')

. 
. /****** social distancing p value *****/
. eststo: reghdfe social_distancing_index_std shifty data_task_covid , absorb(s
> tratum) vce(rob)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      1,900
Absorbing 1 HDFE group                            F(   2,   1880) =       2.09
                                                  Prob > F        =     0.1236
                                                  R-squared       =     0.0935
                                                  Adj R-squared   =     0.0843
                                                  Within R-sq.    =     0.0023
                                                  Root MSE        =     0.9195

------------------------------------------------------------------------------
             |               Robust
social_dis~d |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      shifty |   .0824523   .0424494     1.94   0.052    -.0008005    .1657051
data_task_~d |   .0292691   .0427515     0.68   0.494    -.0545763    .1131145
       _cons |  -.0184497   .0378835    -0.49   0.626    -.0927479    .0558484
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
     stratum |        18           0          18     |
-----------------------------------------------------+
(est5 stored)

. 
. /**** median of the dont know variable is 4 ****/
. sum dont_know,d

                        dont_know_pre
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%            1              0       Obs               1,900
25%            2              0       Sum of Wgt.       1,900

50%            4                      Mean           4.531053
                        Largest       Std. Dev.      2.872686
75%            7             10
90%            8             10       Variance       8.252326
95%           10             10       Skewness       .1861909
99%           10             10       Kurtosis       2.048765

. 
end of do-file

. 
end of do-file
